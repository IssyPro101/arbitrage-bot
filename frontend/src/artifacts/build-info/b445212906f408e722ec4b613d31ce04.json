{"id":"b445212906f408e722ec4b613d31ce04","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthentication {\n    /**\n     * @dev Returns the action identifier associated with the external function described by `selector`.\n     */\n    function getActionId(bytes4 selector) external view returns (bytes32);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\n */\ninterface ISignaturesValidator {\n    /**\n     * @dev Returns the EIP712 domain separator.\n     */\n    function getDomainSeparator() external view returns (bytes32);\n\n    /**\n     * @dev Returns the next nonce used by an address to sign messages.\n     */\n    function getNextNonce(address user) external view returns (uint256);\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"../openzeppelin/IERC20.sol\";\n\n/**\n * @dev Interface for WETH9.\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\n */\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n\n    function withdraw(uint256 amount) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n * types.\n *\n * This concept is unrelated to a Pool's Asset Managers.\n */\ninterface IAsset {\n    // solhint-disable-previous-line no-empty-blocks\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IAuthorizer {\n    /**\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\n     */\n    function canPerform(\n        bytes32 actionId,\n        address account,\n        address where\n    ) external view returns (bool);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\n\nimport \"./IVault.sol\";\nimport \"./IAuthorizer.sol\";\n\ninterface IProtocolFeesCollector {\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\n\n    function withdrawCollectedFees(\n        IERC20[] calldata tokens,\n        uint256[] calldata amounts,\n        address recipient\n    ) external;\n\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\n\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\n\n    function getSwapFeePercentage() external view returns (uint256);\n\n    function getFlashLoanFeePercentage() external view returns (uint256);\n\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\n\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    function vault() external view returns (IVault);\n}\n"},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma experimental ABIEncoderV2;\n\nimport \"../solidity-utils/openzeppelin/IERC20.sol\";\nimport \"../solidity-utils/helpers/IAuthentication.sol\";\nimport \"../solidity-utils/helpers/ISignaturesValidator.sol\";\nimport \"../solidity-utils/helpers/ITemporarilyPausable.sol\";\nimport \"../solidity-utils/misc/IWETH.sol\";\n\nimport \"./IAsset.sol\";\nimport \"./IAuthorizer.sol\";\nimport \"./IFlashLoanRecipient.sol\";\nimport \"./IProtocolFeesCollector.sol\";\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n * don't override one of these declarations.\n */\ninterface IVault is ISignaturesValidator, ITemporarilyPausable, IAuthentication {\n    // Generalities about the Vault:\n    //\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\n    //\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\n    //\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\n\n    // Authorizer\n    //\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\n    // can perform a given action.\n\n    /**\n     * @dev Returns the Vault's Authorizer.\n     */\n    function getAuthorizer() external view returns (IAuthorizer);\n\n    /**\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n     *\n     * Emits an `AuthorizerChanged` event.\n     */\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\n\n    /**\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\n     */\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\n\n    // Relayers\n    //\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\n    // this power, two things must occur:\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\n    //    functions.\n    //  - Each user must approve the relayer to act on their behalf.\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\n\n    /**\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\n     */\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\n\n    /**\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n     *\n     * Emits a `RelayerApprovalChanged` event.\n     */\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external;\n\n    /**\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\n     */\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\n\n    // Internal Balance\n    //\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\n    //\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\n    // operations of different kinds, with different senders and recipients, at once.\n\n    /**\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\n     */\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\n\n    /**\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n     * it lets integrators reuse a user's Vault allowance.\n     *\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\n     */\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\n\n    /**\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\n     without manual WETH wrapping or unwrapping.\n     */\n    struct UserBalanceOp {\n        UserBalanceOpKind kind;\n        IAsset asset;\n        uint256 amount;\n        address sender;\n        address payable recipient;\n    }\n\n    // There are four possible operations in `manageUserBalance`:\n    //\n    // - DEPOSIT_INTERNAL\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\n    // relevant for relayers).\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - WITHDRAW_INTERNAL\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\n    //\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\n    // it to the recipient as ETH.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_INTERNAL\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `InternalBalanceChanged` event.\n    //\n    //\n    // - TRANSFER_EXTERNAL\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\n    // relayers, as it lets them reuse a user's Vault allowance.\n    //\n    // Reverts if the ETH sentinel value is passed.\n    //\n    // Emits an `ExternalBalanceTransfer` event.\n\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\n\n    /**\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n     * interacting with Pools using Internal Balance.\n     *\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n     * address.\n     */\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\n\n    /**\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\n     */\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\n\n    // Pools\n    //\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\n    // functionality:\n    //\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\n    // which increase with the number of registered tokens.\n    //\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\n    // independent of the number of registered tokens.\n    //\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\n\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\n\n    /**\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n     * changed.\n     *\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\n     *\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n     * multiple Pools may share the same contract.\n     *\n     * Emits a `PoolRegistered` event.\n     */\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\n\n    /**\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\n     */\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\n\n    /**\n     * @dev Returns a Pool's contract address and specialization setting.\n     */\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\n\n    /**\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n     * exit by receiving registered tokens, and can only swap registered tokens.\n     *\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n     * ascending order.\n     *\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\n     * Asset Manager should not be made lightly.\n     *\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n     * different Asset Manager.\n     *\n     * Emits a `TokensRegistered` event.\n     */\n    function registerTokens(\n        bytes32 poolId,\n        IERC20[] memory tokens,\n        address[] memory assetManagers\n    ) external;\n\n    /**\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\n     */\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\n\n    /**\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n     *\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n     * must be deregistered in the same `deregisterTokens` call.\n     *\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n     *\n     * Emits a `TokensDeregistered` event.\n     */\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\n\n    /**\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\n     */\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\n\n    /**\n     * @dev Returns detailed information for a Pool's registered token.\n     *\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n     * equals the sum of `cash` and `managed`.\n     *\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n     * `managed` or `total` balance to be greater than 2^112 - 1.\n     *\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n     * change for this purpose, and will update `lastChangeBlock`.\n     *\n     * `assetManager` is the Pool's token Asset Manager.\n     */\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\n        external\n        view\n        returns (\n            uint256 cash,\n            uint256 managed,\n            uint256 lastChangeBlock,\n            address assetManager\n        );\n\n    /**\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n     * the tokens' `balances` changed.\n     *\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n     *\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n     * order as passed to `registerTokens`.\n     *\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n     * instead.\n     */\n    function getPoolTokens(bytes32 poolId)\n        external\n        view\n        returns (\n            IERC20[] memory tokens,\n            uint256[] memory balances,\n            uint256 lastChangeBlock\n        );\n\n    /**\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n     * Pool shares.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n     * these maximums.\n     *\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n     * back to the caller (not the sender, which is important for relayers).\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n     *\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\n     *\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n     * directly to the Pool's contract, as is `recipient`.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function joinPool(\n        bytes32 poolId,\n        address sender,\n        address recipient,\n        JoinPoolRequest memory request\n    ) external payable;\n\n    struct JoinPoolRequest {\n        IAsset[] assets;\n        uint256[] maxAmountsIn;\n        bytes userData;\n        bool fromInternalBalance;\n    }\n\n    /**\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n     * `getPoolTokenInfo`).\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n     * it just enforces these minimums.\n     *\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n     *\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n     *\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n     * do so will trigger a revert.\n     *\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n     * `tokens` array. This array must match the Pool's registered tokens.\n     *\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n     * passed directly to the Pool's contract.\n     *\n     * Emits a `PoolBalanceChanged` event.\n     */\n    function exitPool(\n        bytes32 poolId,\n        address sender,\n        address payable recipient,\n        ExitPoolRequest memory request\n    ) external;\n\n    struct ExitPoolRequest {\n        IAsset[] assets;\n        uint256[] minAmountsOut;\n        bytes userData;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\n     */\n    event PoolBalanceChanged(\n        bytes32 indexed poolId,\n        address indexed liquidityProvider,\n        IERC20[] tokens,\n        int256[] deltas,\n        uint256[] protocolFeeAmounts\n    );\n\n    enum PoolBalanceChangeKind { JOIN, EXIT }\n\n    // Swaps\n    //\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\n    //\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\n    // individual swaps.\n    //\n    // There are two swap kinds:\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\n    //\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\n    // the final intended token.\n    //\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\n    // much less gas than they would otherwise.\n    //\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\n    // updating the Pool's internal accounting).\n    //\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\n    //\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\n    //\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\n    //\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\n\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    /**\n     * @dev Performs a swap with a single Pool.\n     *\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n     * taken from the Pool, which must be greater than or equal to `limit`.\n     *\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n     * sent to the Pool, which must be less than or equal to `limit`.\n     *\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\n     *\n     * Emits a `Swap` event.\n     */\n    function swap(\n        SingleSwap memory singleSwap,\n        FundManagement memory funds,\n        uint256 limit,\n        uint256 deadline\n    ) external payable returns (uint256);\n\n    /**\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\n     * the `kind` value.\n     *\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct SingleSwap {\n        bytes32 poolId;\n        SwapKind kind;\n        IAsset assetIn;\n        IAsset assetOut;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n     *\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n     * the same index in the `assets` array.\n     *\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n     * `amountOut` depending on the swap kind.\n     *\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n     *\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n     * or unwrapped from WETH by the Vault.\n     *\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\n     *\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n     * equivalent `swap` call.\n     *\n     * Emits `Swap` events.\n     */\n    function batchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds,\n        int256[] memory limits,\n        uint256 deadline\n    ) external payable returns (int256[] memory);\n\n    /**\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\n     *\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\n     * from the previous swap, depending on the swap kind.\n     *\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\n     * used to extend swap behavior.\n     */\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    /**\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\n     */\n    event Swap(\n        bytes32 indexed poolId,\n        IERC20 indexed tokenIn,\n        IERC20 indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n\n    /**\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\n     * `recipient` account.\n     *\n     * If the caller is not `sender`, it must be an authorized relayer for them.\n     *\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\n     * `joinPool`.\n     *\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\n     * transferred. This matches the behavior of `exitPool`.\n     *\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\n     * revert.\n     */\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    /**\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n     *\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n     * receives are the same that an equivalent `batchSwap` call would receive.\n     *\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n     * approve them for the Vault, or even know a user's address.\n     *\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n     * eth_call instead of eth_sendTransaction.\n     */\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] memory swaps,\n        IAsset[] memory assets,\n        FundManagement memory funds\n    ) external returns (int256[] memory assetDeltas);\n\n    // Flash Loans\n\n    /**\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\n     *\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n     * for each token contract. `tokens` must be sorted in ascending order.\n     *\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n     * `receiveFlashLoan` call.\n     *\n     * Emits `FlashLoan` events.\n     */\n    function flashLoan(\n        IFlashLoanRecipient recipient,\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        bytes memory userData\n    ) external;\n\n    /**\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\n     */\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\n\n    // Asset Management\n    //\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\n    //\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\n    //\n    // This concept is unrelated to the IAsset interface.\n\n    /**\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n     *\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\n     * operations of different kinds, with different Pools and tokens, at once.\n     *\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\n     */\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\n\n    struct PoolBalanceOp {\n        PoolBalanceOpKind kind;\n        bytes32 poolId;\n        IERC20 token;\n        uint256 amount;\n    }\n\n    /**\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\n     *\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\n     *\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\n     */\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\n\n    /**\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\n     */\n    event PoolBalanceManaged(\n        bytes32 indexed poolId,\n        address indexed assetManager,\n        IERC20 indexed token,\n        int256 cashDelta,\n        int256 managedDelta\n    );\n\n    // Protocol Fees\n    //\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\n    // permissioned accounts.\n    //\n    // There are two kinds of protocol fees:\n    //\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\n    //\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\n    // exiting a Pool in debt without first paying their share.\n\n    /**\n     * @dev Returns the current protocol fee module.\n     */\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\n\n    /**\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n     * error in some part of the system.\n     *\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n     *\n     * While the contract is paused, the following features are disabled:\n     * - depositing and transferring internal balance\n     * - transferring external balance (using the Vault's allowance)\n     * - swaps\n     * - joining Pools\n     * - Asset Manager interactions\n     *\n     * Internal Balance can still be withdrawn, and Pools exited.\n     */\n    function setPaused(bool paused) external;\n\n    /**\n     * @dev Returns the Vault's WETH instance.\n     */\n    function WETH() external view returns (IWETH);\n    // solhint-disable-previous-line func-name-mixedcase\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/ArbitrageBot.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\r\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface IUniswapV2Router {\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n}\r\n\r\ncontract ArbitrageBot is IFlashLoanRecipient, Ownable {\r\n    address public profitRecipitent;\r\n    IVault public vault;\r\n\r\n    constructor(address _vault, address _profitRecipitent) {\r\n        vault = IVault(_vault);\r\n        profitRecipitent = _profitRecipitent;\r\n    }\r\n\r\n    function startArbitrage(\r\n        address tokenBorrow, \r\n        uint amountBorrow, \r\n        address[] calldata path1, \r\n        address[] calldata path2,\r\n        address[] calldata dexPath \r\n    ) external onlyOwner {\r\n        IERC20[] memory tokens = new IERC20[](1);\r\n        uint256[] memory amounts = new uint256[](1);\r\n\r\n        tokens[0] = IERC20(tokenBorrow);\r\n        amounts[0] = amountBorrow;\r\n\r\n        _makeFlashLoan(tokens, amounts, abi.encode(path1, path2, dexPath));\r\n    }\r\n\r\n    function _executeArbitrage(address[] memory path1, address[] memory path2, address[] memory dexPath, uint amount) internal {\r\n\r\n        uint deadline = block.timestamp + 20 minutes;  // Ensure trade is valid for 20 minutes\r\n\r\n        // Access both uniswap routers\r\n        IUniswapV2Router uniswapV2Router = IUniswapV2Router(dexPath[0]);\r\n        IUniswapV2Router uniswapV21Router = IUniswapV2Router(dexPath[1]);\r\n\r\n        IERC20(path1[0]).approve(address(uniswapV2Router), amount); // Approve first swap\r\n\r\n        // Buy input asset on first Uniswap V2 dex\r\n        uniswapV2Router.swapExactTokensForTokens(\r\n            amount, \r\n            1,  // Minimum output (would need a better way to estimate this)\r\n            path1, \r\n            address(this), \r\n            deadline\r\n        );\r\n\r\n        // Then Uniswap V2.1\r\n        uint amountV21 = IERC20(path1[1]).balanceOf(address(this));  // Get the output token amount from V2 swap\r\n\r\n        IERC20(path2[0]).approve(address(uniswapV21Router), amountV21); // Approve second swap\r\n\r\n        // Sell asset on second Uniswap V2 dex\r\n        uniswapV21Router.swapExactTokensForTokens(\r\n            amountV21, \r\n            1, \r\n            path2, \r\n            address(this), \r\n            deadline\r\n        );\r\n        \r\n    }\r\n\r\n    function _makeFlashLoan(\r\n        IERC20[] memory tokens,\r\n        uint256[] memory amounts,\r\n        bytes memory userData\r\n    ) internal {\r\n      vault.flashLoan(this, tokens, amounts, userData);\r\n    }\r\n\r\n    function receiveFlashLoan(\r\n        IERC20[] memory tokens,\r\n        uint256[] memory amounts,\r\n        uint256[] memory feeAmounts,\r\n        bytes memory userData\r\n    ) external override {\r\n        require(msg.sender == address(vault), \"Message sender must be Balancer Vault!\");\r\n        \r\n        // Decode the user data to get paths\r\n        (address[] memory path1, address[] memory path2, address[] memory dexPath) = abi.decode(userData, (address[], address[], address[]));\r\n\r\n        // Assuming the amount to start the arbitrage with is the first amount in the amounts array\r\n        uint256 arbitrageAmount = amounts[0];\r\n        \r\n        // Perform arbitrage\r\n        _executeArbitrage(path1, path2, dexPath, arbitrageAmount);\r\n\r\n        // Repay flash loan\r\n        IERC20(tokens[0]).transfer(address(vault), amounts[0]);\r\n    }\r\n\r\n    function withdrawProfit(\r\n        IERC20 token\r\n    ) external onlyOwner {\r\n        token.transfer(profitRecipitent, token.balanceOf(address(this)));\r\n    }\r\n}\r\n\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ArbitrageBot.sol:89:9:\n   |\n89 |         uint256[] memory feeAmounts,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2930,"file":"contracts/ArbitrageBot.sol","start":2903},"type":"Warning"}],"sources":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","exportedSymbols":{"IAuthentication":[10]},"id":11,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthentication","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":10,"linearizedBaseContracts":[10],"name":"IAuthentication","nameLocation":"731:15:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"753:116:0","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":9,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nameLocation":"883:11:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"selector","nameLocation":"902:8:0","nodeType":"VariableDeclaration","scope":9,"src":"895:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3,"name":"bytes4","nodeType":"ElementaryTypeName","src":"895:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"894:17:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9,"src":"935:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"934:9:0"},"scope":10,"src":"874:70:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11,"src":"721:225:0","usedErrors":[]}],"src":"688:259:0"},"id":0},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","exportedSymbols":{"ISignaturesValidator":[28]},"id":29,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":12,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:1"},{"abstract":false,"baseContracts":[],"canonicalName":"ISignaturesValidator","contractDependencies":[],"contractKind":"interface","documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"721:95:1","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":28,"linearizedBaseContracts":[28],"name":"ISignaturesValidator","nameLocation":"827:20:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"854:60:1","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nameLocation":"928:18:1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"946:2:1"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"972:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16,"name":"bytes32","nodeType":"ElementaryTypeName","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"971:9:1"},"scope":28,"src":"919:62:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"987:83:1","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nameLocation":"1084:12:1","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"user","nameLocation":"1105:4:1","nodeType":"VariableDeclaration","scope":27,"src":"1097:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1096:14:1"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"1134:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:1"},"scope":28,"src":"1075:68:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":29,"src":"817:328:1","usedErrors":[]}],"src":"688:458:1"},"id":1},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","exportedSymbols":{"ITemporarilyPausable":[47]},"id":48,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":30,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:2"},{"abstract":false,"baseContracts":[],"canonicalName":"ITemporarilyPausable","contractDependencies":[],"contractKind":"interface","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"721:61:2","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":47,"linearizedBaseContracts":[47],"name":"ITemporarilyPausable","nameLocation":"793:20:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"820:83:2","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"eventSelector":"9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64","id":36,"name":"PausedStateChanged","nameLocation":"914:18:2","nodeType":"EventDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"938:6:2","nodeType":"VariableDeclaration","scope":36,"src":"933:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"933:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"932:13:2"},"src":"908:38:2"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"952:57:2","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nameLocation":"1023:14:2","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1037:2:2"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"paused","nameLocation":"1105:6:2","nodeType":"VariableDeclaration","scope":46,"src":"1100:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":39,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"pauseWindowEndTime","nameLocation":"1133:18:2","nodeType":"VariableDeclaration","scope":46,"src":"1125:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"bufferPeriodEndTime","nameLocation":"1173:19:2","nodeType":"VariableDeclaration","scope":46,"src":"1165:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1165:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1086:116:2"},"scope":47,"src":"1014:189:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":48,"src":"783:422:2","usedErrors":[]}],"src":"688:518:2"},"id":2},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","exportedSymbols":{"IERC20":[140],"IWETH":[62]},"id":63,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":49,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:3"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../openzeppelin/IERC20.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":63,"sourceUnit":141,"src":"721:36:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":52,"name":"IERC20","nameLocations":["929:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"929:6:3"},"id":53,"nodeType":"InheritanceSpecifier","src":"929:6:3"}],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"759:150:3","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":62,"linearizedBaseContracts":[62,140],"name":"IWETH","nameLocation":"920:5:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":56,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"951:7:3","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"958:2:3"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"977:0:3"},"scope":62,"src":"942:36:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":61,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"993:8:3","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"amount","nameLocation":"1010:6:3","nodeType":"VariableDeclaration","scope":61,"src":"1002:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:16:3"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1026:0:3"},"scope":62,"src":"984:43:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":63,"src":"910:119:3","usedErrors":[]}],"src":"688:342:3"},"id":3},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","exportedSymbols":{"IERC20":[140]},"id":141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":64,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"66:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":140,"linearizedBaseContracts":[140],"name":"IERC20","nameLocation":"147:6:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"160:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"240:11:4","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"251:2:4"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":71,"src":"277:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:4"},"scope":140,"src":"231:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"292:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"378:9:4","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"account","nameLocation":"396:7:4","nodeType":"VariableDeclaration","scope":79,"src":"388:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:4"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"428:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:4"},"scope":140,"src":"369:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"443:209:4","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"666:8:4","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"recipient","nameLocation":"683:9:4","nodeType":"VariableDeclaration","scope":89,"src":"675:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"amount","nameLocation":"702:6:4","nodeType":"VariableDeclaration","scope":89,"src":"694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:4"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":86,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:4"},"scope":140,"src":"657:77:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"740:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1018:9:4","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"owner","nameLocation":"1036:5:4","nodeType":"VariableDeclaration","scope":99,"src":"1028:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"spender","nameLocation":"1051:7:4","nodeType":"VariableDeclaration","scope":99,"src":"1043:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:4"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":99,"src":"1083:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:4"},"scope":140,"src":"1009:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1098:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":109,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1754:7:4","nodeType":"FunctionDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"spender","nameLocation":"1770:7:4","nodeType":"VariableDeclaration","scope":109,"src":"1762:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"amount","nameLocation":"1787:6:4","nodeType":"VariableDeclaration","scope":109,"src":"1779:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:4"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":109,"src":"1813:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":106,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:4"},"scope":140,"src":"1745:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"1825:296:4","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2135:12:4","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"sender","nameLocation":"2165:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2157:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"recipient","nameLocation":"2189:9:4","nodeType":"VariableDeclaration","scope":121,"src":"2181:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"amount","nameLocation":"2216:6:4","nodeType":"VariableDeclaration","scope":121,"src":"2208:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2208:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:81:4"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":121,"src":"2247:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":118,"name":"bool","nodeType":"ElementaryTypeName","src":"2247:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2246:6:4"},"scope":140,"src":"2126:127:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"2259:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":130,"name":"Transfer","nameLocation":"2428:8:4","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2453:4:4","nodeType":"VariableDeclaration","scope":130,"src":"2437:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2475:2:4","nodeType":"VariableDeclaration","scope":130,"src":"2459:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2487:5:4","nodeType":"VariableDeclaration","scope":130,"src":"2479:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:57:4"},"src":"2422:72:4"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"2500:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":139,"name":"Approval","nameLocation":"2659:8:4","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2684:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2668:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2707:7:4","nodeType":"VariableDeclaration","scope":139,"src":"2691:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2724:5:4","nodeType":"VariableDeclaration","scope":139,"src":"2716:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:63:4"},"src":"2653:78:4"}],"scope":141,"src":"137:2596:4","usedErrors":[]}],"src":"33:2701:4"},"id":4},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","exportedSymbols":{"IAsset":[144]},"id":145,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":142,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"721:309:5","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":144,"linearizedBaseContracts":[144],"name":"IAsset","nameLocation":"1041:6:5","nodeType":"ContractDefinition","nodes":[],"scope":145,"src":"1031:73:5","usedErrors":[]}],"src":"688:417:5"},"id":5},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","exportedSymbols":{"IAuthorizer":[159]},"id":160,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":146,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IAuthorizer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":159,"linearizedBaseContracts":[159],"name":"IAuthorizer","nameLocation":"731:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"749:121:6","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nameLocation":"884:10:6","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"actionId","nameLocation":"912:8:6","nodeType":"VariableDeclaration","scope":158,"src":"904:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"904:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"938:7:6","nodeType":"VariableDeclaration","scope":158,"src":"930:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"where","nameLocation":"963:5:6","nodeType":"VariableDeclaration","scope":158,"src":"955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"894:80:6"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"998:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"997:6:6"},"scope":159,"src":"875:129:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":160,"src":"721:285:6","usedErrors":[]}],"src":"688:319:6"},"id":6},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","exportedSymbols":{"IERC20":[140],"IFlashLoanRecipient":[179]},"id":180,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":161,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:7"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":141,"src":"773:51:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFlashLoanRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":179,"linearizedBaseContracts":[179],"name":"IFlashLoanRecipient","nameLocation":"836:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"862:496:7","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":178,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"1372:16:7","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"tokens","nameLocation":"1414:6:7","nodeType":"VariableDeclaration","scope":178,"src":"1398:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":165,"nodeType":"UserDefinedTypeName","pathNode":{"id":164,"name":"IERC20","nameLocations":["1398:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1398:6:7"},"referencedDeclaration":140,"src":"1398:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":166,"nodeType":"ArrayTypeName","src":"1398:8:7","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"amounts","nameLocation":"1447:7:7","nodeType":"VariableDeclaration","scope":178,"src":"1430:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":169,"nodeType":"ArrayTypeName","src":"1430:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"feeAmounts","nameLocation":"1481:10:7","nodeType":"VariableDeclaration","scope":178,"src":"1464:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":172,"nodeType":"ArrayTypeName","src":"1464:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"userData","nameLocation":"1514:8:7","nodeType":"VariableDeclaration","scope":178,"src":"1501:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1388:140:7"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"1537:0:7"},"scope":179,"src":"1363:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":180,"src":"826:714:7","usedErrors":[]}],"src":"688:853:7"},"id":7},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[761],"IWETH":[62]},"id":249,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"688:31:8"},{"id":182,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"720:33:8"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":141,"src":"755:51:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"./IVault.sol","id":184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":762,"src":"808:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":160,"src":"831:27:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProtocolFeesCollector","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"IProtocolFeesCollector","nameLocation":"870:22:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"a9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc","id":189,"name":"SwapFeePercentageChanged","nameLocation":"905:24:8","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"938:20:8","nodeType":"VariableDeclaration","scope":189,"src":"930:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"929:30:8"},"src":"899:61:8"},{"anonymous":false,"eventSelector":"5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a","id":193,"name":"FlashLoanFeePercentageChanged","nameLocation":"971:29:8","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1009:25:8","nodeType":"VariableDeclaration","scope":193,"src":"1001:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:35:8"},"src":"965:71:8"},{"functionSelector":"6daefab6","id":205,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nameLocation":"1051:21:8","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"tokens","nameLocation":"1100:6:8","nodeType":"VariableDeclaration","scope":205,"src":"1082:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":195,"nodeType":"UserDefinedTypeName","pathNode":{"id":194,"name":"IERC20","nameLocations":["1082:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1082:6:8"},"referencedDeclaration":140,"src":"1082:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":196,"nodeType":"ArrayTypeName","src":"1082:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"amounts","nameLocation":"1135:7:8","nodeType":"VariableDeclaration","scope":205,"src":"1116:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":199,"nodeType":"ArrayTypeName","src":"1116:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"recipient","nameLocation":"1160:9:8","nodeType":"VariableDeclaration","scope":205,"src":"1152:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:103:8"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"1184:0:8"},"scope":248,"src":"1042:143:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nameLocation":"1200:20:8","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"newSwapFeePercentage","nameLocation":"1229:20:8","nodeType":"VariableDeclaration","scope":210,"src":"1221:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:30:8"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"1259:0:8"},"scope":248,"src":"1191:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":215,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nameLocation":"1275:25:8","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"newFlashLoanFeePercentage","nameLocation":"1309:25:8","nodeType":"VariableDeclaration","scope":215,"src":"1301:33:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:35:8"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1344:0:8"},"scope":248,"src":"1266:79:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":220,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nameLocation":"1360:20:8","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"1380:2:8"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1405:9:8"},"scope":248,"src":"1351:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":225,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nameLocation":"1430:25:8","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"1455:2:8"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":225,"src":"1481:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:9:8"},"scope":248,"src":"1421:69:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nameLocation":"1505:22:8","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"tokens","nameLocation":"1544:6:8","nodeType":"VariableDeclaration","scope":235,"src":"1528:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"IERC20","nameLocations":["1528:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1528:6:8"},"referencedDeclaration":140,"src":"1528:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":228,"nodeType":"ArrayTypeName","src":"1528:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"1527:24:8"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"feeAmounts","nameLocation":"1592:10:8","nodeType":"VariableDeclaration","scope":235,"src":"1575:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ArrayTypeName","src":"1575:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1574:29:8"},"scope":248,"src":"1496:108:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":241,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"1619:13:8","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"1632:2:8"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"1658:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":238,"nodeType":"UserDefinedTypeName","pathNode":{"id":237,"name":"IAuthorizer","nameLocations":["1658:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"1658:11:8"},"referencedDeclaration":159,"src":"1658:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"1657:13:8"},"scope":248,"src":"1610:61:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nameLocation":"1686:5:8","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1691:2:8"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1717:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"},"typeName":{"id":244,"nodeType":"UserDefinedTypeName","pathNode":{"id":243,"name":"IVault","nameLocations":["1717:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"1717:6:8"},"referencedDeclaration":761,"src":"1717:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"visibility":"internal"}],"src":"1716:8:8"},"scope":248,"src":"1677:48:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"860:867:8","usedErrors":[]}],"src":"688:1040:8"},"id":8},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"ast":{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","exportedSymbols":{"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IVault":[761],"IWETH":[62]},"id":762,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"688:33:9"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol","file":"../solidity-utils/openzeppelin/IERC20.sol","id":251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":141,"src":"723:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol","file":"../solidity-utils/helpers/IAuthentication.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":11,"src":"775:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol","file":"../solidity-utils/helpers/ISignaturesValidator.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":29,"src":"831:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol","file":"../solidity-utils/helpers/ITemporarilyPausable.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":48,"src":"892:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol","file":"../solidity-utils/misc/IWETH.sol","id":255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":63,"src":"953:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol","file":"./IAsset.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":145,"src":"997:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol","file":"./IAuthorizer.sol","id":257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":160,"src":"1020:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"./IFlashLoanRecipient.sol","id":258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":180,"src":"1048:35:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol","file":"./IProtocolFeesCollector.sol","id":259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":249,"src":"1084:38:9","symbolAliases":[],"unitAlias":""},{"id":260,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"1124:31:9"},{"abstract":false,"baseContracts":[{"baseName":{"id":262,"name":"ISignaturesValidator","nameLocations":["1349:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"1349:20:9"},"id":263,"nodeType":"InheritanceSpecifier","src":"1349:20:9"},{"baseName":{"id":264,"name":"ITemporarilyPausable","nameLocations":["1371:20:9"],"nodeType":"IdentifierPath","referencedDeclaration":47,"src":"1371:20:9"},"id":265,"nodeType":"InheritanceSpecifier","src":"1371:20:9"},{"baseName":{"id":266,"name":"IAuthentication","nameLocations":["1393:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":10,"src":"1393:15:9"},"id":267,"nodeType":"InheritanceSpecifier","src":"1393:15:9"}],"canonicalName":"IVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"1157:171:9","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":761,"linearizedBaseContracts":[761,10,47,28],"name":"IVault","nameLocation":"1339:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"2906:55:9","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":274,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nameLocation":"2975:13:9","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"2988:2:9"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"3014:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"IAuthorizer","nameLocations":["3014:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3014:11:9"},"referencedDeclaration":159,"src":"3014:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3013:13:9"},"scope":761,"src":"2966:61:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"3033:175:9","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nameLocation":"3222:13:9","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3248:13:9","nodeType":"VariableDeclaration","scope":281,"src":"3236:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"IAuthorizer","nameLocations":["3236:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3236:11:9"},"referencedDeclaration":159,"src":"3236:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3235:27:9"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"3271:0:9"},"scope":761,"src":"3213:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"3278:80:9","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"eventSelector":"94b979b6831a51293e2641426f97747feed46f17779fed9cd18d1ecefcfe92ef","id":287,"name":"AuthorizerChanged","nameLocation":"3369:17:9","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nameLocation":"3407:13:9","nodeType":"VariableDeclaration","scope":287,"src":"3387:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"},"typeName":{"id":284,"nodeType":"UserDefinedTypeName","pathNode":{"id":283,"name":"IAuthorizer","nameLocations":["3387:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3387:11:9"},"referencedDeclaration":159,"src":"3387:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$159","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"3386:35:9"},"src":"3363:59:9"},{"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"4518:99:9","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nameLocation":"4631:18:9","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"user","nameLocation":"4658:4:9","nodeType":"VariableDeclaration","scope":297,"src":"4650:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"relayer","nameLocation":"4672:7:9","nodeType":"VariableDeclaration","scope":297,"src":"4664:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"4664:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4649:31:9"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"4704:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":294,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4703:6:9"},"scope":761,"src":"4622:88:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"4716:178:9","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nameLocation":"4908:18:9","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"sender","nameLocation":"4944:6:9","nodeType":"VariableDeclaration","scope":307,"src":"4936:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"4936:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"relayer","nameLocation":"4968:7:9","nodeType":"VariableDeclaration","scope":307,"src":"4960:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"approved","nameLocation":"4990:8:9","nodeType":"VariableDeclaration","scope":307,"src":"4985:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"4985:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4926:78:9"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"5013:0:9"},"scope":761,"src":"4899:115:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"5020:104:9","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"eventSelector":"46961fdb4502b646d5095fba7600486a8ac05041d55cdf0f16ed677180b5cad8","id":316,"name":"RelayerApprovalChanged","nameLocation":"5135:22:9","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"5174:7:9","nodeType":"VariableDeclaration","scope":316,"src":"5158:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5199:6:9","nodeType":"VariableDeclaration","scope":316,"src":"5183:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"5183:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"5212:8:9","nodeType":"VariableDeclaration","scope":316,"src":"5207:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":313,"name":"bool","nodeType":"ElementaryTypeName","src":"5207:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5157:64:9"},"src":"5129:93:9"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"5930:78:9","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nameLocation":"6022:18:9","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"user","nameLocation":"6049:4:9","nodeType":"VariableDeclaration","scope":329,"src":"6041:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"6041:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"tokens","nameLocation":"6071:6:9","nodeType":"VariableDeclaration","scope":329,"src":"6055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":321,"nodeType":"UserDefinedTypeName","pathNode":{"id":320,"name":"IERC20","nameLocations":["6055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"6055:6:9"},"referencedDeclaration":140,"src":"6055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":322,"nodeType":"ArrayTypeName","src":"6055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"6040:38:9"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"6102:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":326,"nodeType":"ArrayTypeName","src":"6102:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6101:18:9"},"scope":761,"src":"6013:107:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"6126:416:9","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nameLocation":"6556:17:9","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"ops","nameLocation":"6597:3:9","nodeType":"VariableDeclaration","scope":337,"src":"6574:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$350_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"UserBalanceOp","nameLocations":["6574:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":350,"src":"6574:13:9"},"referencedDeclaration":350,"src":"6574:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$350_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":333,"nodeType":"ArrayTypeName","src":"6574:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$350_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"6573:28:9"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"6618:0:9"},"scope":761,"src":"6547:72:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","id":350,"members":[{"constant":false,"id":340,"mutability":"mutable","name":"kind","nameLocation":"6854:4:9","nodeType":"VariableDeclaration","scope":350,"src":"6836:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$355","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"UserBalanceOpKind","nameLocations":["6836:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"6836:17:9"},"referencedDeclaration":355,"src":"6836:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$355","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"asset","nameLocation":"6875:5:9","nodeType":"VariableDeclaration","scope":350,"src":"6868:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":342,"nodeType":"UserDefinedTypeName","pathNode":{"id":341,"name":"IAsset","nameLocations":["6868:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"6868:6:9"},"referencedDeclaration":144,"src":"6868:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"amount","nameLocation":"6898:6:9","nodeType":"VariableDeclaration","scope":350,"src":"6890:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"6890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"sender","nameLocation":"6922:6:9","nodeType":"VariableDeclaration","scope":350,"src":"6914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"6914:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"recipient","nameLocation":"6954:9:9","nodeType":"VariableDeclaration","scope":350,"src":"6938:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"6938:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nameLocation":"6812:13:9","nodeType":"StructDefinition","scope":761,"src":"6805:165:9","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":355,"members":[{"id":351,"name":"DEPOSIT_INTERNAL","nameLocation":"8608:16:9","nodeType":"EnumValue","src":"8608:16:9"},{"id":352,"name":"WITHDRAW_INTERNAL","nameLocation":"8626:17:9","nodeType":"EnumValue","src":"8626:17:9"},{"id":353,"name":"TRANSFER_INTERNAL","nameLocation":"8645:17:9","nodeType":"EnumValue","src":"8645:17:9"},{"id":354,"name":"TRANSFER_EXTERNAL","nameLocation":"8664:17:9","nodeType":"EnumValue","src":"8664:17:9"}],"name":"UserBalanceOpKind","nameLocation":"8588:17:9","nodeType":"EnumDefinition","src":"8583:100:9"},{"anonymous":false,"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"8689:317:9","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"eventSelector":"18e1ea4139e68413d7d08aa752e71568e36b2c5bf940893314c2c5b01eaa0c42","id":365,"name":"InternalBalanceChanged","nameLocation":"9017:22:9","nodeType":"EventDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"9056:4:9","nodeType":"VariableDeclaration","scope":365,"src":"9040:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"9040:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9077:5:9","nodeType":"VariableDeclaration","scope":365,"src":"9062:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":360,"nodeType":"UserDefinedTypeName","pathNode":{"id":359,"name":"IERC20","nameLocations":["9062:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9062:6:9"},"referencedDeclaration":140,"src":"9062:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":363,"indexed":false,"mutability":"mutable","name":"delta","nameLocation":"9091:5:9","nodeType":"VariableDeclaration","scope":365,"src":"9084:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":362,"name":"int256","nodeType":"ElementaryTypeName","src":"9084:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9039:58:9"},"src":"9011:87:9"},{"anonymous":false,"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"9104:131:9","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"eventSelector":"540a1a3f28340caec336c81d8d7b3df139ee5cdc1839a4f283d7ebb7eaae2d5c","id":377,"name":"ExternalBalanceTransfer","nameLocation":"9246:23:9","nodeType":"EventDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"9285:5:9","nodeType":"VariableDeclaration","scope":377,"src":"9270:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":368,"nodeType":"UserDefinedTypeName","pathNode":{"id":367,"name":"IERC20","nameLocations":["9270:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"9270:6:9"},"referencedDeclaration":140,"src":"9270:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":371,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"9308:6:9","nodeType":"VariableDeclaration","scope":377,"src":"9292:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"9292:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"9324:9:9","nodeType":"VariableDeclaration","scope":377,"src":"9316:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"9316:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":375,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"9343:6:9","nodeType":"VariableDeclaration","scope":377,"src":"9335:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"9335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:81:9"},"src":"9240:111:9"},{"canonicalName":"IVault.PoolSpecialization","id":381,"members":[{"id":378,"name":"GENERAL","nameLocation":"10457:7:9","nodeType":"EnumValue","src":"10457:7:9"},{"id":379,"name":"MINIMAL_SWAP_INFO","nameLocation":"10466:17:9","nodeType":"EnumValue","src":"10466:17:9"},{"id":380,"name":"TWO_TOKEN","nameLocation":"10485:9:9","nodeType":"EnumValue","src":"10485:9:9"}],"name":"PoolSpecialization","nameLocation":"10436:18:9","nodeType":"EnumDefinition","src":"10431:65:9"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"10502:702:9","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":390,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nameLocation":"11218:12:9","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"specialization","nameLocation":"11250:14:9","nodeType":"VariableDeclaration","scope":390,"src":"11231:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":384,"nodeType":"UserDefinedTypeName","pathNode":{"id":383,"name":"PoolSpecialization","nameLocations":["11231:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11231:18:9"},"referencedDeclaration":381,"src":"11231:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11230:35:9"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"11284:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11283:9:9"},"scope":761,"src":"11209:84:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"11299:84:9","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"eventSelector":"3c13bc30b8e878c53fd2a36b679409c073afd75950be43d8858768e956fbc20e","id":400,"name":"PoolRegistered","nameLocation":"11394:14:9","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"11425:6:9","nodeType":"VariableDeclaration","scope":400,"src":"11409:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11409:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":395,"indexed":true,"mutability":"mutable","name":"poolAddress","nameLocation":"11449:11:9","nodeType":"VariableDeclaration","scope":400,"src":"11433:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"11433:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":false,"mutability":"mutable","name":"specialization","nameLocation":"11481:14:9","nodeType":"VariableDeclaration","scope":400,"src":"11462:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":397,"nodeType":"UserDefinedTypeName","pathNode":{"id":396,"name":"PoolSpecialization","nameLocations":["11462:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11462:18:9"},"referencedDeclaration":381,"src":"11462:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11408:88:9"},"src":"11388:109:9"},{"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"11503:85:9","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"11602:7:9","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"poolId","nameLocation":"11618:6:9","nodeType":"VariableDeclaration","scope":411,"src":"11610:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11610:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"11609:16:9"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"11649:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"11649:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"11658:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":408,"nodeType":"UserDefinedTypeName","pathNode":{"id":407,"name":"PoolSpecialization","nameLocations":["11658:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":381,"src":"11658:18:9"},"referencedDeclaration":381,"src":"11658:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$381","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"11648:29:9"},"scope":761,"src":"11593:85:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"11684:1422:9","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":424,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nameLocation":"13120:14:9","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"poolId","nameLocation":"13152:6:9","nodeType":"VariableDeclaration","scope":424,"src":"13144:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13144:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"tokens","nameLocation":"13184:6:9","nodeType":"VariableDeclaration","scope":424,"src":"13168:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["13168:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13168:6:9"},"referencedDeclaration":140,"src":"13168:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":417,"nodeType":"ArrayTypeName","src":"13168:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"assetManagers","nameLocation":"13217:13:9","nodeType":"VariableDeclaration","scope":424,"src":"13200:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"13200:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":420,"nodeType":"ArrayTypeName","src":"13200:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13134:102:9"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"13245:0:9"},"scope":761,"src":"13111:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"13252:89:9","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"eventSelector":"f5847d3f2197b16cdcd2098ec95d0905cd1abdaf415f07bb7cef2bba8ac5dec4","id":436,"name":"TokensRegistered","nameLocation":"13352:16:9","nodeType":"EventDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"13385:6:9","nodeType":"VariableDeclaration","scope":436,"src":"13369:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13369:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":431,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"13402:6:9","nodeType":"VariableDeclaration","scope":436,"src":"13393:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":429,"nodeType":"UserDefinedTypeName","pathNode":{"id":428,"name":"IERC20","nameLocations":["13393:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"13393:6:9"},"referencedDeclaration":140,"src":"13393:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":430,"nodeType":"ArrayTypeName","src":"13393:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":434,"indexed":false,"mutability":"mutable","name":"assetManagers","nameLocation":"13420:13:9","nodeType":"VariableDeclaration","scope":436,"src":"13410:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"13410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":433,"nodeType":"ArrayTypeName","src":"13410:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13368:66:9"},"src":"13346:89:9"},{"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"13441:567:9","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":446,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nameLocation":"14022:16:9","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"poolId","nameLocation":"14047:6:9","nodeType":"VariableDeclaration","scope":446,"src":"14039:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14039:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"tokens","nameLocation":"14071:6:9","nodeType":"VariableDeclaration","scope":446,"src":"14055:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":441,"nodeType":"UserDefinedTypeName","pathNode":{"id":440,"name":"IERC20","nameLocations":["14055:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14055:6:9"},"referencedDeclaration":140,"src":"14055:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":442,"nodeType":"ArrayTypeName","src":"14055:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14038:40:9"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"14087:0:9"},"scope":761,"src":"14013:75:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"14094:93:9","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"eventSelector":"7dcdc6d02ef40c7c1a7046a011b058bd7f988fa14e20a66344f9d4e60657d610","id":455,"name":"TokensDeregistered","nameLocation":"14198:18:9","nodeType":"EventDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"14233:6:9","nodeType":"VariableDeclaration","scope":455,"src":"14217:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14217:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":453,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"14250:6:9","nodeType":"VariableDeclaration","scope":455,"src":"14241:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"IERC20","nameLocations":["14241:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"14241:6:9"},"referencedDeclaration":140,"src":"14241:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":452,"nodeType":"ArrayTypeName","src":"14241:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"14216:41:9"},"src":"14192:66:9"},{"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"14264:1043:9","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nameLocation":"15321:16:9","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"poolId","nameLocation":"15346:6:9","nodeType":"VariableDeclaration","scope":472,"src":"15338:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15338:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"token","nameLocation":"15361:5:9","nodeType":"VariableDeclaration","scope":472,"src":"15354:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":460,"nodeType":"UserDefinedTypeName","pathNode":{"id":459,"name":"IERC20","nameLocations":["15354:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"15354:6:9"},"referencedDeclaration":140,"src":"15354:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"15337:30:9"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"cash","nameLocation":"15436:4:9","nodeType":"VariableDeclaration","scope":472,"src":"15428:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"15428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"managed","nameLocation":"15462:7:9","nodeType":"VariableDeclaration","scope":472,"src":"15454:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"15454:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"15491:15:9","nodeType":"VariableDeclaration","scope":472,"src":"15483:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"15483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"assetManager","nameLocation":"15528:12:9","nodeType":"VariableDeclaration","scope":472,"src":"15520:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"15520:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15414:136:9"},"scope":761,"src":"15312:239:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"15557:828:9","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":487,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nameLocation":"16399:13:9","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"poolId","nameLocation":"16421:6:9","nodeType":"VariableDeclaration","scope":487,"src":"16413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:16:9"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"tokens","nameLocation":"16505:6:9","nodeType":"VariableDeclaration","scope":487,"src":"16489:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"IERC20","nameLocations":["16489:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"16489:6:9"},"referencedDeclaration":140,"src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":479,"nodeType":"ArrayTypeName","src":"16489:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"balances","nameLocation":"16542:8:9","nodeType":"VariableDeclaration","scope":487,"src":"16525:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"16525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":482,"nodeType":"ArrayTypeName","src":"16525:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"lastChangeBlock","nameLocation":"16572:15:9","nodeType":"VariableDeclaration","scope":487,"src":"16564:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"16564:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16475:122:9"},"scope":761,"src":"16390:208:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"16604:2304:9","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nameLocation":"18922:8:9","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"poolId","nameLocation":"18948:6:9","nodeType":"VariableDeclaration","scope":500,"src":"18940:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18940:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"sender","nameLocation":"18972:6:9","nodeType":"VariableDeclaration","scope":500,"src":"18964:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"18964:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"recipient","nameLocation":"18996:9:9","nodeType":"VariableDeclaration","scope":500,"src":"18988:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"request","nameLocation":"19038:7:9","nodeType":"VariableDeclaration","scope":500,"src":"19015:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$512_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":496,"nodeType":"UserDefinedTypeName","pathNode":{"id":495,"name":"JoinPoolRequest","nameLocations":["19015:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":512,"src":"19015:15:9"},"referencedDeclaration":512,"src":"19015:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$512_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"18930:121:9"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"19068:0:9"},"scope":761,"src":"18913:156:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":512,"members":[{"constant":false,"id":504,"mutability":"mutable","name":"assets","nameLocation":"19117:6:9","nodeType":"VariableDeclaration","scope":512,"src":"19108:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":502,"nodeType":"UserDefinedTypeName","pathNode":{"id":501,"name":"IAsset","nameLocations":["19108:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"19108:6:9"},"referencedDeclaration":144,"src":"19108:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":503,"nodeType":"ArrayTypeName","src":"19108:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"maxAmountsIn","nameLocation":"19143:12:9","nodeType":"VariableDeclaration","scope":512,"src":"19133:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"19133:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":506,"nodeType":"ArrayTypeName","src":"19133:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"userData","nameLocation":"19171:8:9","nodeType":"VariableDeclaration","scope":512,"src":"19165:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":508,"name":"bytes","nodeType":"ElementaryTypeName","src":"19165:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"19194:19:9","nodeType":"VariableDeclaration","scope":512,"src":"19189:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":510,"name":"bool","nodeType":"ElementaryTypeName","src":"19189:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nameLocation":"19082:15:9","nodeType":"StructDefinition","scope":761,"src":"19075:145:9","visibility":"public"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"19226:2489:9","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":525,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nameLocation":"21729:8:9","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"poolId","nameLocation":"21755:6:9","nodeType":"VariableDeclaration","scope":525,"src":"21747:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"sender","nameLocation":"21779:6:9","nodeType":"VariableDeclaration","scope":525,"src":"21771:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"21771:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"recipient","nameLocation":"21811:9:9","nodeType":"VariableDeclaration","scope":525,"src":"21795:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"21795:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"request","nameLocation":"21853:7:9","nodeType":"VariableDeclaration","scope":525,"src":"21830:30:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$537_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":521,"nodeType":"UserDefinedTypeName","pathNode":{"id":520,"name":"ExitPoolRequest","nameLocations":["21830:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":537,"src":"21830:15:9"},"referencedDeclaration":537,"src":"21830:15:9","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$537_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"21737:129:9"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"21875:0:9"},"scope":761,"src":"21720:156:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":537,"members":[{"constant":false,"id":529,"mutability":"mutable","name":"assets","nameLocation":"21924:6:9","nodeType":"VariableDeclaration","scope":537,"src":"21915:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"IAsset","nameLocations":["21915:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"21915:6:9"},"referencedDeclaration":144,"src":"21915:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":528,"nodeType":"ArrayTypeName","src":"21915:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"minAmountsOut","nameLocation":"21950:13:9","nodeType":"VariableDeclaration","scope":537,"src":"21940:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"21940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":531,"nodeType":"ArrayTypeName","src":"21940:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"userData","nameLocation":"21979:8:9","nodeType":"VariableDeclaration","scope":537,"src":"21973:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"21973:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"toInternalBalance","nameLocation":"22002:17:9","nodeType":"VariableDeclaration","scope":537,"src":"21997:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":535,"name":"bool","nodeType":"ElementaryTypeName","src":"21997:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nameLocation":"21889:15:9","nodeType":"StructDefinition","scope":761,"src":"21882:144:9","visibility":"public"},{"anonymous":false,"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"22032:116:9","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"eventSelector":"e5ce249087ce04f05a957192435400fd97868dba0e6a4b4c049abf8af80dae78","id":554,"name":"PoolBalanceChanged","nameLocation":"22159:18:9","nodeType":"EventDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"22203:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22187:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22187:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nameLocation":"22235:17:9","nodeType":"VariableDeclaration","scope":554,"src":"22219:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"22219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"22271:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22262:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"IERC20","nameLocations":["22262:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"22262:6:9"},"referencedDeclaration":140,"src":"22262:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":545,"nodeType":"ArrayTypeName","src":"22262:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":549,"indexed":false,"mutability":"mutable","name":"deltas","nameLocation":"22296:6:9","nodeType":"VariableDeclaration","scope":554,"src":"22287:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":547,"name":"int256","nodeType":"ElementaryTypeName","src":"22287:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":548,"nodeType":"ArrayTypeName","src":"22287:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":552,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nameLocation":"22322:18:9","nodeType":"VariableDeclaration","scope":554,"src":"22312:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"22312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"nodeType":"ArrayTypeName","src":"22312:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"22177:169:9"},"src":"22153:194:9"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":557,"members":[{"id":555,"name":"JOIN","nameLocation":"22382:4:9","nodeType":"EnumValue","src":"22382:4:9"},{"id":556,"name":"EXIT","nameLocation":"22388:4:9","nodeType":"EnumValue","src":"22388:4:9"}],"name":"PoolBalanceChangeKind","nameLocation":"22358:21:9","nodeType":"EnumDefinition","src":"22353:41:9"},{"canonicalName":"IVault.SwapKind","id":560,"members":[{"id":558,"name":"GIVEN_IN","nameLocation":"25995:8:9","nodeType":"EnumValue","src":"25995:8:9"},{"id":559,"name":"GIVEN_OUT","nameLocation":"26005:9:9","nodeType":"EnumValue","src":"26005:9:9"}],"name":"SwapKind","nameLocation":"25984:8:9","nodeType":"EnumDefinition","src":"25979:37:9"},{"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"26022:587:9","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"26623:4:9","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"singleSwap","nameLocation":"26655:10:9","nodeType":"VariableDeclaration","scope":576,"src":"26637:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$592_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":563,"nodeType":"UserDefinedTypeName","pathNode":{"id":562,"name":"SingleSwap","nameLocations":["26637:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"26637:10:9"},"referencedDeclaration":592,"src":"26637:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$592_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":567,"mutability":"mutable","name":"funds","nameLocation":"26697:5:9","nodeType":"VariableDeclaration","scope":576,"src":"26675:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"FundManagement","nameLocations":["26675:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"26675:14:9"},"referencedDeclaration":653,"src":"26675:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"limit","nameLocation":"26720:5:9","nodeType":"VariableDeclaration","scope":576,"src":"26712:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"26712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"deadline","nameLocation":"26743:8:9","nodeType":"VariableDeclaration","scope":576,"src":"26735:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"26735:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26627:130:9"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"26784:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"26784:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26783:9:9"},"scope":761,"src":"26614:179:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","id":592,"members":[{"constant":false,"id":578,"mutability":"mutable","name":"poolId","nameLocation":"27385:6:9","nodeType":"VariableDeclaration","scope":592,"src":"27377:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27377:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"kind","nameLocation":"27410:4:9","nodeType":"VariableDeclaration","scope":592,"src":"27401:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":580,"nodeType":"UserDefinedTypeName","pathNode":{"id":579,"name":"SwapKind","nameLocations":["27401:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"27401:8:9"},"referencedDeclaration":560,"src":"27401:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"assetIn","nameLocation":"27431:7:9","nodeType":"VariableDeclaration","scope":592,"src":"27424:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":583,"nodeType":"UserDefinedTypeName","pathNode":{"id":582,"name":"IAsset","nameLocations":["27424:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27424:6:9"},"referencedDeclaration":144,"src":"27424:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"assetOut","nameLocation":"27455:8:9","nodeType":"VariableDeclaration","scope":592,"src":"27448:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"},"typeName":{"id":586,"nodeType":"UserDefinedTypeName","pathNode":{"id":585,"name":"IAsset","nameLocations":["27448:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"27448:6:9"},"referencedDeclaration":144,"src":"27448:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"amount","nameLocation":"27481:6:9","nodeType":"VariableDeclaration","scope":592,"src":"27473:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"27473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"userData","nameLocation":"27503:8:9","nodeType":"VariableDeclaration","scope":592,"src":"27497:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"27497:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nameLocation":"27356:10:9","nodeType":"StructDefinition","scope":761,"src":"27349:169:9","visibility":"public"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"27524:1980:9","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":618,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"29518:9:9","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"kind","nameLocation":"29546:4:9","nodeType":"VariableDeclaration","scope":618,"src":"29537:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":595,"nodeType":"UserDefinedTypeName","pathNode":{"id":594,"name":"SwapKind","nameLocations":["29537:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"29537:8:9"},"referencedDeclaration":560,"src":"29537:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"swaps","nameLocation":"29583:5:9","nodeType":"VariableDeclaration","scope":618,"src":"29560:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":598,"nodeType":"UserDefinedTypeName","pathNode":{"id":597,"name":"BatchSwapStep","nameLocations":["29560:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"29560:13:9"},"referencedDeclaration":629,"src":"29560:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$629_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":599,"nodeType":"ArrayTypeName","src":"29560:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"assets","nameLocation":"29614:6:9","nodeType":"VariableDeclaration","scope":618,"src":"29598:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":602,"nodeType":"UserDefinedTypeName","pathNode":{"id":601,"name":"IAsset","nameLocations":["29598:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"29598:6:9"},"referencedDeclaration":144,"src":"29598:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":603,"nodeType":"ArrayTypeName","src":"29598:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"funds","nameLocation":"29652:5:9","nodeType":"VariableDeclaration","scope":618,"src":"29630:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":606,"nodeType":"UserDefinedTypeName","pathNode":{"id":605,"name":"FundManagement","nameLocations":["29630:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"29630:14:9"},"referencedDeclaration":653,"src":"29630:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"limits","nameLocation":"29683:6:9","nodeType":"VariableDeclaration","scope":618,"src":"29667:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":608,"name":"int256","nodeType":"ElementaryTypeName","src":"29667:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":609,"nodeType":"ArrayTypeName","src":"29667:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"deadline","nameLocation":"29707:8:9","nodeType":"VariableDeclaration","scope":618,"src":"29699:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"29699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29527:194:9"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":618,"src":"29748:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":614,"name":"int256","nodeType":"ElementaryTypeName","src":"29748:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":615,"nodeType":"ArrayTypeName","src":"29748:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"29747:17:9"},"scope":761,"src":"29509:256:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","id":629,"members":[{"constant":false,"id":620,"mutability":"mutable","name":"poolId","nameLocation":"30366:6:9","nodeType":"VariableDeclaration","scope":629,"src":"30358:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30358:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"assetInIndex","nameLocation":"30390:12:9","nodeType":"VariableDeclaration","scope":629,"src":"30382:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"30382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"assetOutIndex","nameLocation":"30420:13:9","nodeType":"VariableDeclaration","scope":629,"src":"30412:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"30412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"amount","nameLocation":"30451:6:9","nodeType":"VariableDeclaration","scope":629,"src":"30443:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"30443:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"userData","nameLocation":"30473:8:9","nodeType":"VariableDeclaration","scope":629,"src":"30467:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"30467:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nameLocation":"30334:13:9","nodeType":"StructDefinition","scope":761,"src":"30327:161:9","visibility":"public"},{"anonymous":false,"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"30494:92:9","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"eventSelector":"2170c741c41531aec20e7c107c24eecfdd15e69c9bb0a8dd37b1840b9e0b207b","id":644,"name":"Swap","nameLocation":"30597:4:9","nodeType":"EventDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"30627:6:9","nodeType":"VariableDeclaration","scope":644,"src":"30611:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30611:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":true,"mutability":"mutable","name":"tokenIn","nameLocation":"30658:7:9","nodeType":"VariableDeclaration","scope":644,"src":"30643:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":634,"nodeType":"UserDefinedTypeName","pathNode":{"id":633,"name":"IERC20","nameLocations":["30643:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30643:6:9"},"referencedDeclaration":140,"src":"30643:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":638,"indexed":true,"mutability":"mutable","name":"tokenOut","nameLocation":"30690:8:9","nodeType":"VariableDeclaration","scope":644,"src":"30675:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":637,"nodeType":"UserDefinedTypeName","pathNode":{"id":636,"name":"IERC20","nameLocations":["30675:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"30675:6:9"},"referencedDeclaration":140,"src":"30675:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":640,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"30716:8:9","nodeType":"VariableDeclaration","scope":644,"src":"30708:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"30708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"30742:9:9","nodeType":"VariableDeclaration","scope":644,"src":"30734:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"30734:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30601:156:9"},"src":"30591:167:9"},{"canonicalName":"IVault.FundManagement","id":653,"members":[{"constant":false,"id":646,"mutability":"mutable","name":"sender","nameLocation":"31729:6:9","nodeType":"VariableDeclaration","scope":653,"src":"31721:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"31721:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"fromInternalBalance","nameLocation":"31750:19:9","nodeType":"VariableDeclaration","scope":653,"src":"31745:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"31745:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"recipient","nameLocation":"31795:9:9","nodeType":"VariableDeclaration","scope":653,"src":"31779:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"31779:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"toInternalBalance","nameLocation":"31819:17:9","nodeType":"VariableDeclaration","scope":653,"src":"31814:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"31814:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nameLocation":"31696:14:9","nodeType":"StructDefinition","scope":761,"src":"31689:154:9","visibility":"public"},{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"31849:1027:9","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":674,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nameLocation":"32890:14:9","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"kind","nameLocation":"32923:4:9","nodeType":"VariableDeclaration","scope":674,"src":"32914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"SwapKind","nameLocations":["32914:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":560,"src":"32914:8:9"},"referencedDeclaration":560,"src":"32914:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$560","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"swaps","nameLocation":"32960:5:9","nodeType":"VariableDeclaration","scope":674,"src":"32937:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":659,"nodeType":"UserDefinedTypeName","pathNode":{"id":658,"name":"BatchSwapStep","nameLocations":["32937:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":629,"src":"32937:13:9"},"referencedDeclaration":629,"src":"32937:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$629_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":660,"nodeType":"ArrayTypeName","src":"32937:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$629_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"assets","nameLocation":"32991:6:9","nodeType":"VariableDeclaration","scope":674,"src":"32975:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"IAsset","nameLocations":["32975:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"32975:6:9"},"referencedDeclaration":144,"src":"32975:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$144","typeString":"contract IAsset"}},"id":664,"nodeType":"ArrayTypeName","src":"32975:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$144_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"funds","nameLocation":"33029:5:9","nodeType":"VariableDeclaration","scope":674,"src":"33007:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":667,"nodeType":"UserDefinedTypeName","pathNode":{"id":666,"name":"FundManagement","nameLocations":["33007:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":653,"src":"33007:14:9"},"referencedDeclaration":653,"src":"33007:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$653_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"32904:136:9"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"assetDeltas","nameLocation":"33075:11:9","nodeType":"VariableDeclaration","scope":674,"src":"33059:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":670,"name":"int256","nodeType":"ElementaryTypeName","src":"33059:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":671,"nodeType":"ArrayTypeName","src":"33059:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33058:29:9"},"scope":761,"src":"32881:207:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"33114:604:9","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"33732:9:9","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"recipient","nameLocation":"33771:9:9","nodeType":"VariableDeclaration","scope":690,"src":"33751:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"IFlashLoanRecipient","nameLocations":["33751:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"33751:19:9"},"referencedDeclaration":179,"src":"33751:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokens","nameLocation":"33806:6:9","nodeType":"VariableDeclaration","scope":690,"src":"33790:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":680,"nodeType":"UserDefinedTypeName","pathNode":{"id":679,"name":"IERC20","nameLocations":["33790:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"33790:6:9"},"referencedDeclaration":140,"src":"33790:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":681,"nodeType":"ArrayTypeName","src":"33790:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"amounts","nameLocation":"33839:7:9","nodeType":"VariableDeclaration","scope":690,"src":"33822:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"33822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":684,"nodeType":"ArrayTypeName","src":"33822:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"userData","nameLocation":"33869:8:9","nodeType":"VariableDeclaration","scope":690,"src":"33856:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"33856:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33741:142:9"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"33892:0:9"},"scope":761,"src":"33723:170:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"33899:88:9","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"eventSelector":"0d7d75e01ab95780d3cd1c8ec0dd6c2ce19e3a20427eec8bf53283b6fb8e95f0","id":703,"name":"FlashLoan","nameLocation":"33998:9:9","nodeType":"EventDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"34036:9:9","nodeType":"VariableDeclaration","scope":703,"src":"34008:37:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":693,"nodeType":"UserDefinedTypeName","pathNode":{"id":692,"name":"IFlashLoanRecipient","nameLocations":["34008:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"34008:19:9"},"referencedDeclaration":179,"src":"34008:19:9","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$179","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":697,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"34062:5:9","nodeType":"VariableDeclaration","scope":703,"src":"34047:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":696,"nodeType":"UserDefinedTypeName","pathNode":{"id":695,"name":"IERC20","nameLocations":["34047:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"34047:6:9"},"referencedDeclaration":140,"src":"34047:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":699,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"34077:6:9","nodeType":"VariableDeclaration","scope":703,"src":"34069:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"34069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"34093:9:9","nodeType":"VariableDeclaration","scope":703,"src":"34085:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"34085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34007:96:9"},"src":"33992:112:9"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"35100:434:9","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nameLocation":"35548:17:9","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"ops","nameLocation":"35589:3:9","nodeType":"VariableDeclaration","scope":711,"src":"35566:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$722_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":706,"nodeType":"UserDefinedTypeName","pathNode":{"id":705,"name":"PoolBalanceOp","nameLocations":["35566:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":722,"src":"35566:13:9"},"referencedDeclaration":722,"src":"35566:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$722_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":707,"nodeType":"ArrayTypeName","src":"35566:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$722_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"35565:28:9"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"35602:0:9"},"scope":761,"src":"35539:64:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":722,"members":[{"constant":false,"id":714,"mutability":"mutable","name":"kind","nameLocation":"35658:4:9","nodeType":"VariableDeclaration","scope":722,"src":"35640:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$726","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":713,"nodeType":"UserDefinedTypeName","pathNode":{"id":712,"name":"PoolBalanceOpKind","nameLocations":["35640:17:9"],"nodeType":"IdentifierPath","referencedDeclaration":726,"src":"35640:17:9"},"referencedDeclaration":726,"src":"35640:17:9","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$726","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"poolId","nameLocation":"35680:6:9","nodeType":"VariableDeclaration","scope":722,"src":"35672:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35672:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"token","nameLocation":"35703:5:9","nodeType":"VariableDeclaration","scope":722,"src":"35696:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":718,"nodeType":"UserDefinedTypeName","pathNode":{"id":717,"name":"IERC20","nameLocations":["35696:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"35696:6:9"},"referencedDeclaration":140,"src":"35696:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"amount","nameLocation":"35726:6:9","nodeType":"VariableDeclaration","scope":722,"src":"35718:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"35718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nameLocation":"35616:13:9","nodeType":"StructDefinition","scope":761,"src":"35609:130:9","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","id":726,"members":[{"id":723,"name":"WITHDRAW","nameLocation":"36261:8:9","nodeType":"EnumValue","src":"36261:8:9"},{"id":724,"name":"DEPOSIT","nameLocation":"36271:7:9","nodeType":"EnumValue","src":"36271:7:9"},{"id":725,"name":"UPDATE","nameLocation":"36280:6:9","nodeType":"EnumValue","src":"36280:6:9"}],"name":"PoolBalanceOpKind","nameLocation":"36241:17:9","nodeType":"EnumDefinition","src":"36236:52:9"},{"anonymous":false,"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"36294:109:9","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"eventSelector":"6edcaf6241105b4c94c2efdbf3a6b12458eb3d07be3a0e81d24b13c44045fe7a","id":740,"name":"PoolBalanceManaged","nameLocation":"36414:18:9","nodeType":"EventDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"36458:6:9","nodeType":"VariableDeclaration","scope":740,"src":"36442:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36442:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":731,"indexed":true,"mutability":"mutable","name":"assetManager","nameLocation":"36490:12:9","nodeType":"VariableDeclaration","scope":740,"src":"36474:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"36474:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"36527:5:9","nodeType":"VariableDeclaration","scope":740,"src":"36512:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"IERC20","nameLocations":["36512:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"36512:6:9"},"referencedDeclaration":140,"src":"36512:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":736,"indexed":false,"mutability":"mutable","name":"cashDelta","nameLocation":"36549:9:9","nodeType":"VariableDeclaration","scope":740,"src":"36542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":735,"name":"int256","nodeType":"ElementaryTypeName","src":"36542:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":738,"indexed":false,"mutability":"mutable","name":"managedDelta","nameLocation":"36575:12:9","nodeType":"VariableDeclaration","scope":740,"src":"36568:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":737,"name":"int256","nodeType":"ElementaryTypeName","src":"36568:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36432:161:9"},"src":"36408:186:9"},{"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"37471:64:9","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":747,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nameLocation":"37549:24:9","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"37573:2:9"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"37599:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"IProtocolFeesCollector","nameLocations":["37599:22:9"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"37599:22:9"},"referencedDeclaration":248,"src":"37599:22:9","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$248","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"37598:24:9"},"scope":761,"src":"37540:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"37629:635:9","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"38278:9:9","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"paused","nameLocation":"38293:6:9","nodeType":"VariableDeclaration","scope":753,"src":"38288:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":749,"name":"bool","nodeType":"ElementaryTypeName","src":"38288:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38287:13:9"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"38309:0:9"},"scope":761,"src":"38269:41:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"38316:58:9","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":760,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"38388:4:9","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"38392:2:9"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":760,"src":"38418:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"},"typeName":{"id":757,"nodeType":"UserDefinedTypeName","pathNode":{"id":756,"name":"IWETH","nameLocations":["38418:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"38418:5:9"},"referencedDeclaration":62,"src":"38418:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$62","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"38417:7:9"},"scope":761,"src":"38379:46:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":762,"src":"1329:37155:9","usedErrors":[]}],"src":"688:37797:9"},"id":9},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[896],"Ownable":[874]},"id":875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":763,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":764,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":875,"sourceUnit":897,"src":"127:30:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":766,"name":"Context","nameLocations":["683:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":896,"src":"683:7:10"},"id":767,"nodeType":"InheritanceSpecifier","src":"683:7:10"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"159:494:10","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":874,"linearizedBaseContracts":[874,896],"name":"Ownable","nameLocation":"672:7:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":769,"mutability":"mutable","name":"_owner","nameLocation":"713:6:10","nodeType":"VariableDeclaration","scope":874,"src":"697:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":775,"name":"OwnershipTransferred","nameLocation":"732:20:10","nodeType":"EventDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:10","nodeType":"VariableDeclaration","scope":775,"src":"753:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:10","nodeType":"VariableDeclaration","scope":775,"src":"784:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:10"},"src":"726:84:10"},{"body":{"id":784,"nodeType":"Block","src":"926:49:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":780,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"955:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":779,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"936:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"936:32:10"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"816:91:10","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":785,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"923:2:10"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"926:0:10"},"scope":874,"src":"912:63:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"1084:41:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":788,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1094:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"1094:13:10"},{"id":791,"nodeType":"PlaceholderStatement","src":"1117:1:10"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"981:77:10","text":" @dev Throws if called by any account other than the owner."},"id":793,"name":"onlyOwner","nameLocation":"1072:9:10","nodeType":"ModifierDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"1081:2:10"},"src":"1063:62:10","virtual":false,"visibility":"internal"},{"body":{"id":801,"nodeType":"Block","src":"1256:30:10","statements":[{"expression":{"id":799,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"1273:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":798,"id":800,"nodeType":"Return","src":"1266:13:10"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"1131:65:10","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":802,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:10","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"1215:2:10"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"1247:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:10"},"scope":874,"src":"1201:85:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":815,"nodeType":"Block","src":"1404:85:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":807,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"1422:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":809,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"1433:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"1414:68:10"}]},"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"1292:62:10","text":" @dev Throws if the sender is not the owner."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:10","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"1379:2:10"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"1404:0:10"},"scope":874,"src":"1359:130:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"1878:47:10","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:10","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":822,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"1888:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":828,"nodeType":"ExpressionStatement","src":"1888:30:10"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1495:324:10","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":830,"implemented":true,"kind":"function","modifiers":[{"id":820,"kind":"modifierInvocation","modifierName":{"id":819,"name":"onlyOwner","nameLocations":["1868:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":793,"src":"1868:9:10"},"nodeType":"ModifierInvocation","src":"1868:9:10"}],"name":"renounceOwnership","nameLocation":"1833:17:10","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"1850:2:10"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"1878:0:10"},"scope":874,"src":"1824:101:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":852,"nodeType":"Block","src":"2144:128:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":839,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2162:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:10","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"ExpressionStatement","src":"2154:73:10"},{"expression":{"arguments":[{"id":849,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2256:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":848,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2237:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"2237:28:10"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"1931:138:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":853,"implemented":true,"kind":"function","modifiers":[{"id":836,"kind":"modifierInvocation","modifierName":{"id":835,"name":"onlyOwner","nameLocations":["2134:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":793,"src":"2134:9:10"},"nodeType":"ModifierInvocation","src":"2134:9:10"}],"name":"transferOwnership","nameLocation":"2083:17:10","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:10","nodeType":"VariableDeclaration","scope":853,"src":"2101:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:10"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"2144:0:10"},"scope":874,"src":"2074:198:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":872,"nodeType":"Block","src":"2489:124:10","statements":[{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:10","nodeType":"VariableDeclaration","scope":872,"src":"2499:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":862,"initialValue":{"id":861,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2518:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:10"},{"expression":{"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":863,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2534:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":864,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"2543:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":866,"nodeType":"ExpressionStatement","src":"2534:17:10"},{"eventCall":{"arguments":[{"id":868,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2587:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"2597:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":867,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"2566:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"EmitStatement","src":"2561:45:10"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"2278:143:10","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:10","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:10","nodeType":"VariableDeclaration","scope":873,"src":"2454:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:10"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"2489:0:10"},"scope":874,"src":"2426:187:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":875,"src":"654:1961:10","usedErrors":[]}],"src":"102:2514:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[896]},"id":897,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":876,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"111:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":896,"linearizedBaseContracts":[896],"name":"Context","nameLocation":"626:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":885,"nodeType":"Block","src":"702:34:11","statements":[{"expression":{"expression":{"id":882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:11","memberName":"sender","nodeType":"MemberAccess","src":"719:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":881,"id":884,"nodeType":"Return","src":"712:17:11"}]},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:11","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"659:2:11"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"693:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:11"},"scope":896,"src":"640:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"809:32:11","statements":[{"expression":{"expression":{"id":891,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:11","memberName":"data","nodeType":"MemberAccess","src":"826:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":890,"id":893,"nodeType":"Return","src":"819:15:11"}]},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:11","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"759:2:11"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"793:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":888,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:11"},"scope":896,"src":"742:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":897,"src":"608:235:11","usedErrors":[]}],"src":"86:758:11"},"id":11},"contracts/ArbitrageBot.sol":{"ast":{"absolutePath":"contracts/ArbitrageBot.sol","exportedSymbols":{"ArbitrageBot":[1246],"Context":[896],"IAsset":[144],"IAuthentication":[10],"IAuthorizer":[159],"IERC20":[140],"IFlashLoanRecipient":[179],"IProtocolFeesCollector":[248],"ISignaturesValidator":[28],"ITemporarilyPausable":[47],"IUniswapV2Router":[919],"IVault":[761],"IWETH":[62],"Ownable":[874]},"id":1247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":898,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol","id":899,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1247,"sourceUnit":762,"src":"60:65:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","file":"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol","id":900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1247,"sourceUnit":180,"src":"127:78:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1247,"sourceUnit":875,"src":"207:52:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":919,"linearizedBaseContracts":[919],"name":"IUniswapV2Router","nameLocation":"273:16:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38ed1739","id":918,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"306:24:12","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"amountIn","nameLocation":"346:8:12","nodeType":"VariableDeclaration","scope":918,"src":"341:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint","nodeType":"ElementaryTypeName","src":"341:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"amountOutMin","nameLocation":"370:12:12","nodeType":"VariableDeclaration","scope":918,"src":"365:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint","nodeType":"ElementaryTypeName","src":"365:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"path","nameLocation":"412:4:12","nodeType":"VariableDeclaration","scope":918,"src":"393:23:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":907,"nodeType":"ArrayTypeName","src":"393:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"to","nameLocation":"435:2:12","nodeType":"VariableDeclaration","scope":918,"src":"427:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"deadline","nameLocation":"453:8:12","nodeType":"VariableDeclaration","scope":918,"src":"448:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint","nodeType":"ElementaryTypeName","src":"448:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"330:138:12"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"amounts","nameLocation":"501:7:12","nodeType":"VariableDeclaration","scope":918,"src":"487:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":914,"name":"uint","nodeType":"ElementaryTypeName","src":"487:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":915,"nodeType":"ArrayTypeName","src":"487:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"486:23:12"},"scope":919,"src":"297:213:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1247,"src":"263:250:12","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":920,"name":"IFlashLoanRecipient","nameLocations":["542:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":179,"src":"542:19:12"},"id":921,"nodeType":"InheritanceSpecifier","src":"542:19:12"},{"baseName":{"id":922,"name":"Ownable","nameLocations":["563:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":874,"src":"563:7:12"},"id":923,"nodeType":"InheritanceSpecifier","src":"563:7:12"}],"canonicalName":"ArbitrageBot","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1246,"linearizedBaseContracts":[1246,874,896,179],"name":"ArbitrageBot","nameLocation":"526:12:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"00affb73","id":925,"mutability":"mutable","name":"profitRecipitent","nameLocation":"593:16:12","nodeType":"VariableDeclaration","scope":1246,"src":"578:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fbfa77cf","id":928,"mutability":"mutable","name":"vault","nameLocation":"630:5:12","nodeType":"VariableDeclaration","scope":1246,"src":"616:19:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"},"typeName":{"id":927,"nodeType":"UserDefinedTypeName","pathNode":{"id":926,"name":"IVault","nameLocations":["616:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"616:6:12"},"referencedDeclaration":761,"src":"616:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"visibility":"public"},{"body":{"id":945,"nodeType":"Block","src":"699:88:12","statements":[{"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":935,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"710:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":937,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"725:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":936,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"718:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$761_$","typeString":"type(contract IVault)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"718:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"src":"710:22:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"id":940,"nodeType":"ExpressionStatement","src":"710:22:12"},{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":941,"name":"profitRecipitent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"743:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":942,"name":"_profitRecipitent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"762:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"743:36:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":944,"nodeType":"ExpressionStatement","src":"743:36:12"}]},"id":946,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"_vault","nameLocation":"664:6:12","nodeType":"VariableDeclaration","scope":946,"src":"656:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"_profitRecipitent","nameLocation":"680:17:12","nodeType":"VariableDeclaration","scope":946,"src":"672:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"655:43:12"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"699:0:12"},"scope":1246,"src":"644:143:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1012,"nodeType":"Block","src":"1014:272:12","statements":[{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"tokens","nameLocation":"1041:6:12","nodeType":"VariableDeclaration","scope":1012,"src":"1025:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":966,"nodeType":"UserDefinedTypeName","pathNode":{"id":965,"name":"IERC20","nameLocations":["1025:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1025:6:12"},"referencedDeclaration":140,"src":"1025:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":967,"nodeType":"ArrayTypeName","src":"1025:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"id":975,"initialValue":{"arguments":[{"hexValue":"31","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1063:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1050:12:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":970,"nodeType":"UserDefinedTypeName","pathNode":{"id":969,"name":"IERC20","nameLocations":["1054:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"1054:6:12"},"referencedDeclaration":140,"src":"1054:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":971,"nodeType":"ArrayTypeName","src":"1054:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1025:40:12"},{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"amounts","nameLocation":"1093:7:12","nodeType":"VariableDeclaration","scope":1012,"src":"1076:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ArrayTypeName","src":"1076:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":986,"initialValue":{"arguments":[{"hexValue":"31","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1117:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1103:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":982,"nodeType":"ArrayTypeName","src":"1107:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1103:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1076:43:12"},{"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":987,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1132:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":989,"indexExpression":{"hexValue":"30","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1139:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1132:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":991,"name":"tokenBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1151:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":990,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1144:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1144:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"src":"1132:31:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":994,"nodeType":"ExpressionStatement","src":"1132:31:12"},{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":995,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"1174:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":997,"indexExpression":{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1174:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":998,"name":"amountBorrow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"1187:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1174:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1000,"nodeType":"ExpressionStatement","src":"1174:25:12"},{"expression":{"arguments":[{"id":1002,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1227:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":1003,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"1235:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":1006,"name":"path1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1255:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1007,"name":"path2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"1262:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},{"id":1008,"name":"dexPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1269:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"},{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}],"expression":{"id":1004,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1244:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1248:6:12","memberName":"encode","nodeType":"MemberAccess","src":"1244:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1244:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1001,"name":"_makeFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"1212:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20[] memory,uint256[] memory,bytes memory)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"1212:66:12"}]},"functionSelector":"17c7c23a","id":1013,"implemented":true,"kind":"function","modifiers":[{"id":962,"kind":"modifierInvocation","modifierName":{"id":961,"name":"onlyOwner","nameLocations":["1004:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":793,"src":"1004:9:12"},"nodeType":"ModifierInvocation","src":"1004:9:12"}],"name":"startArbitrage","nameLocation":"804:14:12","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"tokenBorrow","nameLocation":"837:11:12","nodeType":"VariableDeclaration","scope":1013,"src":"829:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"amountBorrow","nameLocation":"865:12:12","nodeType":"VariableDeclaration","scope":1013,"src":"860:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint","nodeType":"ElementaryTypeName","src":"860:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"path1","nameLocation":"908:5:12","nodeType":"VariableDeclaration","scope":1013,"src":"889:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":952,"nodeType":"ArrayTypeName","src":"889:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"path2","nameLocation":"944:5:12","nodeType":"VariableDeclaration","scope":1013,"src":"925:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":955,"nodeType":"ArrayTypeName","src":"925:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"dexPath","nameLocation":"979:7:12","nodeType":"VariableDeclaration","scope":1013,"src":"960:26:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":958,"nodeType":"ArrayTypeName","src":"960:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"818:176:12"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"1014:0:12"},"scope":1246,"src":"795:491:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1118,"nodeType":"Block","src":"1417:1161:12","statements":[{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"deadline","nameLocation":"1435:8:12","nodeType":"VariableDeclaration","scope":1118,"src":"1430:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint","nodeType":"ElementaryTypeName","src":"1430:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1033,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1029,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1446:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1452:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"1446:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1464:10:12","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"20"},"src":"1446:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1430:44:12"},{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"uniswapV2Router","nameLocation":"1585:15:12","nodeType":"VariableDeclaration","scope":1118,"src":"1568:32:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"},"typeName":{"id":1035,"nodeType":"UserDefinedTypeName","pathNode":{"id":1034,"name":"IUniswapV2Router","nameLocations":["1568:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":919,"src":"1568:16:12"},"referencedDeclaration":919,"src":"1568:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"visibility":"internal"}],"id":1042,"initialValue":{"arguments":[{"baseExpression":{"id":1038,"name":"dexPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1620:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1040,"indexExpression":{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1620:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"name":"IUniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"1603:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router_$919_$","typeString":"type(contract IUniswapV2Router)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"nodeType":"VariableDeclarationStatement","src":"1568:63:12"},{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"uniswapV21Router","nameLocation":"1659:16:12","nodeType":"VariableDeclaration","scope":1118,"src":"1642:33:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"},"typeName":{"id":1044,"nodeType":"UserDefinedTypeName","pathNode":{"id":1043,"name":"IUniswapV2Router","nameLocations":["1642:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":919,"src":"1642:16:12"},"referencedDeclaration":919,"src":"1642:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"baseExpression":{"id":1047,"name":"dexPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1695:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1049,"indexExpression":{"hexValue":"31","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1703:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1695:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1046,"name":"IUniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"1678:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router_$919_$","typeString":"type(contract IUniswapV2Router)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1678:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"nodeType":"VariableDeclarationStatement","src":"1642:64:12"},{"expression":{"arguments":[{"arguments":[{"id":1060,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1752:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}],"id":1059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1744:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:12","typeDescriptions":{}}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1744:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1770:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1053,"name":"path1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1726:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1055,"indexExpression":{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1726:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1052,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"1719:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1736:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"1719:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1719:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"nodeType":"ExpressionStatement","src":"1719:58:12"},{"expression":{"arguments":[{"id":1068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1919:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1941:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":1070,"name":"path1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2019:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":1073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2048:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2040:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:12","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2069:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1065,"name":"uniswapV2Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1864:15:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1880:24:12","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":918,"src":"1864:40:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1864:224:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1077,"nodeType":"ExpressionStatement","src":"1864:224:12"},{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"amountV21","nameLocation":"2136:9:12","nodeType":"VariableDeclaration","scope":1118,"src":"2131:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint","nodeType":"ElementaryTypeName","src":"2131:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"arguments":[{"id":1088,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:12","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":1081,"name":"path1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2155:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1083,"indexExpression":{"hexValue":"31","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2161:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2155:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1080,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2148:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"2148:26:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2131:58:12"},{"expression":{"arguments":[{"arguments":[{"id":1100,"name":"uniswapV21Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2280:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}],"id":1099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2272:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2272:7:12","typeDescriptions":{}}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"amountV21","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2299:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1093,"name":"path2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2254:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1095,"indexExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2260:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2254:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1092,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2247:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2264:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":109,"src":"2247:24:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"ExpressionStatement","src":"2247:62:12"},{"expression":{"arguments":[{"id":1108,"name":"amountV21","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2449:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2474:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":1110,"name":"path2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"2491:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":1113,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:12","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"2541:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1105,"name":"uniswapV21Router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2393:16:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router_$919","typeString":"contract IUniswapV2Router"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:24:12","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":918,"src":"2393:41:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:167:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1117,"nodeType":"ExpressionStatement","src":"2393:167:12"}]},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"_executeArbitrage","nameLocation":"1303:17:12","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"path1","nameLocation":"1338:5:12","nodeType":"VariableDeclaration","scope":1119,"src":"1321:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1015,"nodeType":"ArrayTypeName","src":"1321:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"path2","nameLocation":"1362:5:12","nodeType":"VariableDeclaration","scope":1119,"src":"1345:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1018,"nodeType":"ArrayTypeName","src":"1345:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"dexPath","nameLocation":"1386:7:12","nodeType":"VariableDeclaration","scope":1119,"src":"1369:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1021,"nodeType":"ArrayTypeName","src":"1369:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"amount","nameLocation":"1400:6:12","nodeType":"VariableDeclaration","scope":1119,"src":"1395:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint","nodeType":"ElementaryTypeName","src":"1395:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1320:87:12"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"1417:0:12"},"scope":1246,"src":"1294:1284:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1140,"nodeType":"Block","src":"2726:65:12","statements":[{"expression":{"arguments":[{"id":1134,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2751:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}},{"id":1135,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"2757:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":1136,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2765:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1137,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2774:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1131,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2735:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2741:9:12","memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":690,"src":"2735:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$179_$_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"2735:48:12"}]},"id":1141,"implemented":true,"kind":"function","modifiers":[],"name":"_makeFlashLoan","nameLocation":"2595:14:12","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"tokens","nameLocation":"2636:6:12","nodeType":"VariableDeclaration","scope":1141,"src":"2620:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"IERC20","nameLocations":["2620:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"2620:6:12"},"referencedDeclaration":140,"src":"2620:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1122,"nodeType":"ArrayTypeName","src":"2620:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"amounts","nameLocation":"2670:7:12","nodeType":"VariableDeclaration","scope":1141,"src":"2653:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ArrayTypeName","src":"2653:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"userData","nameLocation":"2701:8:12","nodeType":"VariableDeclaration","scope":1141,"src":"2688:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1127,"name":"bytes","nodeType":"ElementaryTypeName","src":"2688:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2609:107:12"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2726:0:12"},"scope":1246,"src":"2586:205:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[178],"body":{"id":1222,"nodeType":"Block","src":"2988:651:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3007:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3011:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3007:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1162,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3029:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3021:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:12","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3021:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3007:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6573736167652073656e646572206d7573742062652042616c616e636572205661756c7421","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3037:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231","typeString":"literal_string \"Message sender must be Balancer Vault!\""},"value":"Message sender must be Balancer Vault!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231","typeString":"literal_string \"Message sender must be Balancer Vault!\""}],"id":1157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2999:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2999:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"2999:79:12"},{"assignments":[1172,1175,1178],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"path1","nameLocation":"3163:5:12","nodeType":"VariableDeclaration","scope":1222,"src":"3146:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"3146:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1171,"nodeType":"ArrayTypeName","src":"3146:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"path2","nameLocation":"3187:5:12","nodeType":"VariableDeclaration","scope":1222,"src":"3170:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"3170:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1174,"nodeType":"ArrayTypeName","src":"3170:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"dexPath","nameLocation":"3211:7:12","nodeType":"VariableDeclaration","scope":1222,"src":"3194:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"3194:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1177,"nodeType":"ArrayTypeName","src":"3194:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1193,"initialValue":{"arguments":[{"id":1181,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3233:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"baseExpression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:12","typeDescriptions":{}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"3244:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}},{"baseExpression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3255:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:12","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"3255:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}},{"baseExpression":{"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3266:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"3266:7:12","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"3266:9:12","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"type(address[] memory)"}}],"id":1191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3243:33:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(address[] memory),type(address[] memory))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$","typeString":"tuple(type(address[] memory),type(address[] memory),type(address[] memory))"}],"expression":{"id":1179,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3222:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3226:6:12","memberName":"decode","nodeType":"MemberAccess","src":"3222:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,address[] memory,address[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"3145:132:12"},{"assignments":[1195],"declarations":[{"constant":false,"id":1195,"mutability":"mutable","name":"arbitrageAmount","nameLocation":"3399:15:12","nodeType":"VariableDeclaration","scope":1222,"src":"3391:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1199,"initialValue":{"baseExpression":{"id":1196,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3417:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1198,"indexExpression":{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3425:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3417:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3391:36:12"},{"expression":{"arguments":[{"id":1201,"name":"path1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3496:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1202,"name":"path2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"3503:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1203,"name":"dexPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3510:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1204,"name":"arbitrageAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"3519:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_executeArbitrage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"3478:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address[] memory,address[] memory,address[] memory,uint256)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"3478:57:12"},{"expression":{"arguments":[{"arguments":[{"id":1215,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3612:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$761","typeString":"contract IVault"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3604:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"3604:7:12","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3604:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1217,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"3620:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1219,"indexExpression":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3620:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":1208,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3584:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1210,"indexExpression":{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3584:9:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}],"id":1207,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3577:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$140_$","typeString":"type(contract IERC20)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3595:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"3577:26:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"ExpressionStatement","src":"3577:54:12"}]},"functionSelector":"f04f2707","id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nameLocation":"2808:16:12","nodeType":"FunctionDefinition","overrides":{"id":1155,"nodeType":"OverrideSpecifier","overrides":[],"src":"2979:8:12"},"parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"tokens","nameLocation":"2851:6:12","nodeType":"VariableDeclaration","scope":1223,"src":"2835:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"IERC20","nameLocations":["2835:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"2835:6:12"},"referencedDeclaration":140,"src":"2835:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1144,"nodeType":"ArrayTypeName","src":"2835:8:12","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$140_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"amounts","nameLocation":"2885:7:12","nodeType":"VariableDeclaration","scope":1223,"src":"2868:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1147,"nodeType":"ArrayTypeName","src":"2868:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"feeAmounts","nameLocation":"2920:10:12","nodeType":"VariableDeclaration","scope":1223,"src":"2903:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1150,"nodeType":"ArrayTypeName","src":"2903:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"userData","nameLocation":"2954:8:12","nodeType":"VariableDeclaration","scope":1223,"src":"2941:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"2941:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2824:145:12"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"2988:0:12"},"scope":1246,"src":"2799:840:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1244,"nodeType":"Block","src":"3720:83:12","statements":[{"expression":{"arguments":[{"id":1234,"name":"profitRecipitent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3746:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1239,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3788:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ArbitrageBot_$1246","typeString":"contract ArbitrageBot"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3780:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:12","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3780:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1235,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3764:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3770:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":79,"src":"3764:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1231,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"3731:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3737:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":89,"src":"3731:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1243,"nodeType":"ExpressionStatement","src":"3731:64:12"}]},"functionSelector":"24e26241","id":1245,"implemented":true,"kind":"function","modifiers":[{"id":1229,"kind":"modifierInvocation","modifierName":{"id":1228,"name":"onlyOwner","nameLocations":["3710:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":793,"src":"3710:9:12"},"nodeType":"ModifierInvocation","src":"3710:9:12"}],"name":"withdrawProfit","nameLocation":"3656:14:12","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"token","nameLocation":"3688:5:12","nodeType":"VariableDeclaration","scope":1245,"src":"3681:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"},"typeName":{"id":1225,"nodeType":"UserDefinedTypeName","pathNode":{"id":1224,"name":"IERC20","nameLocations":["3681:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":140,"src":"3681:6:12"},"referencedDeclaration":140,"src":"3681:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$140","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"3670:30:12"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"3720:0:12"},"scope":1246,"src":"3647:156:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1247,"src":"517:3289:12","usedErrors":[]}],"src":"33:3777:12"},"id":12}},"contracts":{"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol":{"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":\"IAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol":{"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol":{"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol":{"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol":{"IAsset":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":\"IAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol":{"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":\"IAuthorizer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol":{"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol":{"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol":{"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":\"IVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"contracts/ArbitrageBot.sol":{"ArbitrageBot":{"abi":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_profitRecipitent","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"profitRecipitent","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenBorrow","type":"address"},{"internalType":"uint256","name":"amountBorrow","type":"uint256"},{"internalType":"address[]","name":"path1","type":"address[]"},{"internalType":"address[]","name":"path2","type":"address[]"},{"internalType":"address[]","name":"dexPath","type":"address[]"}],"name":"startArbitrage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"withdrawProfit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_785":{"entryPoint":null,"id":785,"parameterSlots":0,"returnSlots":0},"@_946":{"entryPoint":null,"id":946,"parameterSlots":2,"returnSlots":0},"@_msgSender_886":{"entryPoint":225,"id":886,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_873":{"entryPoint":233,"id":873,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":535,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":466,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":434,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":429,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":486,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"759:80:13","statements":[{"nodeType":"YulAssignment","src":"769:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:13"},"nodeType":"YulFunctionCall","src":"778:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:13"},"nodeType":"YulFunctionCall","src":"800:33:13"},"nodeType":"YulExpressionStatement","src":"800:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:13","type":""}],"src":"696:143:13"},{"body":{"nodeType":"YulBlock","src":"939:413:13","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:13"},"nodeType":"YulFunctionCall","src":"987:79:13"},"nodeType":"YulExpressionStatement","src":"987:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:13"},"nodeType":"YulFunctionCall","src":"956:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:13"},"nodeType":"YulFunctionCall","src":"952:32:13"},"nodeType":"YulIf","src":"949:119:13"},{"nodeType":"YulBlock","src":"1078:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:13"},"nodeType":"YulFunctionCall","src":"1164:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:13"},"nodeType":"YulFunctionCall","src":"1132:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:13"}]}]},{"nodeType":"YulBlock","src":"1216:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:13"},"nodeType":"YulFunctionCall","src":"1303:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:13"},"nodeType":"YulFunctionCall","src":"1271:64:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:13","type":""}],"src":"845:507:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001f4138038062001f41833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b611cd3806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ec578063f04f27071461010a578063f2fde38b14610126578063fbfa77cf1461014257610087565b8062affb731461008c57806317c7c23a146100aa57806324e26241146100c6578063715018a6146100e2575b600080fd5b610094610160565b6040516100a19190610c03565b60405180910390f35b6100c460048036038101906100bf9190610cf9565b610186565b005b6100e060048036038101906100db9190610e13565b6102da565b005b6100ea6103ff565b005b6100f4610413565b6040516101019190610c03565b60405180910390f35b610124600480360381019061011f9190611107565b61043c565b005b610140600480360381019061013b91906111de565b6105f8565b005b61014a61067b565b604051610157919061126a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018e6106a1565b6000600167ffffffffffffffff8111156101ab576101aa610e51565b5b6040519080825280602002602001820160405280156101d95781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156101f9576101f8610e51565b5b6040519080825280602002602001820160405280156102275781602001602082028036833780820191505090505b509050898260008151811061023f5761023e611285565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050888160008151811061028e5761028d611285565b5b6020026020010181815250506102ce82828a8a8a8a8a8a6040516020016102ba96959493929190611377565b60405160208183030381529060405261071f565b50505050505050505050565b6102e26106a1565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035a9190610c03565b602060405180830381865afa158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b91906113de565b6040518363ffffffff1660e01b81526004016103b892919061141a565b6020604051808303816000875af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061147b565b5050565b6104076106a1565b61041160006107b7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c39061152b565b60405180910390fd5b6000806000838060200190518101906104e59190611623565b92509250925060008660008151811061050157610500611285565b5b602002602001015190506105178484848461087b565b8760008151811061052b5761052a611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168960008151811061058557610584611285565b5b60200260200101516040518363ffffffff1660e01b81526004016105aa92919061141a565b6020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed919061147b565b505050505050505050565b6106006106a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106669061173c565b60405180910390fd5b610678816107b7565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a9610bba565b73ffffffffffffffffffffffffffffffffffffffff166106c7610413565b73ffffffffffffffffffffffffffffffffffffffff161461071d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610714906117a8565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c38449e308585856040518563ffffffff1660e01b815260040161078094939291906119e5565b600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006104b04261088b9190611a6e565b90506000836000815181106108a3576108a2611285565b5b602002602001015190506000846001815181106108c3576108c2611285565b5b60200260200101519050866000815181106108e1576108e0611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b383866040518363ffffffff1660e01b815260040161092392919061141a565b6020604051808303816000875af1158015610942573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610966919061147b565b508173ffffffffffffffffffffffffffffffffffffffff166338ed17398560018a30886040518663ffffffff1660e01b81526004016109a9959493929190611b63565b6000604051808303816000875af11580156109c8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109f19190611c54565b50600087600181518110610a0857610a07611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a489190610c03565b602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8991906113de565b905086600081518110610a9f57610a9e611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610ae192919061141a565b6020604051808303816000875af1158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b24919061147b565b508173ffffffffffffffffffffffffffffffffffffffff166338ed17398260018a30896040518663ffffffff1660e01b8152600401610b67959493929190611b63565b6000604051808303816000875af1158015610b86573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610baf9190611c54565b505050505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bed82610bc2565b9050919050565b610bfd81610be2565b82525050565b6000602082019050610c186000830184610bf4565b92915050565b6000604051905090565b600080fd5b600080fd5b610c3b81610be2565b8114610c4657600080fd5b50565b600081359050610c5881610c32565b92915050565b6000819050919050565b610c7181610c5e565b8114610c7c57600080fd5b50565b600081359050610c8e81610c68565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cb957610cb8610c94565b5b8235905067ffffffffffffffff811115610cd657610cd5610c99565b5b602083019150836020820283011115610cf257610cf1610c9e565b5b9250929050565b60008060008060008060008060a0898b031215610d1957610d18610c28565b5b6000610d278b828c01610c49565b9850506020610d388b828c01610c7f565b975050604089013567ffffffffffffffff811115610d5957610d58610c2d565b5b610d658b828c01610ca3565b9650965050606089013567ffffffffffffffff811115610d8857610d87610c2d565b5b610d948b828c01610ca3565b9450945050608089013567ffffffffffffffff811115610db757610db6610c2d565b5b610dc38b828c01610ca3565b92509250509295985092959890939650565b6000610de082610be2565b9050919050565b610df081610dd5565b8114610dfb57600080fd5b50565b600081359050610e0d81610de7565b92915050565b600060208284031215610e2957610e28610c28565b5b6000610e3784828501610dfe565b91505092915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8982610e40565b810181811067ffffffffffffffff82111715610ea857610ea7610e51565b5b80604052505050565b6000610ebb610c1e565b9050610ec78282610e80565b919050565b600067ffffffffffffffff821115610ee757610ee6610e51565b5b602082029050602081019050919050565b6000610f0b610f0684610ecc565b610eb1565b90508083825260208201905060208402830185811115610f2e57610f2d610c9e565b5b835b81811015610f575780610f438882610dfe565b845260208401935050602081019050610f30565b5050509392505050565b600082601f830112610f7657610f75610c94565b5b8135610f86848260208601610ef8565b91505092915050565b600067ffffffffffffffff821115610faa57610fa9610e51565b5b602082029050602081019050919050565b6000610fce610fc984610f8f565b610eb1565b90508083825260208201905060208402830185811115610ff157610ff0610c9e565b5b835b8181101561101a57806110068882610c7f565b845260208401935050602081019050610ff3565b5050509392505050565b600082601f83011261103957611038610c94565b5b8135611049848260208601610fbb565b91505092915050565b600080fd5b600067ffffffffffffffff82111561107257611071610e51565b5b61107b82610e40565b9050602081019050919050565b82818337600083830152505050565b60006110aa6110a584611057565b610eb1565b9050828152602081018484840111156110c6576110c5611052565b5b6110d1848285611088565b509392505050565b600082601f8301126110ee576110ed610c94565b5b81356110fe848260208601611097565b91505092915050565b6000806000806080858703121561112157611120610c28565b5b600085013567ffffffffffffffff81111561113f5761113e610c2d565b5b61114b87828801610f61565b945050602085013567ffffffffffffffff81111561116c5761116b610c2d565b5b61117887828801611024565b935050604085013567ffffffffffffffff81111561119957611198610c2d565b5b6111a587828801611024565b925050606085013567ffffffffffffffff8111156111c6576111c5610c2d565b5b6111d2878288016110d9565b91505092959194509250565b6000602082840312156111f4576111f3610c28565b5b600061120284828501610c49565b91505092915050565b6000819050919050565b600061123061122b61122684610bc2565b61120b565b610bc2565b9050919050565b600061124282611215565b9050919050565b600061125482611237565b9050919050565b61126481611249565b82525050565b600060208201905061127f600083018461125b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b6000819050919050565b6112d881610be2565b82525050565b60006112ea83836112cf565b60208301905092915050565b60006113056020840184610c49565b905092915050565b6000602082019050919050565b600061132683856112b4565b9350611331826112c5565b8060005b8581101561136a5761134782846112f6565b61135188826112de565b975061135c8361130d565b925050600181019050611335565b5085925050509392505050565b6000606082019050818103600083015261139281888a61131a565b905081810360208301526113a781868861131a565b905081810360408301526113bc81848661131a565b9050979650505050505050565b6000815190506113d881610c68565b92915050565b6000602082840312156113f4576113f3610c28565b5b6000611402848285016113c9565b91505092915050565b61141481610c5e565b82525050565b600060408201905061142f6000830185610bf4565b61143c602083018461140b565b9392505050565b60008115159050919050565b61145881611443565b811461146357600080fd5b50565b6000815190506114758161144f565b92915050565b60006020828403121561149157611490610c28565b5b600061149f84828501611466565b91505092915050565b600082825260208201905092915050565b7f4d6573736167652073656e646572206d7573742062652042616c616e6365722060008201527f5661756c74210000000000000000000000000000000000000000000000000000602082015250565b60006115156026836114a8565b9150611520826114b9565b604082019050919050565b6000602082019050818103600083015261154481611508565b9050919050565b600067ffffffffffffffff82111561156657611565610e51565b5b602082029050602081019050919050565b60008151905061158681610c32565b92915050565b600061159f61159a8461154b565b610eb1565b905080838252602082019050602084028301858111156115c2576115c1610c9e565b5b835b818110156115eb57806115d78882611577565b8452602084019350506020810190506115c4565b5050509392505050565b600082601f83011261160a57611609610c94565b5b815161161a84826020860161158c565b91505092915050565b60008060006060848603121561163c5761163b610c28565b5b600084015167ffffffffffffffff81111561165a57611659610c2d565b5b611666868287016115f5565b935050602084015167ffffffffffffffff81111561168757611686610c2d565b5b611693868287016115f5565b925050604084015167ffffffffffffffff8111156116b4576116b3610c2d565b5b6116c0868287016115f5565b9150509250925092565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006117266026836114a8565b9150611731826116ca565b604082019050919050565b6000602082019050818103600083015261175581611719565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117926020836114a8565b915061179d8261175c565b602082019050919050565b600060208201905081810360008301526117c181611785565b9050919050565b60006117d382611237565b9050919050565b6117e3816117c8565b82525050565b600081519050919050565b6000819050602082019050919050565b600061180f82611237565b9050919050565b61181f81611804565b82525050565b60006118318383611816565b60208301905092915050565b6000602082019050919050565b6000611855826117e9565b61185f81856112b4565b935061186a836117f4565b8060005b8381101561189b5781516118828882611825565b975061188d8361183d565b92505060018101905061186e565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118dd81610c5e565b82525050565b60006118ef83836118d4565b60208301905092915050565b6000602082019050919050565b6000611913826118a8565b61191d81856118b3565b9350611928836118c4565b8060005b8381101561195957815161194088826118e3565b975061194b836118fb565b92505060018101905061192c565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119a0578082015181840152602081019050611985565b60008484015250505050565b60006119b782611966565b6119c18185611971565b93506119d1818560208601611982565b6119da81610e40565b840191505092915050565b60006080820190506119fa60008301876117da565b8181036020830152611a0c818661184a565b90508181036040830152611a208185611908565b90508181036060830152611a3481846119ac565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a7982610c5e565b9150611a8483610c5e565b9250828201905080821115611a9c57611a9b611a3f565b5b92915050565b6000819050919050565b6000611ac7611ac2611abd84611aa2565b61120b565b610c5e565b9050919050565b611ad781611aac565b82525050565b600081519050919050565b6000819050602082019050919050565b6000602082019050919050565b6000611b1082611add565b611b1a81856112b4565b9350611b2583611ae8565b8060005b83811015611b56578151611b3d88826112de565b9750611b4883611af8565b925050600181019050611b29565b5085935050505092915050565b600060a082019050611b78600083018861140b565b611b856020830187611ace565b8181036040830152611b978186611b05565b9050611ba66060830185610bf4565b611bb3608083018461140b565b9695505050505050565b6000611bd0611bcb84610f8f565b610eb1565b90508083825260208201905060208402830185811115611bf357611bf2610c9e565b5b835b81811015611c1c5780611c0888826113c9565b845260208401935050602081019050611bf5565b5050509392505050565b600082601f830112611c3b57611c3a610c94565b5b8151611c4b848260208601611bbd565b91505092915050565b600060208284031215611c6a57611c69610c28565b5b600082015167ffffffffffffffff811115611c8857611c87610c2d565b5b611c9484828501611c26565b9150509291505056fea2646970667358221220ff001dcfc81a869a692376eb4e5fbf942fdf8e6c2f97d354d041d0f3db58129164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F41 CODESIZE SUB DUP1 PUSH3 0x1F41 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x217 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x25E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DF DUP3 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x211 DUP2 PUSH3 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x241 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP1 PUSH3 0x26E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x142 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xAFFB73 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x17C7C23A EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x24E26241 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB JUMPI PUSH2 0x1AA PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x227 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP10 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP9 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2CE DUP3 DUP3 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x71F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x6A1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x407 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x411 PUSH1 0x0 PUSH2 0x7B7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C3 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x517 DUP5 DUP5 DUP5 DUP5 PUSH2 0x87B JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x52B JUMPI PUSH2 0x52A PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x585 JUMPI PUSH2 0x584 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x7B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xBBA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C7 PUSH2 0x413 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C38449E ADDRESS DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 TIMESTAMP PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E0 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x966 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP6 PUSH1 0x1 DUP11 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST POP PUSH1 0x0 DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP3 PUSH1 0x1 DUP11 ADDRESS DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBED DUP3 PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFD DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3B DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC58 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8E DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCF2 JUMPI PUSH2 0xCF1 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP12 DUP3 DUP13 ADD PUSH2 0xC49 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0xD38 DUP12 DUP3 DUP13 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xD65 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xD94 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB7 JUMPI PUSH2 0xDB6 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP3 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0D DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE37 DUP5 DUP3 DUP6 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xE89 DUP3 PUSH2 0xE40 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBB PUSH2 0xC1E JUMP JUMPDEST SWAP1 POP PUSH2 0xEC7 DUP3 DUP3 PUSH2 0xE80 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0B PUSH2 0xF06 DUP5 PUSH2 0xECC JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF57 JUMPI DUP1 PUSH2 0xF43 DUP9 DUP3 PUSH2 0xDFE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF30 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF76 JUMPI PUSH2 0xF75 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF86 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCE PUSH2 0xFC9 DUP5 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x101A JUMPI DUP1 PUSH2 0x1006 DUP9 DUP3 PUSH2 0xC7F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFF3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1039 JUMPI PUSH2 0x1038 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1049 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0x107B DUP3 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA PUSH2 0x10A5 DUP5 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH2 0x10D1 DUP5 DUP3 DUP6 PUSH2 0x1088 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1120 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x114B DUP8 DUP3 DUP9 ADD PUSH2 0xF61 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1178 DUP8 DUP3 DUP9 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1199 JUMPI PUSH2 0x1198 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x11A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C6 JUMPI PUSH2 0x11C5 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x11D2 DUP8 DUP3 DUP9 ADD PUSH2 0x10D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11F3 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1202 DUP5 DUP3 DUP6 ADD PUSH2 0xC49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1230 PUSH2 0x122B PUSH2 0x1226 DUP5 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1264 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x125B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1305 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0xC49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP4 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1331 DUP3 PUSH2 0x12C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1347 DUP3 DUP5 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x1351 DUP9 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP8 POP PUSH2 0x135C DUP4 PUSH2 0x130D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1335 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1392 DUP2 DUP9 DUP11 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13A7 DUP2 DUP7 DUP9 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13BC DUP2 DUP5 DUP7 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP5 DUP3 DUP6 ADD PUSH2 0x13C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x143C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x1443 JUMP JUMPDEST DUP2 EQ PUSH2 0x1463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1475 DUP2 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149F DUP5 DUP3 DUP6 ADD PUSH2 0x1466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652073656E646572206D7573742062652042616C616E63657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5661756C74210000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH1 0x26 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1520 DUP3 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1544 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159F PUSH2 0x159A DUP5 PUSH2 0x154B JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C1 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15EB JUMPI DUP1 PUSH2 0x15D7 DUP9 DUP3 PUSH2 0x1577 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15C4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x161A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1666 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1693 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x16C0 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1726 PUSH1 0x26 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1731 DUP3 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1755 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1792 PUSH1 0x20 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x179D DUP3 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C1 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E3 DUP2 PUSH2 0x17C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181F DUP2 PUSH2 0x1804 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP4 DUP4 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x185F DUP2 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x186A DUP4 PUSH2 0x17F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189B JUMPI DUP2 MLOAD PUSH2 0x1882 DUP9 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP8 POP PUSH2 0x188D DUP4 PUSH2 0x183D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x186E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EF DUP4 DUP4 PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x18B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1928 DUP4 PUSH2 0x18C4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1959 JUMPI DUP2 MLOAD PUSH2 0x1940 DUP9 DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP8 POP PUSH2 0x194B DUP4 PUSH2 0x18FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x192C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B7 DUP3 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x19C1 DUP2 DUP6 PUSH2 0x1971 JUMP JUMPDEST SWAP4 POP PUSH2 0x19D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19FA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 DUP7 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A20 DUP2 DUP6 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A34 DUP2 DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A79 DUP3 PUSH2 0xC5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP4 PUSH2 0xC5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A3F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 PUSH2 0x1AC2 PUSH2 0x1ABD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B10 DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1B1A DUP2 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B25 DUP4 PUSH2 0x1AE8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B56 JUMPI DUP2 MLOAD PUSH2 0x1B3D DUP9 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP8 POP PUSH2 0x1B48 DUP4 PUSH2 0x1AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B29 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B78 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x1B85 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1ACE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B97 DUP2 DUP7 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1BB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x140B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD0 PUSH2 0x1BCB DUP5 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C1C JUMPI DUP1 PUSH2 0x1C08 DUP9 DUP3 PUSH2 0x13C9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1C4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C88 JUMPI PUSH2 0x1C87 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1C94 DUP5 DUP3 DUP6 ADD PUSH2 0x1C26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT STOP SAR 0xCF 0xC8 BYTE DUP7 SWAP11 PUSH10 0x2376EB4E5FBF942FDF8E PUSH13 0x2F97D354D041D0F3DB58129164 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"517:3289:12:-:0;;;644:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:10;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;725:6:12;710:5;;:22;;;;;;;;;;;;;;;;;;762:17;743:16;;:36;;;;;;;;;;;;;;;;;;644:143;;517:3289;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2426:187:10:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;517:3289:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_816":{"entryPoint":1697,"id":816,"parameterSlots":0,"returnSlots":0},"@_executeArbitrage_1119":{"entryPoint":2171,"id":1119,"parameterSlots":4,"returnSlots":0},"@_makeFlashLoan_1141":{"entryPoint":1823,"id":1141,"parameterSlots":3,"returnSlots":0},"@_msgSender_886":{"entryPoint":3002,"id":886,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_873":{"entryPoint":1975,"id":873,"parameterSlots":1,"returnSlots":0},"@owner_802":{"entryPoint":1043,"id":802,"parameterSlots":0,"returnSlots":1},"@profitRecipitent_925":{"entryPoint":352,"id":925,"parameterSlots":0,"returnSlots":0},"@receiveFlashLoan_1223":{"entryPoint":1084,"id":1223,"parameterSlots":4,"returnSlots":0},"@renounceOwnership_830":{"entryPoint":1023,"id":830,"parameterSlots":0,"returnSlots":0},"@startArbitrage_1013":{"entryPoint":390,"id":1013,"parameterSlots":8,"returnSlots":0},"@transferOwnership_853":{"entryPoint":1528,"id":853,"parameterSlots":1,"returnSlots":0},"@vault_928":{"entryPoint":1659,"id":928,"parameterSlots":0,"returnSlots":0},"@withdrawProfit_1245":{"entryPoint":730,"id":1245,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":5516,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":3832,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4027,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":7101,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4247,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":3235,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":5621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":3937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":4132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":7206,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":5222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_contract$_IERC20_$140":{"entryPoint":3582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr":{"entryPoint":3321,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":5667,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":4359,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":7252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$140":{"entryPoint":3603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":4830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address":{"entryPoint":6181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":4815,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3060,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":4890,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_ArbitrageBot_$1246_to_t_address_fromStack":{"entryPoint":6106,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$140_to_t_address":{"entryPoint":6166,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IVault_$761_to_t_address_fromStack":{"entryPoint":4699,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack":{"entryPoint":6862,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":5913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":6021,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231_to_t_string_memory_ptr_fromStack":{"entryPoint":5384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6356,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5131,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5146,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4983,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_contract$_ArbitrageBot_$1246_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6629,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IVault_$761__to_t_address__fromStack_reversed":{"entryPoint":4714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_rational_1_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":7011,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":3761,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3102,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":5451,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":3788,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3983,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4183,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":4805,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6888,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":6132,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6340,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":6121,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6312,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6502,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":4877,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6904,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr":{"entryPoint":6205,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6395,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":4788,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6323,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6513,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5288,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_access_t_address":{"entryPoint":4854,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6766,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3042,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5187,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$140":{"entryPoint":3541,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3010,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3166,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_ArbitrageBot_$1246_to_t_address":{"entryPoint":6088,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$140_to_t_address":{"entryPoint":6148,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IVault_$761_to_t_address":{"entryPoint":4681,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint256":{"entryPoint":6828,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4663,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4629,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4232,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6530,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3712,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4619,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6719,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4741,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3665,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3225,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3220,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3230,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4178,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3117,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3112,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3648,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":5834,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":5980,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231":{"entryPoint":5305,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3122,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5199,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_contract$_IERC20_$140":{"entryPoint":3559,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3176,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33551:13","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:13","statements":[{"nodeType":"YulAssignment","src":"62:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:13"},"nodeType":"YulFunctionCall","src":"73:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:13","type":""}],"src":"7:126:13"},{"body":{"nodeType":"YulBlock","src":"184:51:13","statements":[{"nodeType":"YulAssignment","src":"194:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:13"},"nodeType":"YulFunctionCall","src":"205:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:13","type":""}],"src":"139:96:13"},{"body":{"nodeType":"YulBlock","src":"306:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:13"},"nodeType":"YulFunctionCall","src":"328:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:13"},"nodeType":"YulFunctionCall","src":"316:37:13"},"nodeType":"YulExpressionStatement","src":"316:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:13","type":""}],"src":"241:118:13"},{"body":{"nodeType":"YulBlock","src":"463:124:13","statements":[{"nodeType":"YulAssignment","src":"473:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:13"},"nodeType":"YulFunctionCall","src":"481:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:13"},"nodeType":"YulFunctionCall","src":"562:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:13"},"nodeType":"YulFunctionCall","src":"509:71:13"},"nodeType":"YulExpressionStatement","src":"509:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:13","type":""}],"src":"365:222:13"},{"body":{"nodeType":"YulBlock","src":"633:35:13","statements":[{"nodeType":"YulAssignment","src":"643:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:13"},"nodeType":"YulFunctionCall","src":"653:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:13","type":""}],"src":"593:75:13"},{"body":{"nodeType":"YulBlock","src":"763:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:13"},"nodeType":"YulFunctionCall","src":"773:12:13"},"nodeType":"YulExpressionStatement","src":"773:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:13"},{"body":{"nodeType":"YulBlock","src":"886:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:13"},"nodeType":"YulFunctionCall","src":"896:12:13"},"nodeType":"YulExpressionStatement","src":"896:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:13"},{"body":{"nodeType":"YulBlock","src":"963:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:13"},"nodeType":"YulFunctionCall","src":"1022:12:13"},"nodeType":"YulExpressionStatement","src":"1022:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:13"},"nodeType":"YulFunctionCall","src":"993:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:13"},"nodeType":"YulFunctionCall","src":"983:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:13"},"nodeType":"YulFunctionCall","src":"976:43:13"},"nodeType":"YulIf","src":"973:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:13","type":""}],"src":"920:122:13"},{"body":{"nodeType":"YulBlock","src":"1100:87:13","statements":[{"nodeType":"YulAssignment","src":"1110:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:13"},"nodeType":"YulFunctionCall","src":"1119:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:13"},"nodeType":"YulFunctionCall","src":"1148:33:13"},"nodeType":"YulExpressionStatement","src":"1148:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:13","type":""}],"src":"1048:139:13"},{"body":{"nodeType":"YulBlock","src":"1238:32:13","statements":[{"nodeType":"YulAssignment","src":"1248:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"1259:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1248:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1220:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1230:7:13","type":""}],"src":"1193:77:13"},{"body":{"nodeType":"YulBlock","src":"1319:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"1376:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1385:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1388:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1378:6:13"},"nodeType":"YulFunctionCall","src":"1378:12:13"},"nodeType":"YulExpressionStatement","src":"1378:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1342:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1349:17:13"},"nodeType":"YulFunctionCall","src":"1349:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1339:2:13"},"nodeType":"YulFunctionCall","src":"1339:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1332:6:13"},"nodeType":"YulFunctionCall","src":"1332:43:13"},"nodeType":"YulIf","src":"1329:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:13","type":""}],"src":"1276:122:13"},{"body":{"nodeType":"YulBlock","src":"1456:87:13","statements":[{"nodeType":"YulAssignment","src":"1466:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1475:12:13"},"nodeType":"YulFunctionCall","src":"1475:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1466:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1504:26:13"},"nodeType":"YulFunctionCall","src":"1504:33:13"},"nodeType":"YulExpressionStatement","src":"1504:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1434:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"1442:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1450:5:13","type":""}],"src":"1404:139:13"},{"body":{"nodeType":"YulBlock","src":"1638:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1655:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1658:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1648:6:13"},"nodeType":"YulFunctionCall","src":"1648:12:13"},"nodeType":"YulExpressionStatement","src":"1648:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1549:117:13"},{"body":{"nodeType":"YulBlock","src":"1761:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1778:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1781:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1771:6:13"},"nodeType":"YulFunctionCall","src":"1771:12:13"},"nodeType":"YulExpressionStatement","src":"1771:12:13"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1672:117:13"},{"body":{"nodeType":"YulBlock","src":"1884:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:13"},"nodeType":"YulFunctionCall","src":"1894:12:13"},"nodeType":"YulExpressionStatement","src":"1894:12:13"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1795:117:13"},{"body":{"nodeType":"YulBlock","src":"2025:478:13","statements":[{"body":{"nodeType":"YulBlock","src":"2074:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2076:77:13"},"nodeType":"YulFunctionCall","src":"2076:79:13"},"nodeType":"YulExpressionStatement","src":"2076:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2053:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2061:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2049:3:13"},"nodeType":"YulFunctionCall","src":"2049:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2068:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2045:3:13"},"nodeType":"YulFunctionCall","src":"2045:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2038:6:13"},"nodeType":"YulFunctionCall","src":"2038:35:13"},"nodeType":"YulIf","src":"2035:122:13"},{"nodeType":"YulAssignment","src":"2166:30:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2189:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2176:12:13"},"nodeType":"YulFunctionCall","src":"2176:20:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2166:6:13"}]},{"body":{"nodeType":"YulBlock","src":"2239:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2241:77:13"},"nodeType":"YulFunctionCall","src":"2241:79:13"},"nodeType":"YulExpressionStatement","src":"2241:79:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2211:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2219:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2208:2:13"},"nodeType":"YulFunctionCall","src":"2208:30:13"},"nodeType":"YulIf","src":"2205:117:13"},{"nodeType":"YulAssignment","src":"2331:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2347:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2355:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2343:3:13"},"nodeType":"YulFunctionCall","src":"2343:17:13"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2331:8:13"}]},{"body":{"nodeType":"YulBlock","src":"2414:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2416:77:13"},"nodeType":"YulFunctionCall","src":"2416:79:13"},"nodeType":"YulExpressionStatement","src":"2416:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2379:8:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2393:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2401:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2389:3:13"},"nodeType":"YulFunctionCall","src":"2389:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:13"},"nodeType":"YulFunctionCall","src":"2375:32:13"},{"name":"end","nodeType":"YulIdentifier","src":"2409:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2372:2:13"},"nodeType":"YulFunctionCall","src":"2372:41:13"},"nodeType":"YulIf","src":"2369:128:13"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1992:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2000:3:13","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2008:8:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2018:6:13","type":""}],"src":"1935:568:13"},{"body":{"nodeType":"YulBlock","src":"2748:1362:13","statements":[{"body":{"nodeType":"YulBlock","src":"2795:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2797:77:13"},"nodeType":"YulFunctionCall","src":"2797:79:13"},"nodeType":"YulExpressionStatement","src":"2797:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2769:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2778:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2765:3:13"},"nodeType":"YulFunctionCall","src":"2765:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2790:3:13","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2761:3:13"},"nodeType":"YulFunctionCall","src":"2761:33:13"},"nodeType":"YulIf","src":"2758:120:13"},{"nodeType":"YulBlock","src":"2888:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2932:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2967:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2978:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2963:3:13"},"nodeType":"YulFunctionCall","src":"2963:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2987:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2942:20:13"},"nodeType":"YulFunctionCall","src":"2942:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2932:6:13"}]}]},{"nodeType":"YulBlock","src":"3015:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3030:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3044:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3034:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3060:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3106:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3091:3:13"},"nodeType":"YulFunctionCall","src":"3091:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3115:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3070:20:13"},"nodeType":"YulFunctionCall","src":"3070:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3060:6:13"}]}]},{"nodeType":"YulBlock","src":"3143:313:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3158:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3200:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3185:3:13"},"nodeType":"YulFunctionCall","src":"3185:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3172:12:13"},"nodeType":"YulFunctionCall","src":"3172:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3162:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3251:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3253:77:13"},"nodeType":"YulFunctionCall","src":"3253:79:13"},"nodeType":"YulExpressionStatement","src":"3253:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3223:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3231:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3220:2:13"},"nodeType":"YulFunctionCall","src":"3220:30:13"},"nodeType":"YulIf","src":"3217:117:13"},{"nodeType":"YulAssignment","src":"3348:98:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3418:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3429:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3414:3:13"},"nodeType":"YulFunctionCall","src":"3414:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3438:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3366:47:13"},"nodeType":"YulFunctionCall","src":"3366:80:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3348:6:13"},{"name":"value3","nodeType":"YulIdentifier","src":"3356:6:13"}]}]},{"nodeType":"YulBlock","src":"3466:313:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3481:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3512:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3523:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:13"},"nodeType":"YulFunctionCall","src":"3508:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3495:12:13"},"nodeType":"YulFunctionCall","src":"3495:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3485:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3574:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3576:77:13"},"nodeType":"YulFunctionCall","src":"3576:79:13"},"nodeType":"YulExpressionStatement","src":"3576:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3546:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3554:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3543:2:13"},"nodeType":"YulFunctionCall","src":"3543:30:13"},"nodeType":"YulIf","src":"3540:117:13"},{"nodeType":"YulAssignment","src":"3671:98:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3741:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3752:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3737:3:13"},"nodeType":"YulFunctionCall","src":"3737:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3761:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3689:47:13"},"nodeType":"YulFunctionCall","src":"3689:80:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3671:6:13"},{"name":"value5","nodeType":"YulIdentifier","src":"3679:6:13"}]}]},{"nodeType":"YulBlock","src":"3789:314:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3804:47:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3835:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3846:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3831:3:13"},"nodeType":"YulFunctionCall","src":"3831:19:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3818:12:13"},"nodeType":"YulFunctionCall","src":"3818:33:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3808:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3898:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3900:77:13"},"nodeType":"YulFunctionCall","src":"3900:79:13"},"nodeType":"YulExpressionStatement","src":"3900:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3870:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3878:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3867:2:13"},"nodeType":"YulFunctionCall","src":"3867:30:13"},"nodeType":"YulIf","src":"3864:117:13"},{"nodeType":"YulAssignment","src":"3995:98:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4065:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4076:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4061:3:13"},"nodeType":"YulFunctionCall","src":"4061:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4085:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"4013:47:13"},"nodeType":"YulFunctionCall","src":"4013:80:13"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3995:6:13"},{"name":"value7","nodeType":"YulIdentifier","src":"4003:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2662:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2673:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2685:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2693:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2701:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2709:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2717:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2725:6:13","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2733:6:13","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2741:6:13","type":""}],"src":"2509:1601:13"},{"body":{"nodeType":"YulBlock","src":"4175:51:13","statements":[{"nodeType":"YulAssignment","src":"4185:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4214:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4196:17:13"},"nodeType":"YulFunctionCall","src":"4196:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4185:7:13"}]}]},"name":"cleanup_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4157:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4167:7:13","type":""}],"src":"4116:110:13"},{"body":{"nodeType":"YulBlock","src":"4289:93:13","statements":[{"body":{"nodeType":"YulBlock","src":"4360:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4362:6:13"},"nodeType":"YulFunctionCall","src":"4362:12:13"},"nodeType":"YulExpressionStatement","src":"4362:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4312:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4351:5:13"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"4319:31:13"},"nodeType":"YulFunctionCall","src":"4319:38:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4309:2:13"},"nodeType":"YulFunctionCall","src":"4309:49:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4302:6:13"},"nodeType":"YulFunctionCall","src":"4302:57:13"},"nodeType":"YulIf","src":"4299:77:13"}]},"name":"validator_revert_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4282:5:13","type":""}],"src":"4232:150:13"},{"body":{"nodeType":"YulBlock","src":"4454:101:13","statements":[{"nodeType":"YulAssignment","src":"4464:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4486:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4473:12:13"},"nodeType":"YulFunctionCall","src":"4473:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4464:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4543:5:13"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"4502:40:13"},"nodeType":"YulFunctionCall","src":"4502:47:13"},"nodeType":"YulExpressionStatement","src":"4502:47:13"}]},"name":"abi_decode_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4432:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4440:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:13","type":""}],"src":"4388:167:13"},{"body":{"nodeType":"YulBlock","src":"4641:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"4687:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4689:77:13"},"nodeType":"YulFunctionCall","src":"4689:79:13"},"nodeType":"YulExpressionStatement","src":"4689:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4662:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4671:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4658:3:13"},"nodeType":"YulFunctionCall","src":"4658:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4683:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4654:3:13"},"nodeType":"YulFunctionCall","src":"4654:32:13"},"nodeType":"YulIf","src":"4651:119:13"},{"nodeType":"YulBlock","src":"4780:131:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4795:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4809:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4799:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4824:77:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:13"},"nodeType":"YulFunctionCall","src":"4869:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:13"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"4834:34:13"},"nodeType":"YulFunctionCall","src":"4834:67:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4824:6:13"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$140","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4611:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4622:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4634:6:13","type":""}],"src":"4561:357:13"},{"body":{"nodeType":"YulBlock","src":"4972:54:13","statements":[{"nodeType":"YulAssignment","src":"4982:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5000:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"5007:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:13"},"nodeType":"YulFunctionCall","src":"4996:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5016:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5012:3:13"},"nodeType":"YulFunctionCall","src":"5012:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4992:3:13"},"nodeType":"YulFunctionCall","src":"4992:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4982:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4955:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4965:6:13","type":""}],"src":"4924:102:13"},{"body":{"nodeType":"YulBlock","src":"5060:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5077:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5080:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5070:6:13"},"nodeType":"YulFunctionCall","src":"5070:88:13"},"nodeType":"YulExpressionStatement","src":"5070:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5174:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5167:6:13"},"nodeType":"YulFunctionCall","src":"5167:15:13"},"nodeType":"YulExpressionStatement","src":"5167:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5198:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5201:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5191:6:13"},"nodeType":"YulFunctionCall","src":"5191:15:13"},"nodeType":"YulExpressionStatement","src":"5191:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5032:180:13"},{"body":{"nodeType":"YulBlock","src":"5261:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5293:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5323:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5301:21:13"},"nodeType":"YulFunctionCall","src":"5301:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5289:3:13"},"nodeType":"YulFunctionCall","src":"5289:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5275:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5440:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5442:16:13"},"nodeType":"YulFunctionCall","src":"5442:18:13"},"nodeType":"YulExpressionStatement","src":"5442:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5383:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"5395:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5380:2:13"},"nodeType":"YulFunctionCall","src":"5380:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5419:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5431:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5416:2:13"},"nodeType":"YulFunctionCall","src":"5416:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5377:2:13"},"nodeType":"YulFunctionCall","src":"5377:62:13"},"nodeType":"YulIf","src":"5374:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5478:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5482:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5471:6:13"},"nodeType":"YulFunctionCall","src":"5471:22:13"},"nodeType":"YulExpressionStatement","src":"5471:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5247:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"5255:4:13","type":""}],"src":"5218:281:13"},{"body":{"nodeType":"YulBlock","src":"5546:88:13","statements":[{"nodeType":"YulAssignment","src":"5556:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5566:18:13"},"nodeType":"YulFunctionCall","src":"5566:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5556:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5615:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"5623:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5595:19:13"},"nodeType":"YulFunctionCall","src":"5595:33:13"},"nodeType":"YulExpressionStatement","src":"5595:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5530:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5539:6:13","type":""}],"src":"5505:129:13"},{"body":{"nodeType":"YulBlock","src":"5736:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"5841:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5843:16:13"},"nodeType":"YulFunctionCall","src":"5843:18:13"},"nodeType":"YulExpressionStatement","src":"5843:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5813:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5821:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5810:2:13"},"nodeType":"YulFunctionCall","src":"5810:30:13"},"nodeType":"YulIf","src":"5807:56:13"},{"nodeType":"YulAssignment","src":"5873:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5885:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5893:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5881:3:13"},"nodeType":"YulFunctionCall","src":"5881:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5873:4:13"}]},{"nodeType":"YulAssignment","src":"5935:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5947:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"5953:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5943:3:13"},"nodeType":"YulFunctionCall","src":"5943:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5935:4:13"}]}]},"name":"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5720:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5731:4:13","type":""}],"src":"5640:325:13"},{"body":{"nodeType":"YulBlock","src":"6112:636:13","statements":[{"nodeType":"YulAssignment","src":"6122:104:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6218:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6147:70:13"},"nodeType":"YulFunctionCall","src":"6147:78:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6131:15:13"},"nodeType":"YulFunctionCall","src":"6131:95:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6122:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"6235:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"6246:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6239:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6268:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"6275:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6261:6:13"},"nodeType":"YulFunctionCall","src":"6261:21:13"},"nodeType":"YulExpressionStatement","src":"6261:21:13"},{"nodeType":"YulAssignment","src":"6291:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6302:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6309:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6298:3:13"},"nodeType":"YulFunctionCall","src":"6298:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6291:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"6324:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6342:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6354:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6362:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6350:3:13"},"nodeType":"YulFunctionCall","src":"6350:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:13"},"nodeType":"YulFunctionCall","src":"6338:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6328:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"6396:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6410:77:13"},"nodeType":"YulFunctionCall","src":"6410:79:13"},"nodeType":"YulExpressionStatement","src":"6410:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6383:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"6391:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6380:2:13"},"nodeType":"YulFunctionCall","src":"6380:15:13"},"nodeType":"YulIf","src":"6377:122:13"},{"body":{"nodeType":"YulBlock","src":"6584:158:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6599:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"6617:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6603:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6641:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6681:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"6693:3:13"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$140","nodeType":"YulIdentifier","src":"6646:34:13"},"nodeType":"YulFunctionCall","src":"6646:51:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6634:6:13"},"nodeType":"YulFunctionCall","src":"6634:64:13"},"nodeType":"YulExpressionStatement","src":"6634:64:13"},{"nodeType":"YulAssignment","src":"6711:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6722:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6727:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6718:3:13"},"nodeType":"YulFunctionCall","src":"6718:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6711:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6537:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6542:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6534:2:13"},"nodeType":"YulFunctionCall","src":"6534:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6550:25:13","statements":[{"nodeType":"YulAssignment","src":"6552:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6563:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6568:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6559:3:13"},"nodeType":"YulFunctionCall","src":"6559:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6552:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"6512:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6514:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"6525:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6518:3:13","type":""}]}]},"src":"6508:234:13"}]},"name":"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6082:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"6090:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6098:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6106:5:13","type":""}],"src":"5996:752:13"},{"body":{"nodeType":"YulBlock","src":"6870:307:13","statements":[{"body":{"nodeType":"YulBlock","src":"6919:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6921:77:13"},"nodeType":"YulFunctionCall","src":"6921:79:13"},"nodeType":"YulExpressionStatement","src":"6921:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6898:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"6906:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:13"},"nodeType":"YulFunctionCall","src":"6894:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"6913:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6890:3:13"},"nodeType":"YulFunctionCall","src":"6890:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6883:6:13"},"nodeType":"YulFunctionCall","src":"6883:35:13"},"nodeType":"YulIf","src":"6880:122:13"},{"nodeType":"YulVariableDeclaration","src":"7011:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7038:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7025:12:13"},"nodeType":"YulFunctionCall","src":"7025:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7015:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7054:117:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7144:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7152:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7140:3:13"},"nodeType":"YulFunctionCall","src":"7140:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"7159:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"7167:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7063:76:13"},"nodeType":"YulFunctionCall","src":"7063:108:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7054:5:13"}]}]},"name":"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6848:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6856:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6864:5:13","type":""}],"src":"6779:398:13"},{"body":{"nodeType":"YulBlock","src":"7265:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"7370:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7372:16:13"},"nodeType":"YulFunctionCall","src":"7372:18:13"},"nodeType":"YulExpressionStatement","src":"7372:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7342:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7350:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7339:2:13"},"nodeType":"YulFunctionCall","src":"7339:30:13"},"nodeType":"YulIf","src":"7336:56:13"},{"nodeType":"YulAssignment","src":"7402:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7414:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7422:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7410:3:13"},"nodeType":"YulFunctionCall","src":"7410:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7402:4:13"}]},{"nodeType":"YulAssignment","src":"7464:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7476:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"7482:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7472:3:13"},"nodeType":"YulFunctionCall","src":"7472:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7464:4:13"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7249:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7260:4:13","type":""}],"src":"7183:311:13"},{"body":{"nodeType":"YulBlock","src":"7619:608:13","statements":[{"nodeType":"YulAssignment","src":"7629:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7711:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7654:56:13"},"nodeType":"YulFunctionCall","src":"7654:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7638:15:13"},"nodeType":"YulFunctionCall","src":"7638:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7629:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"7728:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"7739:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7732:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7761:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"7768:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7754:6:13"},"nodeType":"YulFunctionCall","src":"7754:21:13"},"nodeType":"YulExpressionStatement","src":"7754:21:13"},{"nodeType":"YulAssignment","src":"7784:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7795:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"7802:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:13"},"nodeType":"YulFunctionCall","src":"7791:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7784:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"7817:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7835:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7847:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7855:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7843:3:13"},"nodeType":"YulFunctionCall","src":"7843:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7831:3:13"},"nodeType":"YulFunctionCall","src":"7831:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7821:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7889:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7903:77:13"},"nodeType":"YulFunctionCall","src":"7903:79:13"},"nodeType":"YulExpressionStatement","src":"7903:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7876:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"7884:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7873:2:13"},"nodeType":"YulFunctionCall","src":"7873:15:13"},"nodeType":"YulIf","src":"7870:122:13"},{"body":{"nodeType":"YulBlock","src":"8077:144:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8092:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"8110:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"8096:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8134:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"8160:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"8172:3:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8139:20:13"},"nodeType":"YulFunctionCall","src":"8139:37:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8127:6:13"},"nodeType":"YulFunctionCall","src":"8127:50:13"},"nodeType":"YulExpressionStatement","src":"8127:50:13"},{"nodeType":"YulAssignment","src":"8190:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8201:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8206:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8197:3:13"},"nodeType":"YulFunctionCall","src":"8197:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8190:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8030:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8035:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8027:2:13"},"nodeType":"YulFunctionCall","src":"8027:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8043:25:13","statements":[{"nodeType":"YulAssignment","src":"8045:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8056:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8061:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8052:3:13"},"nodeType":"YulFunctionCall","src":"8052:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8045:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"8005:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8007:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"8018:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8011:3:13","type":""}]}]},"src":"8001:220:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7589:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"7597:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"7605:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7613:5:13","type":""}],"src":"7517:710:13"},{"body":{"nodeType":"YulBlock","src":"8327:293:13","statements":[{"body":{"nodeType":"YulBlock","src":"8376:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8378:77:13"},"nodeType":"YulFunctionCall","src":"8378:79:13"},"nodeType":"YulExpressionStatement","src":"8378:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8355:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8363:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8351:3:13"},"nodeType":"YulFunctionCall","src":"8351:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"8370:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8347:3:13"},"nodeType":"YulFunctionCall","src":"8347:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8340:6:13"},"nodeType":"YulFunctionCall","src":"8340:35:13"},"nodeType":"YulIf","src":"8337:122:13"},{"nodeType":"YulVariableDeclaration","src":"8468:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8495:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8482:12:13"},"nodeType":"YulFunctionCall","src":"8482:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8472:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8511:103:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8587:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8595:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:13"},"nodeType":"YulFunctionCall","src":"8583:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"8602:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"8610:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8520:62:13"},"nodeType":"YulFunctionCall","src":"8520:94:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8511:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8305:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"8313:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8321:5:13","type":""}],"src":"8250:370:13"},{"body":{"nodeType":"YulBlock","src":"8715:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8732:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8735:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8725:6:13"},"nodeType":"YulFunctionCall","src":"8725:12:13"},"nodeType":"YulExpressionStatement","src":"8725:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8626:117:13"},{"body":{"nodeType":"YulBlock","src":"8815:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"8920:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8922:16:13"},"nodeType":"YulFunctionCall","src":"8922:18:13"},"nodeType":"YulExpressionStatement","src":"8922:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8892:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8900:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8889:2:13"},"nodeType":"YulFunctionCall","src":"8889:30:13"},"nodeType":"YulIf","src":"8886:56:13"},{"nodeType":"YulAssignment","src":"8952:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8982:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8960:21:13"},"nodeType":"YulFunctionCall","src":"8960:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8952:4:13"}]},{"nodeType":"YulAssignment","src":"9026:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9038:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"9044:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9034:3:13"},"nodeType":"YulFunctionCall","src":"9034:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9026:4:13"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8799:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8810:4:13","type":""}],"src":"8749:307:13"},{"body":{"nodeType":"YulBlock","src":"9126:82:13","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9149:3:13"},{"name":"src","nodeType":"YulIdentifier","src":"9154:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9159:6:13"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9136:12:13"},"nodeType":"YulFunctionCall","src":"9136:30:13"},"nodeType":"YulExpressionStatement","src":"9136:30:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9186:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9191:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9182:3:13"},"nodeType":"YulFunctionCall","src":"9182:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"9200:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9175:6:13"},"nodeType":"YulFunctionCall","src":"9175:27:13"},"nodeType":"YulExpressionStatement","src":"9175:27:13"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9108:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9113:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"9118:6:13","type":""}],"src":"9062:146:13"},{"body":{"nodeType":"YulBlock","src":"9297:340:13","statements":[{"nodeType":"YulAssignment","src":"9307:74:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9373:6:13"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9332:40:13"},"nodeType":"YulFunctionCall","src":"9332:48:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9316:15:13"},"nodeType":"YulFunctionCall","src":"9316:65:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9307:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9397:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"9404:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9390:6:13"},"nodeType":"YulFunctionCall","src":"9390:21:13"},"nodeType":"YulExpressionStatement","src":"9390:21:13"},{"nodeType":"YulVariableDeclaration","src":"9420:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9435:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"9442:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:13"},"nodeType":"YulFunctionCall","src":"9431:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9424:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"9485:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9487:77:13"},"nodeType":"YulFunctionCall","src":"9487:79:13"},"nodeType":"YulExpressionStatement","src":"9487:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9466:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9471:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:13"},"nodeType":"YulFunctionCall","src":"9462:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"9480:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9459:2:13"},"nodeType":"YulFunctionCall","src":"9459:25:13"},"nodeType":"YulIf","src":"9456:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9614:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"9619:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"9624:6:13"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9577:36:13"},"nodeType":"YulFunctionCall","src":"9577:54:13"},"nodeType":"YulExpressionStatement","src":"9577:54:13"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9270:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"9275:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"9283:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9291:5:13","type":""}],"src":"9214:423:13"},{"body":{"nodeType":"YulBlock","src":"9717:277:13","statements":[{"body":{"nodeType":"YulBlock","src":"9766:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9768:77:13"},"nodeType":"YulFunctionCall","src":"9768:79:13"},"nodeType":"YulExpressionStatement","src":"9768:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9745:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9753:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9741:3:13"},"nodeType":"YulFunctionCall","src":"9741:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"9760:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9737:3:13"},"nodeType":"YulFunctionCall","src":"9737:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9730:6:13"},"nodeType":"YulFunctionCall","src":"9730:35:13"},"nodeType":"YulIf","src":"9727:122:13"},{"nodeType":"YulVariableDeclaration","src":"9858:34:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9885:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9872:12:13"},"nodeType":"YulFunctionCall","src":"9872:20:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9862:6:13","type":""}]},{"nodeType":"YulAssignment","src":"9901:87:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9961:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9969:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9957:3:13"},"nodeType":"YulFunctionCall","src":"9957:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"9976:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"9984:3:13"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9910:46:13"},"nodeType":"YulFunctionCall","src":"9910:78:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9901:5:13"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9695:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"9703:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9711:5:13","type":""}],"src":"9656:338:13"},{"body":{"nodeType":"YulBlock","src":"10215:1386:13","statements":[{"body":{"nodeType":"YulBlock","src":"10262:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10264:77:13"},"nodeType":"YulFunctionCall","src":"10264:79:13"},"nodeType":"YulExpressionStatement","src":"10264:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10236:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10245:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10232:3:13"},"nodeType":"YulFunctionCall","src":"10232:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"10257:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10228:3:13"},"nodeType":"YulFunctionCall","src":"10228:33:13"},"nodeType":"YulIf","src":"10225:120:13"},{"nodeType":"YulBlock","src":"10355:316:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10370:45:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10401:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10412:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10397:3:13"},"nodeType":"YulFunctionCall","src":"10397:17:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10384:12:13"},"nodeType":"YulFunctionCall","src":"10384:31:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10374:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10462:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10464:77:13"},"nodeType":"YulFunctionCall","src":"10464:79:13"},"nodeType":"YulExpressionStatement","src":"10464:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10434:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10442:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10431:2:13"},"nodeType":"YulFunctionCall","src":"10431:30:13"},"nodeType":"YulIf","src":"10428:117:13"},{"nodeType":"YulAssignment","src":"10559:102:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10633:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10644:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10629:3:13"},"nodeType":"YulFunctionCall","src":"10629:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10653:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10569:59:13"},"nodeType":"YulFunctionCall","src":"10569:92:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10559:6:13"}]}]},{"nodeType":"YulBlock","src":"10681:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"10696:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10727:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10738:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:13"},"nodeType":"YulFunctionCall","src":"10723:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10710:12:13"},"nodeType":"YulFunctionCall","src":"10710:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10700:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"10789:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10791:77:13"},"nodeType":"YulFunctionCall","src":"10791:79:13"},"nodeType":"YulExpressionStatement","src":"10791:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10761:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10769:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10758:2:13"},"nodeType":"YulFunctionCall","src":"10758:30:13"},"nodeType":"YulIf","src":"10755:117:13"},{"nodeType":"YulAssignment","src":"10886:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10946:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"10957:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:13"},"nodeType":"YulFunctionCall","src":"10942:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10966:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10896:45:13"},"nodeType":"YulFunctionCall","src":"10896:78:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10886:6:13"}]}]},{"nodeType":"YulBlock","src":"10994:303:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11009:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:13"},"nodeType":"YulFunctionCall","src":"11036:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11023:12:13"},"nodeType":"YulFunctionCall","src":"11023:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11013:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"11102:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11104:77:13"},"nodeType":"YulFunctionCall","src":"11104:79:13"},"nodeType":"YulExpressionStatement","src":"11104:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11074:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11082:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11071:2:13"},"nodeType":"YulFunctionCall","src":"11071:30:13"},"nodeType":"YulIf","src":"11068:117:13"},{"nodeType":"YulAssignment","src":"11199:88:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11259:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11270:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11255:3:13"},"nodeType":"YulFunctionCall","src":"11255:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11279:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11209:45:13"},"nodeType":"YulFunctionCall","src":"11209:78:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11199:6:13"}]}]},{"nodeType":"YulBlock","src":"11307:287:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11322:46:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11353:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11364:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11349:3:13"},"nodeType":"YulFunctionCall","src":"11349:18:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11336:12:13"},"nodeType":"YulFunctionCall","src":"11336:32:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11326:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"11415:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11417:77:13"},"nodeType":"YulFunctionCall","src":"11417:79:13"},"nodeType":"YulExpressionStatement","src":"11417:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11387:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11395:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11384:2:13"},"nodeType":"YulFunctionCall","src":"11384:30:13"},"nodeType":"YulIf","src":"11381:117:13"},{"nodeType":"YulAssignment","src":"11512:72:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11556:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11567:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11552:3:13"},"nodeType":"YulFunctionCall","src":"11552:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11576:7:13"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11522:29:13"},"nodeType":"YulFunctionCall","src":"11522:62:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11512:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10161:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10172:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10184:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10192:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10200:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10208:6:13","type":""}],"src":"10000:1601:13"},{"body":{"nodeType":"YulBlock","src":"11673:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"11719:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11721:77:13"},"nodeType":"YulFunctionCall","src":"11721:79:13"},"nodeType":"YulExpressionStatement","src":"11721:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11694:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11703:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11690:3:13"},"nodeType":"YulFunctionCall","src":"11690:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"11715:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11686:3:13"},"nodeType":"YulFunctionCall","src":"11686:32:13"},"nodeType":"YulIf","src":"11683:119:13"},{"nodeType":"YulBlock","src":"11812:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"11827:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"11841:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11831:6:13","type":""}]},{"nodeType":"YulAssignment","src":"11856:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11891:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"11902:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11887:3:13"},"nodeType":"YulFunctionCall","src":"11887:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11911:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11866:20:13"},"nodeType":"YulFunctionCall","src":"11866:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11856:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11643:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11654:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11666:6:13","type":""}],"src":"11607:329:13"},{"body":{"nodeType":"YulBlock","src":"11974:28:13","statements":[{"nodeType":"YulAssignment","src":"11984:12:13","value":{"name":"value","nodeType":"YulIdentifier","src":"11991:5:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11984:3:13"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11960:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11970:3:13","type":""}],"src":"11942:60:13"},{"body":{"nodeType":"YulBlock","src":"12068:82:13","statements":[{"nodeType":"YulAssignment","src":"12078:66:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12136:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12118:17:13"},"nodeType":"YulFunctionCall","src":"12118:24:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12109:8:13"},"nodeType":"YulFunctionCall","src":"12109:34:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12091:17:13"},"nodeType":"YulFunctionCall","src":"12091:53:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12078:9:13"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12048:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12058:9:13","type":""}],"src":"12008:142:13"},{"body":{"nodeType":"YulBlock","src":"12216:66:13","statements":[{"nodeType":"YulAssignment","src":"12226:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12270:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"12239:30:13"},"nodeType":"YulFunctionCall","src":"12239:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12226:9:13"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12196:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12206:9:13","type":""}],"src":"12156:126:13"},{"body":{"nodeType":"YulBlock","src":"12362:66:13","statements":[{"nodeType":"YulAssignment","src":"12372:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12416:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"12385:30:13"},"nodeType":"YulFunctionCall","src":"12385:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12372:9:13"}]}]},"name":"convert_t_contract$_IVault_$761_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12342:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12352:9:13","type":""}],"src":"12288:140:13"},{"body":{"nodeType":"YulBlock","src":"12513:80:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12530:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12580:5:13"}],"functionName":{"name":"convert_t_contract$_IVault_$761_to_t_address","nodeType":"YulIdentifier","src":"12535:44:13"},"nodeType":"YulFunctionCall","src":"12535:51:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12523:6:13"},"nodeType":"YulFunctionCall","src":"12523:64:13"},"nodeType":"YulExpressionStatement","src":"12523:64:13"}]},"name":"abi_encode_t_contract$_IVault_$761_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12501:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12508:3:13","type":""}],"src":"12434:159:13"},{"body":{"nodeType":"YulBlock","src":"12711:138:13","statements":[{"nodeType":"YulAssignment","src":"12721:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12733:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12744:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12729:3:13"},"nodeType":"YulFunctionCall","src":"12729:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12721:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12815:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12828:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12839:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12824:3:13"},"nodeType":"YulFunctionCall","src":"12824:17:13"}],"functionName":{"name":"abi_encode_t_contract$_IVault_$761_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12757:57:13"},"nodeType":"YulFunctionCall","src":"12757:85:13"},"nodeType":"YulExpressionStatement","src":"12757:85:13"}]},"name":"abi_encode_tuple_t_contract$_IVault_$761__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12683:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12695:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12706:4:13","type":""}],"src":"12599:250:13"},{"body":{"nodeType":"YulBlock","src":"12883:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12900:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12903:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12893:6:13"},"nodeType":"YulFunctionCall","src":"12893:88:13"},"nodeType":"YulExpressionStatement","src":"12893:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12997:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13000:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12990:6:13"},"nodeType":"YulFunctionCall","src":"12990:15:13"},"nodeType":"YulExpressionStatement","src":"12990:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13021:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13024:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13014:6:13"},"nodeType":"YulFunctionCall","src":"13014:15:13"},"nodeType":"YulExpressionStatement","src":"13014:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12855:180:13"},{"body":{"nodeType":"YulBlock","src":"13152:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13169:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"13174:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13162:6:13"},"nodeType":"YulFunctionCall","src":"13162:19:13"},"nodeType":"YulExpressionStatement","src":"13162:19:13"},{"nodeType":"YulAssignment","src":"13190:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13209:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13214:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13205:3:13"},"nodeType":"YulFunctionCall","src":"13205:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13190:11:13"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13124:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"13129:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13140:11:13","type":""}],"src":"13041:184:13"},{"body":{"nodeType":"YulBlock","src":"13305:28:13","statements":[{"nodeType":"YulAssignment","src":"13315:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13323:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13315:4:13"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13292:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13300:4:13","type":""}],"src":"13231:102:13"},{"body":{"nodeType":"YulBlock","src":"13394:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13411:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13434:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13416:17:13"},"nodeType":"YulFunctionCall","src":"13416:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13404:6:13"},"nodeType":"YulFunctionCall","src":"13404:37:13"},"nodeType":"YulExpressionStatement","src":"13404:37:13"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13382:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13389:3:13","type":""}],"src":"13339:108:13"},{"body":{"nodeType":"YulBlock","src":"13533:99:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13577:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"13585:3:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13543:33:13"},"nodeType":"YulFunctionCall","src":"13543:46:13"},"nodeType":"YulExpressionStatement","src":"13543:46:13"},{"nodeType":"YulAssignment","src":"13598:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13616:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13621:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13612:3:13"},"nodeType":"YulFunctionCall","src":"13612:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13598:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13506:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13514:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13522:10:13","type":""}],"src":"13453:179:13"},{"body":{"nodeType":"YulBlock","src":"13696:64:13","statements":[{"nodeType":"YulAssignment","src":"13706:48:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13736:3:13"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13745:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13750:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13741:3:13"},"nodeType":"YulFunctionCall","src":"13741:12:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13715:20:13"},"nodeType":"YulFunctionCall","src":"13715:39:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13706:5:13"}]}]},"name":"calldata_access_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"baseRef","nodeType":"YulTypedName","src":"13673:7:13","type":""},{"name":"ptr","nodeType":"YulTypedName","src":"13682:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13690:5:13","type":""}],"src":"13638:122:13"},{"body":{"nodeType":"YulBlock","src":"13843:38:13","statements":[{"nodeType":"YulAssignment","src":"13853:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13865:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13870:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13861:3:13"},"nodeType":"YulFunctionCall","src":"13861:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13853:4:13"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13830:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13838:4:13","type":""}],"src":"13766:115:13"},{"body":{"nodeType":"YulBlock","src":"14051:565:13","statements":[{"nodeType":"YulAssignment","src":"14062:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14143:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"14148:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14069:73:13"},"nodeType":"YulFunctionCall","src":"14069:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14062:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"14164:73:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14231:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"14179:51:13"},"nodeType":"YulFunctionCall","src":"14179:58:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14168:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14246:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14260:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14250:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"14336:255:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14350:63:13","value":{"arguments":[{"name":"baseRef","nodeType":"YulIdentifier","src":"14397:7:13"},{"name":"srcPtr","nodeType":"YulIdentifier","src":"14406:6:13"}],"functionName":{"name":"calldata_access_t_address","nodeType":"YulIdentifier","src":"14371:25:13"},"nodeType":"YulFunctionCall","src":"14371:42:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14354:13:13","type":""}]},{"nodeType":"YulAssignment","src":"14426:70:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14477:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14492:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"14433:43:13"},"nodeType":"YulFunctionCall","src":"14433:63:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14426:3:13"}]},{"nodeType":"YulAssignment","src":"14509:72:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14574:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"14519:54:13"},"nodeType":"YulFunctionCall","src":"14519:62:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14509:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14298:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"14301:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14295:2:13"},"nodeType":"YulFunctionCall","src":"14295:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14309:18:13","statements":[{"nodeType":"YulAssignment","src":"14311:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14320:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"14323:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14316:3:13"},"nodeType":"YulFunctionCall","src":"14316:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14311:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"14280:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"14282:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"14291:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14286:1:13","type":""}]}]},"src":"14276:315:13"},{"nodeType":"YulAssignment","src":"14600:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14607:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14600:3:13"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14022:5:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"14029:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14037:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14046:3:13","type":""}],"src":"13917:699:13"},{"body":{"nodeType":"YulBlock","src":"14956:621:13","statements":[{"nodeType":"YulAssignment","src":"14966:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14978:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14989:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14974:3:13"},"nodeType":"YulFunctionCall","src":"14974:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14966:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15013:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15024:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15009:3:13"},"nodeType":"YulFunctionCall","src":"15009:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15032:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15038:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15028:3:13"},"nodeType":"YulFunctionCall","src":"15028:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15002:6:13"},"nodeType":"YulFunctionCall","src":"15002:47:13"},"nodeType":"YulExpressionStatement","src":"15002:47:13"},{"nodeType":"YulAssignment","src":"15058:126:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15162:6:13"},{"name":"value1","nodeType":"YulIdentifier","src":"15170:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"15179:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15066:95:13"},"nodeType":"YulFunctionCall","src":"15066:118:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15058:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15205:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15216:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15201:3:13"},"nodeType":"YulFunctionCall","src":"15201:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15225:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15231:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15221:3:13"},"nodeType":"YulFunctionCall","src":"15221:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15194:6:13"},"nodeType":"YulFunctionCall","src":"15194:48:13"},"nodeType":"YulExpressionStatement","src":"15194:48:13"},{"nodeType":"YulAssignment","src":"15251:126:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15355:6:13"},{"name":"value3","nodeType":"YulIdentifier","src":"15363:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"15372:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15259:95:13"},"nodeType":"YulFunctionCall","src":"15259:118:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15251:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15398:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15409:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15394:3:13"},"nodeType":"YulFunctionCall","src":"15394:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15418:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15424:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15414:3:13"},"nodeType":"YulFunctionCall","src":"15414:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15387:6:13"},"nodeType":"YulFunctionCall","src":"15387:48:13"},"nodeType":"YulExpressionStatement","src":"15387:48:13"},{"nodeType":"YulAssignment","src":"15444:126:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15548:6:13"},{"name":"value5","nodeType":"YulIdentifier","src":"15556:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"15565:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15452:95:13"},"nodeType":"YulFunctionCall","src":"15452:118:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15444:4:13"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14888:9:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14900:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14908:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14916:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14924:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14932:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14940:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14951:4:13","type":""}],"src":"14622:955:13"},{"body":{"nodeType":"YulBlock","src":"15646:80:13","statements":[{"nodeType":"YulAssignment","src":"15656:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15671:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15665:5:13"},"nodeType":"YulFunctionCall","src":"15665:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15656:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15714:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"15687:26:13"},"nodeType":"YulFunctionCall","src":"15687:33:13"},"nodeType":"YulExpressionStatement","src":"15687:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15624:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"15632:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15640:5:13","type":""}],"src":"15583:143:13"},{"body":{"nodeType":"YulBlock","src":"15809:274:13","statements":[{"body":{"nodeType":"YulBlock","src":"15855:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15857:77:13"},"nodeType":"YulFunctionCall","src":"15857:79:13"},"nodeType":"YulExpressionStatement","src":"15857:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15830:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15839:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15826:3:13"},"nodeType":"YulFunctionCall","src":"15826:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"15851:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15822:3:13"},"nodeType":"YulFunctionCall","src":"15822:32:13"},"nodeType":"YulIf","src":"15819:119:13"},{"nodeType":"YulBlock","src":"15948:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15963:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"15977:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15967:6:13","type":""}]},{"nodeType":"YulAssignment","src":"15992:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16038:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"16049:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16034:3:13"},"nodeType":"YulFunctionCall","src":"16034:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16058:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"16002:31:13"},"nodeType":"YulFunctionCall","src":"16002:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15992:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15779:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15790:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15802:6:13","type":""}],"src":"15732:351:13"},{"body":{"nodeType":"YulBlock","src":"16154:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16171:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16194:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16176:17:13"},"nodeType":"YulFunctionCall","src":"16176:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16164:6:13"},"nodeType":"YulFunctionCall","src":"16164:37:13"},"nodeType":"YulExpressionStatement","src":"16164:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16142:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16149:3:13","type":""}],"src":"16089:118:13"},{"body":{"nodeType":"YulBlock","src":"16339:206:13","statements":[{"nodeType":"YulAssignment","src":"16349:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16361:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16372:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:13"},"nodeType":"YulFunctionCall","src":"16357:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16349:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16429:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16442:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16453:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16438:3:13"},"nodeType":"YulFunctionCall","src":"16438:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16385:43:13"},"nodeType":"YulFunctionCall","src":"16385:71:13"},"nodeType":"YulExpressionStatement","src":"16385:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16510:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16523:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16534:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16519:3:13"},"nodeType":"YulFunctionCall","src":"16519:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16466:43:13"},"nodeType":"YulFunctionCall","src":"16466:72:13"},"nodeType":"YulExpressionStatement","src":"16466:72:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16303:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16315:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16323:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16334:4:13","type":""}],"src":"16213:332:13"},{"body":{"nodeType":"YulBlock","src":"16593:48:13","statements":[{"nodeType":"YulAssignment","src":"16603:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16628:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16621:6:13"},"nodeType":"YulFunctionCall","src":"16621:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16614:6:13"},"nodeType":"YulFunctionCall","src":"16614:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16603:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16575:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16585:7:13","type":""}],"src":"16551:90:13"},{"body":{"nodeType":"YulBlock","src":"16687:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"16741:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16750:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16753:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16743:6:13"},"nodeType":"YulFunctionCall","src":"16743:12:13"},"nodeType":"YulExpressionStatement","src":"16743:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16710:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16732:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"16717:14:13"},"nodeType":"YulFunctionCall","src":"16717:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16707:2:13"},"nodeType":"YulFunctionCall","src":"16707:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16700:6:13"},"nodeType":"YulFunctionCall","src":"16700:40:13"},"nodeType":"YulIf","src":"16697:60:13"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16680:5:13","type":""}],"src":"16647:116:13"},{"body":{"nodeType":"YulBlock","src":"16829:77:13","statements":[{"nodeType":"YulAssignment","src":"16839:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16854:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16848:5:13"},"nodeType":"YulFunctionCall","src":"16848:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16839:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16894:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"16870:23:13"},"nodeType":"YulFunctionCall","src":"16870:30:13"},"nodeType":"YulExpressionStatement","src":"16870:30:13"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16807:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"16815:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16823:5:13","type":""}],"src":"16769:137:13"},{"body":{"nodeType":"YulBlock","src":"16986:271:13","statements":[{"body":{"nodeType":"YulBlock","src":"17032:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17034:77:13"},"nodeType":"YulFunctionCall","src":"17034:79:13"},"nodeType":"YulExpressionStatement","src":"17034:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17007:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17016:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17003:3:13"},"nodeType":"YulFunctionCall","src":"17003:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"17028:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16999:3:13"},"nodeType":"YulFunctionCall","src":"16999:32:13"},"nodeType":"YulIf","src":"16996:119:13"},{"nodeType":"YulBlock","src":"17125:125:13","statements":[{"nodeType":"YulVariableDeclaration","src":"17140:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"17154:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17144:6:13","type":""}]},{"nodeType":"YulAssignment","src":"17169:71:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17212:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"17223:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17208:3:13"},"nodeType":"YulFunctionCall","src":"17208:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17232:7:13"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"17179:28:13"},"nodeType":"YulFunctionCall","src":"17179:61:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17169:6:13"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16956:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16967:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16979:6:13","type":""}],"src":"16912:345:13"},{"body":{"nodeType":"YulBlock","src":"17359:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17376:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"17381:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17369:6:13"},"nodeType":"YulFunctionCall","src":"17369:19:13"},"nodeType":"YulExpressionStatement","src":"17369:19:13"},{"nodeType":"YulAssignment","src":"17397:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17416:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17421:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17412:3:13"},"nodeType":"YulFunctionCall","src":"17412:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17397:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17331:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"17336:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17347:11:13","type":""}],"src":"17263:169:13"},{"body":{"nodeType":"YulBlock","src":"17544:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17566:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"17574:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17562:3:13"},"nodeType":"YulFunctionCall","src":"17562:14:13"},{"hexValue":"4d6573736167652073656e646572206d7573742062652042616c616e63657220","kind":"string","nodeType":"YulLiteral","src":"17578:34:13","type":"","value":"Message sender must be Balancer "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17555:6:13"},"nodeType":"YulFunctionCall","src":"17555:58:13"},"nodeType":"YulExpressionStatement","src":"17555:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17634:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"17642:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17630:3:13"},"nodeType":"YulFunctionCall","src":"17630:15:13"},{"hexValue":"5661756c7421","kind":"string","nodeType":"YulLiteral","src":"17647:8:13","type":"","value":"Vault!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17623:6:13"},"nodeType":"YulFunctionCall","src":"17623:33:13"},"nodeType":"YulExpressionStatement","src":"17623:33:13"}]},"name":"store_literal_in_memory_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17536:6:13","type":""}],"src":"17438:225:13"},{"body":{"nodeType":"YulBlock","src":"17815:220:13","statements":[{"nodeType":"YulAssignment","src":"17825:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17891:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17896:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17832:58:13"},"nodeType":"YulFunctionCall","src":"17832:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17825:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17997:3:13"}],"functionName":{"name":"store_literal_in_memory_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231","nodeType":"YulIdentifier","src":"17908:88:13"},"nodeType":"YulFunctionCall","src":"17908:93:13"},"nodeType":"YulExpressionStatement","src":"17908:93:13"},{"nodeType":"YulAssignment","src":"18010:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18021:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18026:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18017:3:13"},"nodeType":"YulFunctionCall","src":"18017:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18010:3:13"}]}]},"name":"abi_encode_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17803:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17811:3:13","type":""}],"src":"17669:366:13"},{"body":{"nodeType":"YulBlock","src":"18212:248:13","statements":[{"nodeType":"YulAssignment","src":"18222:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18234:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18245:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:13"},"nodeType":"YulFunctionCall","src":"18230:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18222:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18269:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18280:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18265:3:13"},"nodeType":"YulFunctionCall","src":"18265:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18288:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"18294:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18284:3:13"},"nodeType":"YulFunctionCall","src":"18284:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18258:6:13"},"nodeType":"YulFunctionCall","src":"18258:47:13"},"nodeType":"YulExpressionStatement","src":"18258:47:13"},{"nodeType":"YulAssignment","src":"18314:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18448:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18322:124:13"},"nodeType":"YulFunctionCall","src":"18322:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18314:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18192:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18207:4:13","type":""}],"src":"18041:419:13"},{"body":{"nodeType":"YulBlock","src":"18548:229:13","statements":[{"body":{"nodeType":"YulBlock","src":"18653:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18655:16:13"},"nodeType":"YulFunctionCall","src":"18655:18:13"},"nodeType":"YulExpressionStatement","src":"18655:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18625:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18633:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18622:2:13"},"nodeType":"YulFunctionCall","src":"18622:30:13"},"nodeType":"YulIf","src":"18619:56:13"},{"nodeType":"YulAssignment","src":"18685:25:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18697:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18705:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18693:3:13"},"nodeType":"YulFunctionCall","src":"18693:17:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18685:4:13"}]},{"nodeType":"YulAssignment","src":"18747:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18759:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"18765:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18755:3:13"},"nodeType":"YulFunctionCall","src":"18755:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18747:4:13"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18532:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18543:4:13","type":""}],"src":"18466:311:13"},{"body":{"nodeType":"YulBlock","src":"18846:80:13","statements":[{"nodeType":"YulAssignment","src":"18856:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18871:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18865:5:13"},"nodeType":"YulFunctionCall","src":"18865:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18856:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18914:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"18887:26:13"},"nodeType":"YulFunctionCall","src":"18887:33:13"},"nodeType":"YulExpressionStatement","src":"18887:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18824:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"18832:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18840:5:13","type":""}],"src":"18783:143:13"},{"body":{"nodeType":"YulBlock","src":"19062:619:13","statements":[{"nodeType":"YulAssignment","src":"19072:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19154:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19097:56:13"},"nodeType":"YulFunctionCall","src":"19097:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"19081:15:13"},"nodeType":"YulFunctionCall","src":"19081:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19072:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"19171:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"19182:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19175:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19204:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"19211:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19197:6:13"},"nodeType":"YulFunctionCall","src":"19197:21:13"},"nodeType":"YulExpressionStatement","src":"19197:21:13"},{"nodeType":"YulAssignment","src":"19227:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19238:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"19245:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:13"},"nodeType":"YulFunctionCall","src":"19234:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19227:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"19260:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19278:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19290:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"19298:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19286:3:13"},"nodeType":"YulFunctionCall","src":"19286:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19274:3:13"},"nodeType":"YulFunctionCall","src":"19274:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"19264:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"19332:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19346:77:13"},"nodeType":"YulFunctionCall","src":"19346:79:13"},"nodeType":"YulExpressionStatement","src":"19346:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"19319:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"19327:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19316:2:13"},"nodeType":"YulFunctionCall","src":"19316:15:13"},"nodeType":"YulIf","src":"19313:122:13"},{"body":{"nodeType":"YulBlock","src":"19520:155:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19535:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"19553:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"19539:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19577:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"19614:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"19626:3:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"19582:31:13"},"nodeType":"YulFunctionCall","src":"19582:48:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19570:6:13"},"nodeType":"YulFunctionCall","src":"19570:61:13"},"nodeType":"YulExpressionStatement","src":"19570:61:13"},{"nodeType":"YulAssignment","src":"19644:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19655:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"19660:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19651:3:13"},"nodeType":"YulFunctionCall","src":"19651:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19644:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19473:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"19478:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19470:2:13"},"nodeType":"YulFunctionCall","src":"19470:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19486:25:13","statements":[{"nodeType":"YulAssignment","src":"19488:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19499:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"19504:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19495:3:13"},"nodeType":"YulFunctionCall","src":"19495:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"19488:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"19448:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19450:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"19461:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"19454:3:13","type":""}]}]},"src":"19444:231:13"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19032:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"19040:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"19048:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19056:5:13","type":""}],"src":"18949:732:13"},{"body":{"nodeType":"YulBlock","src":"19792:297:13","statements":[{"body":{"nodeType":"YulBlock","src":"19841:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"19843:77:13"},"nodeType":"YulFunctionCall","src":"19843:79:13"},"nodeType":"YulExpressionStatement","src":"19843:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19820:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"19828:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19816:3:13"},"nodeType":"YulFunctionCall","src":"19816:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"19835:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19812:3:13"},"nodeType":"YulFunctionCall","src":"19812:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19805:6:13"},"nodeType":"YulFunctionCall","src":"19805:35:13"},"nodeType":"YulIf","src":"19802:122:13"},{"nodeType":"YulVariableDeclaration","src":"19933:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19953:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19947:5:13"},"nodeType":"YulFunctionCall","src":"19947:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19937:6:13","type":""}]},{"nodeType":"YulAssignment","src":"19969:114:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20056:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"20064:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20052:3:13"},"nodeType":"YulFunctionCall","src":"20052:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"20071:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"20079:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"19978:73:13"},"nodeType":"YulFunctionCall","src":"19978:105:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19969:5:13"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19770:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"19778:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19786:5:13","type":""}],"src":"19704:385:13"},{"body":{"nodeType":"YulBlock","src":"20281:1086:13","statements":[{"body":{"nodeType":"YulBlock","src":"20327:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20329:77:13"},"nodeType":"YulFunctionCall","src":"20329:79:13"},"nodeType":"YulExpressionStatement","src":"20329:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20302:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"20311:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20298:3:13"},"nodeType":"YulFunctionCall","src":"20298:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"20323:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20294:3:13"},"nodeType":"YulFunctionCall","src":"20294:32:13"},"nodeType":"YulIf","src":"20291:119:13"},{"nodeType":"YulBlock","src":"20420:306:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20435:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20459:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20470:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20455:3:13"},"nodeType":"YulFunctionCall","src":"20455:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20449:5:13"},"nodeType":"YulFunctionCall","src":"20449:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20439:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"20520:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20522:77:13"},"nodeType":"YulFunctionCall","src":"20522:79:13"},"nodeType":"YulExpressionStatement","src":"20522:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20492:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"20500:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20489:2:13"},"nodeType":"YulFunctionCall","src":"20489:30:13"},"nodeType":"YulIf","src":"20486:117:13"},{"nodeType":"YulAssignment","src":"20617:99:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20688:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"20699:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:13"},"nodeType":"YulFunctionCall","src":"20684:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20708:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"20627:56:13"},"nodeType":"YulFunctionCall","src":"20627:89:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20617:6:13"}]}]},{"nodeType":"YulBlock","src":"20736:307:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20751:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20775:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"20786:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20771:3:13"},"nodeType":"YulFunctionCall","src":"20771:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20765:5:13"},"nodeType":"YulFunctionCall","src":"20765:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20755:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"20837:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20839:77:13"},"nodeType":"YulFunctionCall","src":"20839:79:13"},"nodeType":"YulExpressionStatement","src":"20839:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20809:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"20817:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20806:2:13"},"nodeType":"YulFunctionCall","src":"20806:30:13"},"nodeType":"YulIf","src":"20803:117:13"},{"nodeType":"YulAssignment","src":"20934:99:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21005:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"21016:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21001:3:13"},"nodeType":"YulFunctionCall","src":"21001:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21025:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"20944:56:13"},"nodeType":"YulFunctionCall","src":"20944:89:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20934:6:13"}]}]},{"nodeType":"YulBlock","src":"21053:307:13","statements":[{"nodeType":"YulVariableDeclaration","src":"21068:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21092:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"21103:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21088:3:13"},"nodeType":"YulFunctionCall","src":"21088:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21082:5:13"},"nodeType":"YulFunctionCall","src":"21082:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21072:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"21154:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21156:77:13"},"nodeType":"YulFunctionCall","src":"21156:79:13"},"nodeType":"YulExpressionStatement","src":"21156:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21126:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21134:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21123:2:13"},"nodeType":"YulFunctionCall","src":"21123:30:13"},"nodeType":"YulIf","src":"21120:117:13"},{"nodeType":"YulAssignment","src":"21251:99:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21322:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"21333:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21318:3:13"},"nodeType":"YulFunctionCall","src":"21318:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21342:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"21261:56:13"},"nodeType":"YulFunctionCall","src":"21261:89:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21251:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20235:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20246:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20258:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20266:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20274:6:13","type":""}],"src":"20095:1272:13"},{"body":{"nodeType":"YulBlock","src":"21479:119:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21501:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21509:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21497:3:13"},"nodeType":"YulFunctionCall","src":"21497:14:13"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"21513:34:13","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21490:6:13"},"nodeType":"YulFunctionCall","src":"21490:58:13"},"nodeType":"YulExpressionStatement","src":"21490:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21569:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21577:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21565:3:13"},"nodeType":"YulFunctionCall","src":"21565:15:13"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"21582:8:13","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21558:6:13"},"nodeType":"YulFunctionCall","src":"21558:33:13"},"nodeType":"YulExpressionStatement","src":"21558:33:13"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21471:6:13","type":""}],"src":"21373:225:13"},{"body":{"nodeType":"YulBlock","src":"21750:220:13","statements":[{"nodeType":"YulAssignment","src":"21760:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21826:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21831:2:13","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21767:58:13"},"nodeType":"YulFunctionCall","src":"21767:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21760:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21932:3:13"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"21843:88:13"},"nodeType":"YulFunctionCall","src":"21843:93:13"},"nodeType":"YulExpressionStatement","src":"21843:93:13"},{"nodeType":"YulAssignment","src":"21945:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21956:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21961:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21952:3:13"},"nodeType":"YulFunctionCall","src":"21952:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21945:3:13"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21738:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21746:3:13","type":""}],"src":"21604:366:13"},{"body":{"nodeType":"YulBlock","src":"22147:248:13","statements":[{"nodeType":"YulAssignment","src":"22157:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22169:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22180:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22165:3:13"},"nodeType":"YulFunctionCall","src":"22165:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22157:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22204:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"22215:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22200:3:13"},"nodeType":"YulFunctionCall","src":"22200:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22223:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"22229:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22219:3:13"},"nodeType":"YulFunctionCall","src":"22219:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22193:6:13"},"nodeType":"YulFunctionCall","src":"22193:47:13"},"nodeType":"YulExpressionStatement","src":"22193:47:13"},{"nodeType":"YulAssignment","src":"22249:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22383:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22257:124:13"},"nodeType":"YulFunctionCall","src":"22257:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22249:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22127:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22142:4:13","type":""}],"src":"21976:419:13"},{"body":{"nodeType":"YulBlock","src":"22507:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22529:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22537:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22525:3:13"},"nodeType":"YulFunctionCall","src":"22525:14:13"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22541:34:13","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22518:6:13"},"nodeType":"YulFunctionCall","src":"22518:58:13"},"nodeType":"YulExpressionStatement","src":"22518:58:13"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22499:6:13","type":""}],"src":"22401:182:13"},{"body":{"nodeType":"YulBlock","src":"22735:220:13","statements":[{"nodeType":"YulAssignment","src":"22745:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22811:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"22816:2:13","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22752:58:13"},"nodeType":"YulFunctionCall","src":"22752:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22745:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22917:3:13"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"22828:88:13"},"nodeType":"YulFunctionCall","src":"22828:93:13"},"nodeType":"YulExpressionStatement","src":"22828:93:13"},{"nodeType":"YulAssignment","src":"22930:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22941:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"22946:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22937:3:13"},"nodeType":"YulFunctionCall","src":"22937:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22930:3:13"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22723:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22731:3:13","type":""}],"src":"22589:366:13"},{"body":{"nodeType":"YulBlock","src":"23132:248:13","statements":[{"nodeType":"YulAssignment","src":"23142:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23154:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23165:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23150:3:13"},"nodeType":"YulFunctionCall","src":"23150:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23142:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"23200:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23185:3:13"},"nodeType":"YulFunctionCall","src":"23185:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23208:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"23214:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23204:3:13"},"nodeType":"YulFunctionCall","src":"23204:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23178:6:13"},"nodeType":"YulFunctionCall","src":"23178:47:13"},"nodeType":"YulExpressionStatement","src":"23178:47:13"},{"nodeType":"YulAssignment","src":"23234:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23368:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23242:124:13"},"nodeType":"YulFunctionCall","src":"23242:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23234:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23112:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23127:4:13","type":""}],"src":"22961:419:13"},{"body":{"nodeType":"YulBlock","src":"23467:66:13","statements":[{"nodeType":"YulAssignment","src":"23477:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23521:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"23490:30:13"},"nodeType":"YulFunctionCall","src":"23490:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"23477:9:13"}]}]},"name":"convert_t_contract$_ArbitrageBot_$1246_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23447:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"23457:9:13","type":""}],"src":"23386:147:13"},{"body":{"nodeType":"YulBlock","src":"23625:87:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23642:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23699:5:13"}],"functionName":{"name":"convert_t_contract$_ArbitrageBot_$1246_to_t_address","nodeType":"YulIdentifier","src":"23647:51:13"},"nodeType":"YulFunctionCall","src":"23647:58:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23635:6:13"},"nodeType":"YulFunctionCall","src":"23635:71:13"},"nodeType":"YulExpressionStatement","src":"23635:71:13"}]},"name":"abi_encode_t_contract$_ArbitrageBot_$1246_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23613:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23620:3:13","type":""}],"src":"23539:173:13"},{"body":{"nodeType":"YulBlock","src":"23806:40:13","statements":[{"nodeType":"YulAssignment","src":"23817:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23833:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23827:5:13"},"nodeType":"YulFunctionCall","src":"23827:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23817:6:13"}]}]},"name":"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23789:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23799:6:13","type":""}],"src":"23718:128:13"},{"body":{"nodeType":"YulBlock","src":"23938:60:13","statements":[{"nodeType":"YulAssignment","src":"23948:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23956:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23948:4:13"}]},{"nodeType":"YulAssignment","src":"23969:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23981:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23986:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23977:3:13"},"nodeType":"YulFunctionCall","src":"23977:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23969:4:13"}]}]},"name":"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23925:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23933:4:13","type":""}],"src":"23852:146:13"},{"body":{"nodeType":"YulBlock","src":"24078:66:13","statements":[{"nodeType":"YulAssignment","src":"24088:50:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24132:5:13"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"24101:30:13"},"nodeType":"YulFunctionCall","src":"24101:37:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24088:9:13"}]}]},"name":"convert_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24058:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24068:9:13","type":""}],"src":"24004:140:13"},{"body":{"nodeType":"YulBlock","src":"24219:80:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24236:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24286:5:13"}],"functionName":{"name":"convert_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"24241:44:13"},"nodeType":"YulFunctionCall","src":"24241:51:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24229:6:13"},"nodeType":"YulFunctionCall","src":"24229:64:13"},"nodeType":"YulExpressionStatement","src":"24229:64:13"}]},"name":"abi_encode_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24207:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24214:3:13","type":""}],"src":"24150:149:13"},{"body":{"nodeType":"YulBlock","src":"24399:113:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24457:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"24465:3:13"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"24409:47:13"},"nodeType":"YulFunctionCall","src":"24409:60:13"},"nodeType":"YulExpressionStatement","src":"24409:60:13"},{"nodeType":"YulAssignment","src":"24478:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24496:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"24501:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24492:3:13"},"nodeType":"YulFunctionCall","src":"24492:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"24478:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"24372:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24380:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"24388:10:13","type":""}],"src":"24305:207:13"},{"body":{"nodeType":"YulBlock","src":"24607:38:13","statements":[{"nodeType":"YulAssignment","src":"24617:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24629:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"24634:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24625:3:13"},"nodeType":"YulFunctionCall","src":"24625:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"24617:4:13"}]}]},"name":"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24594:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"24602:4:13","type":""}],"src":"24518:127:13"},{"body":{"nodeType":"YulBlock","src":"24827:664:13","statements":[{"nodeType":"YulVariableDeclaration","src":"24837:82:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24913:5:13"}],"functionName":{"name":"array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"24851:61:13"},"nodeType":"YulFunctionCall","src":"24851:68:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24841:6:13","type":""}]},{"nodeType":"YulAssignment","src":"24928:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25009:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"25014:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24935:73:13"},"nodeType":"YulFunctionCall","src":"24935:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24928:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"25030:85:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25109:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25045:63:13"},"nodeType":"YulFunctionCall","src":"25045:70:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"25034:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25124:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"25138:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"25128:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"25214:252:13","statements":[{"nodeType":"YulVariableDeclaration","src":"25228:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25255:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25249:5:13"},"nodeType":"YulFunctionCall","src":"25249:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"25232:13:13","type":""}]},{"nodeType":"YulAssignment","src":"25275:84:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"25340:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"25355:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address","nodeType":"YulIdentifier","src":"25282:57:13"},"nodeType":"YulFunctionCall","src":"25282:77:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25275:3:13"}]},{"nodeType":"YulAssignment","src":"25372:84:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25449:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"25382:66:13"},"nodeType":"YulFunctionCall","src":"25382:74:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"25372:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25176:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"25179:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25173:2:13"},"nodeType":"YulFunctionCall","src":"25173:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25187:18:13","statements":[{"nodeType":"YulAssignment","src":"25189:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25198:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"25201:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25194:3:13"},"nodeType":"YulFunctionCall","src":"25194:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25189:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"25158:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"25160:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"25169:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25164:1:13","type":""}]}]},"src":"25154:312:13"},{"nodeType":"YulAssignment","src":"25475:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"25482:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25475:3:13"}]}]},"name":"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24806:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24813:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24822:3:13","type":""}],"src":"24689:802:13"},{"body":{"nodeType":"YulBlock","src":"25571:40:13","statements":[{"nodeType":"YulAssignment","src":"25582:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25598:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25592:5:13"},"nodeType":"YulFunctionCall","src":"25592:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25582:6:13"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25554:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25564:6:13","type":""}],"src":"25497:114:13"},{"body":{"nodeType":"YulBlock","src":"25728:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25745:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"25750:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25738:6:13"},"nodeType":"YulFunctionCall","src":"25738:19:13"},"nodeType":"YulExpressionStatement","src":"25738:19:13"},{"nodeType":"YulAssignment","src":"25766:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25785:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25790:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25781:3:13"},"nodeType":"YulFunctionCall","src":"25781:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25766:11:13"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25700:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"25705:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25716:11:13","type":""}],"src":"25617:184:13"},{"body":{"nodeType":"YulBlock","src":"25879:60:13","statements":[{"nodeType":"YulAssignment","src":"25889:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25897:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25889:4:13"}]},{"nodeType":"YulAssignment","src":"25910:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"25922:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25927:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25918:3:13"},"nodeType":"YulFunctionCall","src":"25918:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25910:4:13"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25866:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25874:4:13","type":""}],"src":"25807:132:13"},{"body":{"nodeType":"YulBlock","src":"26000:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26017:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26040:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26022:17:13"},"nodeType":"YulFunctionCall","src":"26022:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26010:6:13"},"nodeType":"YulFunctionCall","src":"26010:37:13"},"nodeType":"YulExpressionStatement","src":"26010:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25988:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25995:3:13","type":""}],"src":"25945:108:13"},{"body":{"nodeType":"YulBlock","src":"26139:99:13","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26183:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"26191:3:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26149:33:13"},"nodeType":"YulFunctionCall","src":"26149:46:13"},"nodeType":"YulExpressionStatement","src":"26149:46:13"},{"nodeType":"YulAssignment","src":"26204:28:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26222:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"26227:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26218:3:13"},"nodeType":"YulFunctionCall","src":"26218:14:13"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"26204:10:13"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"26112:6:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26120:3:13","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"26128:10:13","type":""}],"src":"26059:179:13"},{"body":{"nodeType":"YulBlock","src":"26319:38:13","statements":[{"nodeType":"YulAssignment","src":"26329:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"26341:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"26346:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26337:3:13"},"nodeType":"YulFunctionCall","src":"26337:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"26329:4:13"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"26306:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"26314:4:13","type":""}],"src":"26244:113:13"},{"body":{"nodeType":"YulBlock","src":"26517:608:13","statements":[{"nodeType":"YulVariableDeclaration","src":"26527:68:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26589:5:13"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26541:47:13"},"nodeType":"YulFunctionCall","src":"26541:54:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26531:6:13","type":""}]},{"nodeType":"YulAssignment","src":"26604:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26685:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"26690:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26611:73:13"},"nodeType":"YulFunctionCall","src":"26611:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26604:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"26706:71:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26771:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"26721:49:13"},"nodeType":"YulFunctionCall","src":"26721:56:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"26710:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"26786:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"26800:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"26790:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"26876:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"26890:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"26917:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26911:5:13"},"nodeType":"YulFunctionCall","src":"26911:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"26894:13:13","type":""}]},{"nodeType":"YulAssignment","src":"26937:70:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"26988:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"27003:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26944:43:13"},"nodeType":"YulFunctionCall","src":"26944:63:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26937:3:13"}]},{"nodeType":"YulAssignment","src":"27020:70:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"27083:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"27030:52:13"},"nodeType":"YulFunctionCall","src":"27030:60:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"27020:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"26838:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"26841:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26835:2:13"},"nodeType":"YulFunctionCall","src":"26835:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"26849:18:13","statements":[{"nodeType":"YulAssignment","src":"26851:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"26860:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"26863:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26856:3:13"},"nodeType":"YulFunctionCall","src":"26856:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"26851:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"26820:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"26822:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"26831:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"26826:1:13","type":""}]}]},"src":"26816:284:13"},{"nodeType":"YulAssignment","src":"27109:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"27116:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27109:3:13"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26496:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26503:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26512:3:13","type":""}],"src":"26393:732:13"},{"body":{"nodeType":"YulBlock","src":"27189:40:13","statements":[{"nodeType":"YulAssignment","src":"27200:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27216:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27210:5:13"},"nodeType":"YulFunctionCall","src":"27210:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27200:6:13"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27172:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27182:6:13","type":""}],"src":"27131:98:13"},{"body":{"nodeType":"YulBlock","src":"27330:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27347:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"27352:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27340:6:13"},"nodeType":"YulFunctionCall","src":"27340:19:13"},"nodeType":"YulExpressionStatement","src":"27340:19:13"},{"nodeType":"YulAssignment","src":"27368:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27387:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27392:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27383:3:13"},"nodeType":"YulFunctionCall","src":"27383:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27368:11:13"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27302:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"27307:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27318:11:13","type":""}],"src":"27235:168:13"},{"body":{"nodeType":"YulBlock","src":"27471:184:13","statements":[{"nodeType":"YulVariableDeclaration","src":"27481:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"27490:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"27485:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"27550:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27575:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"27580:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27571:3:13"},"nodeType":"YulFunctionCall","src":"27571:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27594:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"27599:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27590:3:13"},"nodeType":"YulFunctionCall","src":"27590:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27584:5:13"},"nodeType":"YulFunctionCall","src":"27584:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27564:6:13"},"nodeType":"YulFunctionCall","src":"27564:39:13"},"nodeType":"YulExpressionStatement","src":"27564:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27511:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"27514:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27508:2:13"},"nodeType":"YulFunctionCall","src":"27508:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27522:19:13","statements":[{"nodeType":"YulAssignment","src":"27524:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27533:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"27536:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27529:3:13"},"nodeType":"YulFunctionCall","src":"27529:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"27524:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"27504:3:13","statements":[]},"src":"27500:113:13"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"27633:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"27638:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27629:3:13"},"nodeType":"YulFunctionCall","src":"27629:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"27647:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27622:6:13"},"nodeType":"YulFunctionCall","src":"27622:27:13"},"nodeType":"YulExpressionStatement","src":"27622:27:13"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"27453:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"27458:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"27463:6:13","type":""}],"src":"27409:246:13"},{"body":{"nodeType":"YulBlock","src":"27751:283:13","statements":[{"nodeType":"YulVariableDeclaration","src":"27761:52:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27807:5:13"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"27775:31:13"},"nodeType":"YulFunctionCall","src":"27775:38:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27765:6:13","type":""}]},{"nodeType":"YulAssignment","src":"27822:77:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27887:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"27892:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27829:57:13"},"nodeType":"YulFunctionCall","src":"27829:70:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27822:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27947:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"27954:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27943:3:13"},"nodeType":"YulFunctionCall","src":"27943:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"27961:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"27966:6:13"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"27908:34:13"},"nodeType":"YulFunctionCall","src":"27908:65:13"},"nodeType":"YulExpressionStatement","src":"27908:65:13"},{"nodeType":"YulAssignment","src":"27982:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27993:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28020:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"27998:21:13"},"nodeType":"YulFunctionCall","src":"27998:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27989:3:13"},"nodeType":"YulFunctionCall","src":"27989:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27982:3:13"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27732:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27739:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27747:3:13","type":""}],"src":"27661:373:13"},{"body":{"nodeType":"YulBlock","src":"28375:677:13","statements":[{"nodeType":"YulAssignment","src":"28385:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28397:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28408:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28393:3:13"},"nodeType":"YulFunctionCall","src":"28393:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28385:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28487:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28500:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28511:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28496:3:13"},"nodeType":"YulFunctionCall","src":"28496:17:13"}],"functionName":{"name":"abi_encode_t_contract$_ArbitrageBot_$1246_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28422:64:13"},"nodeType":"YulFunctionCall","src":"28422:92:13"},"nodeType":"YulExpressionStatement","src":"28422:92:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28535:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28546:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28531:3:13"},"nodeType":"YulFunctionCall","src":"28531:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28555:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"28561:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28551:3:13"},"nodeType":"YulFunctionCall","src":"28551:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28524:6:13"},"nodeType":"YulFunctionCall","src":"28524:48:13"},"nodeType":"YulExpressionStatement","src":"28524:48:13"},{"nodeType":"YulAssignment","src":"28581:130:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28697:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"28706:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28589:107:13"},"nodeType":"YulFunctionCall","src":"28589:122:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28581:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28732:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28743:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28728:3:13"},"nodeType":"YulFunctionCall","src":"28728:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28752:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"28758:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28748:3:13"},"nodeType":"YulFunctionCall","src":"28748:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28721:6:13"},"nodeType":"YulFunctionCall","src":"28721:48:13"},"nodeType":"YulExpressionStatement","src":"28721:48:13"},{"nodeType":"YulAssignment","src":"28778:116:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28880:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"28889:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28786:93:13"},"nodeType":"YulFunctionCall","src":"28786:108:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28778:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28915:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"28926:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28911:3:13"},"nodeType":"YulFunctionCall","src":"28911:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28935:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"28941:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28931:3:13"},"nodeType":"YulFunctionCall","src":"28931:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28904:6:13"},"nodeType":"YulFunctionCall","src":"28904:48:13"},"nodeType":"YulExpressionStatement","src":"28904:48:13"},{"nodeType":"YulAssignment","src":"28961:84:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29031:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"29040:4:13"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28969:61:13"},"nodeType":"YulFunctionCall","src":"28969:76:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28961:4:13"}]}]},"name":"abi_encode_tuple_t_contract$_ArbitrageBot_$1246_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28323:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28335:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28343:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28351:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28359:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28370:4:13","type":""}],"src":"28040:1012:13"},{"body":{"nodeType":"YulBlock","src":"29086:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29103:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29106:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29096:6:13"},"nodeType":"YulFunctionCall","src":"29096:88:13"},"nodeType":"YulExpressionStatement","src":"29096:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29200:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"29203:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29193:6:13"},"nodeType":"YulFunctionCall","src":"29193:15:13"},"nodeType":"YulExpressionStatement","src":"29193:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29224:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29227:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29217:6:13"},"nodeType":"YulFunctionCall","src":"29217:15:13"},"nodeType":"YulExpressionStatement","src":"29217:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"29058:180:13"},{"body":{"nodeType":"YulBlock","src":"29288:147:13","statements":[{"nodeType":"YulAssignment","src":"29298:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29321:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29303:17:13"},"nodeType":"YulFunctionCall","src":"29303:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29298:1:13"}]},{"nodeType":"YulAssignment","src":"29332:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29355:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29337:17:13"},"nodeType":"YulFunctionCall","src":"29337:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29332:1:13"}]},{"nodeType":"YulAssignment","src":"29366:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29377:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"29380:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29373:3:13"},"nodeType":"YulFunctionCall","src":"29373:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29366:3:13"}]},{"body":{"nodeType":"YulBlock","src":"29406:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29408:16:13"},"nodeType":"YulFunctionCall","src":"29408:18:13"},"nodeType":"YulExpressionStatement","src":"29408:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29398:1:13"},{"name":"sum","nodeType":"YulIdentifier","src":"29401:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29395:2:13"},"nodeType":"YulFunctionCall","src":"29395:10:13"},"nodeType":"YulIf","src":"29392:36:13"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29275:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"29278:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29284:3:13","type":""}],"src":"29244:191:13"},{"body":{"nodeType":"YulBlock","src":"29494:32:13","statements":[{"nodeType":"YulAssignment","src":"29504:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"29515:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29504:7:13"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29476:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29486:7:13","type":""}],"src":"29441:85:13"},{"body":{"nodeType":"YulBlock","src":"29600:90:13","statements":[{"nodeType":"YulAssignment","src":"29610:74:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29676:5:13"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"29650:25:13"},"nodeType":"YulFunctionCall","src":"29650:32:13"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29641:8:13"},"nodeType":"YulFunctionCall","src":"29641:42:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29623:17:13"},"nodeType":"YulFunctionCall","src":"29623:61:13"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29610:9:13"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29580:5:13","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29590:9:13","type":""}],"src":"29532:158:13"},{"body":{"nodeType":"YulBlock","src":"29769:74:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29786:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29830:5:13"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"29791:38:13"},"nodeType":"YulFunctionCall","src":"29791:45:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29779:6:13"},"nodeType":"YulFunctionCall","src":"29779:58:13"},"nodeType":"YulExpressionStatement","src":"29779:58:13"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29757:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29764:3:13","type":""}],"src":"29696:147:13"},{"body":{"nodeType":"YulBlock","src":"29923:40:13","statements":[{"nodeType":"YulAssignment","src":"29934:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29950:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29944:5:13"},"nodeType":"YulFunctionCall","src":"29944:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"29934:6:13"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29906:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"29916:6:13","type":""}],"src":"29849:114:13"},{"body":{"nodeType":"YulBlock","src":"30041:60:13","statements":[{"nodeType":"YulAssignment","src":"30051:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30059:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30051:4:13"}]},{"nodeType":"YulAssignment","src":"30072:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30084:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30089:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30080:3:13"},"nodeType":"YulFunctionCall","src":"30080:14:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30072:4:13"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30028:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30036:4:13","type":""}],"src":"29969:132:13"},{"body":{"nodeType":"YulBlock","src":"30182:38:13","statements":[{"nodeType":"YulAssignment","src":"30192:22:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30204:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30209:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30200:3:13"},"nodeType":"YulFunctionCall","src":"30200:14:13"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"30192:4:13"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30169:3:13","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"30177:4:13","type":""}],"src":"30107:113:13"},{"body":{"nodeType":"YulBlock","src":"30380:608:13","statements":[{"nodeType":"YulVariableDeclaration","src":"30390:68:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30452:5:13"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30404:47:13"},"nodeType":"YulFunctionCall","src":"30404:54:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"30394:6:13","type":""}]},{"nodeType":"YulAssignment","src":"30467:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30548:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"30553:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30474:73:13"},"nodeType":"YulFunctionCall","src":"30474:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30467:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"30569:71:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30634:5:13"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30584:49:13"},"nodeType":"YulFunctionCall","src":"30584:56:13"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"30573:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30649:21:13","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"30663:7:13"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"30653:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"30739:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"30753:34:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30780:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30774:5:13"},"nodeType":"YulFunctionCall","src":"30774:13:13"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"30757:13:13","type":""}]},{"nodeType":"YulAssignment","src":"30800:70:13","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"30851:13:13"},{"name":"pos","nodeType":"YulIdentifier","src":"30866:3:13"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"30807:43:13"},"nodeType":"YulFunctionCall","src":"30807:63:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30800:3:13"}]},{"nodeType":"YulAssignment","src":"30883:70:13","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30946:6:13"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"30893:52:13"},"nodeType":"YulFunctionCall","src":"30893:60:13"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"30883:6:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30701:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"30704:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30698:2:13"},"nodeType":"YulFunctionCall","src":"30698:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30712:18:13","statements":[{"nodeType":"YulAssignment","src":"30714:14:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30723:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"30726:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30719:3:13"},"nodeType":"YulFunctionCall","src":"30719:9:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30714:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"30683:14:13","statements":[{"nodeType":"YulVariableDeclaration","src":"30685:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"30694:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30689:1:13","type":""}]}]},"src":"30679:284:13"},{"nodeType":"YulAssignment","src":"30972:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"30979:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30972:3:13"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30359:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30366:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30375:3:13","type":""}],"src":"30256:732:13"},{"body":{"nodeType":"YulBlock","src":"31262:563:13","statements":[{"nodeType":"YulAssignment","src":"31272:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31284:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31295:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31280:3:13"},"nodeType":"YulFunctionCall","src":"31280:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31272:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31353:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31366:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31377:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31362:3:13"},"nodeType":"YulFunctionCall","src":"31362:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31309:43:13"},"nodeType":"YulFunctionCall","src":"31309:71:13"},"nodeType":"YulExpressionStatement","src":"31309:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31442:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31455:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31466:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31451:3:13"},"nodeType":"YulFunctionCall","src":"31451:18:13"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31390:51:13"},"nodeType":"YulFunctionCall","src":"31390:80:13"},"nodeType":"YulExpressionStatement","src":"31390:80:13"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31491:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31502:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31487:3:13"},"nodeType":"YulFunctionCall","src":"31487:18:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31511:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"31517:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31507:3:13"},"nodeType":"YulFunctionCall","src":"31507:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31480:6:13"},"nodeType":"YulFunctionCall","src":"31480:48:13"},"nodeType":"YulExpressionStatement","src":"31480:48:13"},{"nodeType":"YulAssignment","src":"31537:116:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31639:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"31648:4:13"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31545:93:13"},"nodeType":"YulFunctionCall","src":"31545:108:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31537:4:13"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31707:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31720:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31731:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31716:3:13"},"nodeType":"YulFunctionCall","src":"31716:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31663:43:13"},"nodeType":"YulFunctionCall","src":"31663:72:13"},"nodeType":"YulExpressionStatement","src":"31663:72:13"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"31789:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31802:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"31813:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31798:3:13"},"nodeType":"YulFunctionCall","src":"31798:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31745:43:13"},"nodeType":"YulFunctionCall","src":"31745:73:13"},"nodeType":"YulExpressionStatement","src":"31745:73:13"}]},"name":"abi_encode_tuple_t_uint256_t_rational_1_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31202:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31214:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31222:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31230:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31238:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31246:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31257:4:13","type":""}],"src":"30994:831:13"},{"body":{"nodeType":"YulBlock","src":"31961:619:13","statements":[{"nodeType":"YulAssignment","src":"31971:90:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32053:6:13"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31996:56:13"},"nodeType":"YulFunctionCall","src":"31996:64:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"31980:15:13"},"nodeType":"YulFunctionCall","src":"31980:81:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"31971:5:13"}]},{"nodeType":"YulVariableDeclaration","src":"32070:16:13","value":{"name":"array","nodeType":"YulIdentifier","src":"32081:5:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"32074:3:13","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"32103:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"32110:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32096:6:13"},"nodeType":"YulFunctionCall","src":"32096:21:13"},"nodeType":"YulExpressionStatement","src":"32096:21:13"},{"nodeType":"YulAssignment","src":"32126:23:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"32137:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"32144:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32133:3:13"},"nodeType":"YulFunctionCall","src":"32133:16:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"32126:3:13"}]},{"nodeType":"YulVariableDeclaration","src":"32159:44:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32177:6:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32189:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"32197:4:13","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32185:3:13"},"nodeType":"YulFunctionCall","src":"32185:17:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32173:3:13"},"nodeType":"YulFunctionCall","src":"32173:30:13"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"32163:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"32231:103:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"32245:77:13"},"nodeType":"YulFunctionCall","src":"32245:79:13"},"nodeType":"YulExpressionStatement","src":"32245:79:13"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"32218:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"32226:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32215:2:13"},"nodeType":"YulFunctionCall","src":"32215:15:13"},"nodeType":"YulIf","src":"32212:122:13"},{"body":{"nodeType":"YulBlock","src":"32419:155:13","statements":[{"nodeType":"YulVariableDeclaration","src":"32434:21:13","value":{"name":"src","nodeType":"YulIdentifier","src":"32452:3:13"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"32438:10:13","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32476:3:13"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"32513:10:13"},{"name":"end","nodeType":"YulIdentifier","src":"32525:3:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"32481:31:13"},"nodeType":"YulFunctionCall","src":"32481:48:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32469:6:13"},"nodeType":"YulFunctionCall","src":"32469:61:13"},"nodeType":"YulExpressionStatement","src":"32469:61:13"},{"nodeType":"YulAssignment","src":"32543:21:13","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"32554:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"32559:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32550:3:13"},"nodeType":"YulFunctionCall","src":"32550:14:13"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"32543:3:13"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32372:3:13"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"32377:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32369:2:13"},"nodeType":"YulFunctionCall","src":"32369:15:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32385:25:13","statements":[{"nodeType":"YulAssignment","src":"32387:21:13","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32398:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"32403:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32394:3:13"},"nodeType":"YulFunctionCall","src":"32394:14:13"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"32387:3:13"}]}]},"pre":{"nodeType":"YulBlock","src":"32347:21:13","statements":[{"nodeType":"YulVariableDeclaration","src":"32349:17:13","value":{"name":"offset","nodeType":"YulIdentifier","src":"32360:6:13"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"32353:3:13","type":""}]}]},"src":"32343:231:13"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"31931:6:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"31939:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"31947:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"31955:5:13","type":""}],"src":"31848:732:13"},{"body":{"nodeType":"YulBlock","src":"32691:297:13","statements":[{"body":{"nodeType":"YulBlock","src":"32740:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"32742:77:13"},"nodeType":"YulFunctionCall","src":"32742:79:13"},"nodeType":"YulExpressionStatement","src":"32742:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32719:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"32727:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32715:3:13"},"nodeType":"YulFunctionCall","src":"32715:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"32734:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32711:3:13"},"nodeType":"YulFunctionCall","src":"32711:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"32704:6:13"},"nodeType":"YulFunctionCall","src":"32704:35:13"},"nodeType":"YulIf","src":"32701:122:13"},{"nodeType":"YulVariableDeclaration","src":"32832:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32852:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32846:5:13"},"nodeType":"YulFunctionCall","src":"32846:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32836:6:13","type":""}]},{"nodeType":"YulAssignment","src":"32868:114:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32955:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"32963:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32951:3:13"},"nodeType":"YulFunctionCall","src":"32951:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"32970:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"32978:3:13"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"32877:73:13"},"nodeType":"YulFunctionCall","src":"32877:105:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"32868:5:13"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"32669:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"32677:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"32685:5:13","type":""}],"src":"32603:385:13"},{"body":{"nodeType":"YulBlock","src":"33096:452:13","statements":[{"body":{"nodeType":"YulBlock","src":"33142:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33144:77:13"},"nodeType":"YulFunctionCall","src":"33144:79:13"},"nodeType":"YulExpressionStatement","src":"33144:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33117:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"33126:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33113:3:13"},"nodeType":"YulFunctionCall","src":"33113:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"33138:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33109:3:13"},"nodeType":"YulFunctionCall","src":"33109:32:13"},"nodeType":"YulIf","src":"33106:119:13"},{"nodeType":"YulBlock","src":"33235:306:13","statements":[{"nodeType":"YulVariableDeclaration","src":"33250:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33274:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"33285:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33270:3:13"},"nodeType":"YulFunctionCall","src":"33270:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33264:5:13"},"nodeType":"YulFunctionCall","src":"33264:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33254:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"33335:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"33337:77:13"},"nodeType":"YulFunctionCall","src":"33337:79:13"},"nodeType":"YulExpressionStatement","src":"33337:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33307:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"33315:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33304:2:13"},"nodeType":"YulFunctionCall","src":"33304:30:13"},"nodeType":"YulIf","src":"33301:117:13"},{"nodeType":"YulAssignment","src":"33432:99:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33503:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"33514:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33499:3:13"},"nodeType":"YulFunctionCall","src":"33499:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33523:7:13"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"33442:56:13"},"nodeType":"YulFunctionCall","src":"33442:89:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33432:6:13"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33066:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33077:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33089:6:13","type":""}],"src":"32994:554:13"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$140(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$140(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$140(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$140(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$140(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$140(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$140(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // contract IERC20[]\n    function abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_contract$_IERC20_$140(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // contract IERC20[]\n    function abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVault_$761_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVault_$761_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVault_$761_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVault_$761__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVault_$761_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, length, pos)  -> end  {\n\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_calldata_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2, value3,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value4, value5,  tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message sender must be Balancer \")\n\n        mstore(add(memPtr, 32), \"Vault!\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb1945dafc609385fdd9cbf829c1bbac1b8e137eb1509f880d6b3032743ad231_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_contract$_ArbitrageBot_$1246_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ArbitrageBot_$1246_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ArbitrageBot_$1246_to_t_address(value))\n    }\n\n    function array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function convert_t_contract$_IERC20_$140_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$140_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$140_to_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_IERC20_$140_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // contract IERC20[] -> address[]\n    function abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_IERC20_$140_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_contract$_ArbitrageBot_$1246_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ArbitrageBot_$1246_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_IERC20_$140_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_1_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100875760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ec578063f04f27071461010a578063f2fde38b14610126578063fbfa77cf1461014257610087565b8062affb731461008c57806317c7c23a146100aa57806324e26241146100c6578063715018a6146100e2575b600080fd5b610094610160565b6040516100a19190610c03565b60405180910390f35b6100c460048036038101906100bf9190610cf9565b610186565b005b6100e060048036038101906100db9190610e13565b6102da565b005b6100ea6103ff565b005b6100f4610413565b6040516101019190610c03565b60405180910390f35b610124600480360381019061011f9190611107565b61043c565b005b610140600480360381019061013b91906111de565b6105f8565b005b61014a61067b565b604051610157919061126a565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018e6106a1565b6000600167ffffffffffffffff8111156101ab576101aa610e51565b5b6040519080825280602002602001820160405280156101d95781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff8111156101f9576101f8610e51565b5b6040519080825280602002602001820160405280156102275781602001602082028036833780820191505090505b509050898260008151811061023f5761023e611285565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050888160008151811061028e5761028d611285565b5b6020026020010181815250506102ce82828a8a8a8a8a8a6040516020016102ba96959493929190611377565b60405160208183030381529060405261071f565b50505050505050505050565b6102e26106a1565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035a9190610c03565b602060405180830381865afa158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b91906113de565b6040518363ffffffff1660e01b81526004016103b892919061141a565b6020604051808303816000875af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb919061147b565b5050565b6104076106a1565b61041160006107b7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c39061152b565b60405180910390fd5b6000806000838060200190518101906104e59190611623565b92509250925060008660008151811061050157610500611285565b5b602002602001015190506105178484848461087b565b8760008151811061052b5761052a611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168960008151811061058557610584611285565b5b60200260200101516040518363ffffffff1660e01b81526004016105aa92919061141a565b6020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed919061147b565b505050505050505050565b6106006106a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361066f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106669061173c565b60405180910390fd5b610678816107b7565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106a9610bba565b73ffffffffffffffffffffffffffffffffffffffff166106c7610413565b73ffffffffffffffffffffffffffffffffffffffff161461071d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610714906117a8565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c38449e308585856040518563ffffffff1660e01b815260040161078094939291906119e5565b600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006104b04261088b9190611a6e565b90506000836000815181106108a3576108a2611285565b5b602002602001015190506000846001815181106108c3576108c2611285565b5b60200260200101519050866000815181106108e1576108e0611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b383866040518363ffffffff1660e01b815260040161092392919061141a565b6020604051808303816000875af1158015610942573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610966919061147b565b508173ffffffffffffffffffffffffffffffffffffffff166338ed17398560018a30886040518663ffffffff1660e01b81526004016109a9959493929190611b63565b6000604051808303816000875af11580156109c8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109f19190611c54565b50600087600181518110610a0857610a07611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a489190610c03565b602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8991906113de565b905086600081518110610a9f57610a9e611285565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b8152600401610ae192919061141a565b6020604051808303816000875af1158015610b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b24919061147b565b508173ffffffffffffffffffffffffffffffffffffffff166338ed17398260018a30896040518663ffffffff1660e01b8152600401610b67959493929190611b63565b6000604051808303816000875af1158015610b86573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610baf9190611c54565b505050505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bed82610bc2565b9050919050565b610bfd81610be2565b82525050565b6000602082019050610c186000830184610bf4565b92915050565b6000604051905090565b600080fd5b600080fd5b610c3b81610be2565b8114610c4657600080fd5b50565b600081359050610c5881610c32565b92915050565b6000819050919050565b610c7181610c5e565b8114610c7c57600080fd5b50565b600081359050610c8e81610c68565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610cb957610cb8610c94565b5b8235905067ffffffffffffffff811115610cd657610cd5610c99565b5b602083019150836020820283011115610cf257610cf1610c9e565b5b9250929050565b60008060008060008060008060a0898b031215610d1957610d18610c28565b5b6000610d278b828c01610c49565b9850506020610d388b828c01610c7f565b975050604089013567ffffffffffffffff811115610d5957610d58610c2d565b5b610d658b828c01610ca3565b9650965050606089013567ffffffffffffffff811115610d8857610d87610c2d565b5b610d948b828c01610ca3565b9450945050608089013567ffffffffffffffff811115610db757610db6610c2d565b5b610dc38b828c01610ca3565b92509250509295985092959890939650565b6000610de082610be2565b9050919050565b610df081610dd5565b8114610dfb57600080fd5b50565b600081359050610e0d81610de7565b92915050565b600060208284031215610e2957610e28610c28565b5b6000610e3784828501610dfe565b91505092915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8982610e40565b810181811067ffffffffffffffff82111715610ea857610ea7610e51565b5b80604052505050565b6000610ebb610c1e565b9050610ec78282610e80565b919050565b600067ffffffffffffffff821115610ee757610ee6610e51565b5b602082029050602081019050919050565b6000610f0b610f0684610ecc565b610eb1565b90508083825260208201905060208402830185811115610f2e57610f2d610c9e565b5b835b81811015610f575780610f438882610dfe565b845260208401935050602081019050610f30565b5050509392505050565b600082601f830112610f7657610f75610c94565b5b8135610f86848260208601610ef8565b91505092915050565b600067ffffffffffffffff821115610faa57610fa9610e51565b5b602082029050602081019050919050565b6000610fce610fc984610f8f565b610eb1565b90508083825260208201905060208402830185811115610ff157610ff0610c9e565b5b835b8181101561101a57806110068882610c7f565b845260208401935050602081019050610ff3565b5050509392505050565b600082601f83011261103957611038610c94565b5b8135611049848260208601610fbb565b91505092915050565b600080fd5b600067ffffffffffffffff82111561107257611071610e51565b5b61107b82610e40565b9050602081019050919050565b82818337600083830152505050565b60006110aa6110a584611057565b610eb1565b9050828152602081018484840111156110c6576110c5611052565b5b6110d1848285611088565b509392505050565b600082601f8301126110ee576110ed610c94565b5b81356110fe848260208601611097565b91505092915050565b6000806000806080858703121561112157611120610c28565b5b600085013567ffffffffffffffff81111561113f5761113e610c2d565b5b61114b87828801610f61565b945050602085013567ffffffffffffffff81111561116c5761116b610c2d565b5b61117887828801611024565b935050604085013567ffffffffffffffff81111561119957611198610c2d565b5b6111a587828801611024565b925050606085013567ffffffffffffffff8111156111c6576111c5610c2d565b5b6111d2878288016110d9565b91505092959194509250565b6000602082840312156111f4576111f3610c28565b5b600061120284828501610c49565b91505092915050565b6000819050919050565b600061123061122b61122684610bc2565b61120b565b610bc2565b9050919050565b600061124282611215565b9050919050565b600061125482611237565b9050919050565b61126481611249565b82525050565b600060208201905061127f600083018461125b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b6000819050919050565b6112d881610be2565b82525050565b60006112ea83836112cf565b60208301905092915050565b60006113056020840184610c49565b905092915050565b6000602082019050919050565b600061132683856112b4565b9350611331826112c5565b8060005b8581101561136a5761134782846112f6565b61135188826112de565b975061135c8361130d565b925050600181019050611335565b5085925050509392505050565b6000606082019050818103600083015261139281888a61131a565b905081810360208301526113a781868861131a565b905081810360408301526113bc81848661131a565b9050979650505050505050565b6000815190506113d881610c68565b92915050565b6000602082840312156113f4576113f3610c28565b5b6000611402848285016113c9565b91505092915050565b61141481610c5e565b82525050565b600060408201905061142f6000830185610bf4565b61143c602083018461140b565b9392505050565b60008115159050919050565b61145881611443565b811461146357600080fd5b50565b6000815190506114758161144f565b92915050565b60006020828403121561149157611490610c28565b5b600061149f84828501611466565b91505092915050565b600082825260208201905092915050565b7f4d6573736167652073656e646572206d7573742062652042616c616e6365722060008201527f5661756c74210000000000000000000000000000000000000000000000000000602082015250565b60006115156026836114a8565b9150611520826114b9565b604082019050919050565b6000602082019050818103600083015261154481611508565b9050919050565b600067ffffffffffffffff82111561156657611565610e51565b5b602082029050602081019050919050565b60008151905061158681610c32565b92915050565b600061159f61159a8461154b565b610eb1565b905080838252602082019050602084028301858111156115c2576115c1610c9e565b5b835b818110156115eb57806115d78882611577565b8452602084019350506020810190506115c4565b5050509392505050565b600082601f83011261160a57611609610c94565b5b815161161a84826020860161158c565b91505092915050565b60008060006060848603121561163c5761163b610c28565b5b600084015167ffffffffffffffff81111561165a57611659610c2d565b5b611666868287016115f5565b935050602084015167ffffffffffffffff81111561168757611686610c2d565b5b611693868287016115f5565b925050604084015167ffffffffffffffff8111156116b4576116b3610c2d565b5b6116c0868287016115f5565b9150509250925092565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006117266026836114a8565b9150611731826116ca565b604082019050919050565b6000602082019050818103600083015261175581611719565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117926020836114a8565b915061179d8261175c565b602082019050919050565b600060208201905081810360008301526117c181611785565b9050919050565b60006117d382611237565b9050919050565b6117e3816117c8565b82525050565b600081519050919050565b6000819050602082019050919050565b600061180f82611237565b9050919050565b61181f81611804565b82525050565b60006118318383611816565b60208301905092915050565b6000602082019050919050565b6000611855826117e9565b61185f81856112b4565b935061186a836117f4565b8060005b8381101561189b5781516118828882611825565b975061188d8361183d565b92505060018101905061186e565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118dd81610c5e565b82525050565b60006118ef83836118d4565b60208301905092915050565b6000602082019050919050565b6000611913826118a8565b61191d81856118b3565b9350611928836118c4565b8060005b8381101561195957815161194088826118e3565b975061194b836118fb565b92505060018101905061192c565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119a0578082015181840152602081019050611985565b60008484015250505050565b60006119b782611966565b6119c18185611971565b93506119d1818560208601611982565b6119da81610e40565b840191505092915050565b60006080820190506119fa60008301876117da565b8181036020830152611a0c818661184a565b90508181036040830152611a208185611908565b90508181036060830152611a3481846119ac565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a7982610c5e565b9150611a8483610c5e565b9250828201905080821115611a9c57611a9b611a3f565b5b92915050565b6000819050919050565b6000611ac7611ac2611abd84611aa2565b61120b565b610c5e565b9050919050565b611ad781611aac565b82525050565b600081519050919050565b6000819050602082019050919050565b6000602082019050919050565b6000611b1082611add565b611b1a81856112b4565b9350611b2583611ae8565b8060005b83811015611b56578151611b3d88826112de565b9750611b4883611af8565b925050600181019050611b29565b5085935050505092915050565b600060a082019050611b78600083018861140b565b611b856020830187611ace565b8181036040830152611b978186611b05565b9050611ba66060830185610bf4565b611bb3608083018461140b565b9695505050505050565b6000611bd0611bcb84610f8f565b610eb1565b90508083825260208201905060208402830185811115611bf357611bf2610c9e565b5b835b81811015611c1c5780611c0888826113c9565b845260208401935050602081019050611bf5565b5050509392505050565b600082601f830112611c3b57611c3a610c94565b5b8151611c4b848260208601611bbd565b91505092915050565b600060208284031215611c6a57611c69610c28565b5b600082015167ffffffffffffffff811115611c8857611c87610c2d565b5b611c9484828501611c26565b9150509291505056fea2646970667358221220ff001dcfc81a869a692376eb4e5fbf942fdf8e6c2f97d354d041d0f3db58129164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xF04F2707 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x142 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xAFFB73 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x17C7C23A EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x24E26241 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x186 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AB JUMPI PUSH2 0x1AA PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x227 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP10 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F JUMPI PUSH2 0x23E PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP9 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2CE DUP3 DUP3 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2BA SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x71F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x6A1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x407 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x411 PUSH1 0x0 PUSH2 0x7B7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C3 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x4E5 SWAP2 SWAP1 PUSH2 0x1623 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x517 DUP5 DUP5 DUP5 DUP5 PUSH2 0x87B JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x52B JUMPI PUSH2 0x52A PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x585 JUMPI PUSH2 0x584 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0x173C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x7B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6A9 PUSH2 0xBBA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C7 PUSH2 0x413 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x714 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C38449E ADDRESS DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 TIMESTAMP PUSH2 0x88B SWAP2 SWAP1 PUSH2 0x1A6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E0 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x966 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP6 PUSH1 0x1 DUP11 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F1 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST POP PUSH1 0x0 DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA9F JUMPI PUSH2 0xA9E PUSH2 0x1285 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE1 SWAP3 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP3 PUSH1 0x1 DUP11 ADDRESS DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAF SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBED DUP3 PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFD DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3B DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC58 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP2 EQ PUSH2 0xC7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8E DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD6 JUMPI PUSH2 0xCD5 PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCF2 JUMPI PUSH2 0xCF1 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD27 DUP12 DUP3 DUP13 ADD PUSH2 0xC49 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0xD38 DUP12 DUP3 DUP13 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xD65 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xD94 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB7 JUMPI PUSH2 0xDB6 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0xDC3 DUP12 DUP3 DUP13 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 DUP3 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF0 DUP2 PUSH2 0xDD5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0D DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE29 JUMPI PUSH2 0xE28 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE37 DUP5 DUP3 DUP6 ADD PUSH2 0xDFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xE89 DUP3 PUSH2 0xE40 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEA8 JUMPI PUSH2 0xEA7 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBB PUSH2 0xC1E JUMP JUMPDEST SWAP1 POP PUSH2 0xEC7 DUP3 DUP3 PUSH2 0xE80 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0B PUSH2 0xF06 DUP5 PUSH2 0xECC JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF2E JUMPI PUSH2 0xF2D PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF57 JUMPI DUP1 PUSH2 0xF43 DUP9 DUP3 PUSH2 0xDFE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF30 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF76 JUMPI PUSH2 0xF75 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF86 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCE PUSH2 0xFC9 DUP5 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x101A JUMPI DUP1 PUSH2 0x1006 DUP9 DUP3 PUSH2 0xC7F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFF3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1039 JUMPI PUSH2 0x1038 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1049 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1072 JUMPI PUSH2 0x1071 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH2 0x107B DUP3 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA PUSH2 0x10A5 DUP5 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH2 0x10D1 DUP5 DUP3 DUP6 PUSH2 0x1088 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10EE JUMPI PUSH2 0x10ED PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1120 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x114B DUP8 DUP3 DUP9 ADD PUSH2 0xF61 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1178 DUP8 DUP3 DUP9 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1199 JUMPI PUSH2 0x1198 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x11A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1024 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11C6 JUMPI PUSH2 0x11C5 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x11D2 DUP8 DUP3 DUP9 ADD PUSH2 0x10D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11F3 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1202 DUP5 DUP3 DUP6 ADD PUSH2 0xC49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1230 PUSH2 0x122B PUSH2 0x1226 DUP5 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP3 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1264 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x125B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EA DUP4 DUP4 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1305 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0xC49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP4 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1331 DUP3 PUSH2 0x12C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH2 0x1347 DUP3 DUP5 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x1351 DUP9 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP8 POP PUSH2 0x135C DUP4 PUSH2 0x130D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1335 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1392 DUP2 DUP9 DUP11 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x13A7 DUP2 DUP7 DUP9 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x13BC DUP2 DUP5 DUP7 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D8 DUP2 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1402 DUP5 DUP3 DUP6 ADD PUSH2 0x13C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x143C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x1443 JUMP JUMPDEST DUP2 EQ PUSH2 0x1463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1475 DUP2 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149F DUP5 DUP3 DUP6 ADD PUSH2 0x1466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652073656E646572206D7573742062652042616C616E63657220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x5661756C74210000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH1 0x26 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1520 DUP3 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1544 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0xE51 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0xC32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159F PUSH2 0x159A DUP5 PUSH2 0x154B JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15C2 JUMPI PUSH2 0x15C1 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15EB JUMPI DUP1 PUSH2 0x15D7 DUP9 DUP3 PUSH2 0x1577 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15C4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x160A JUMPI PUSH2 0x1609 PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x161A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x158C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1666 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1693 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x16C0 DUP7 DUP3 DUP8 ADD PUSH2 0x15F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1726 PUSH1 0x26 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1731 DUP3 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1755 DUP2 PUSH2 0x1719 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1792 PUSH1 0x20 DUP4 PUSH2 0x14A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x179D DUP3 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C1 DUP2 PUSH2 0x1785 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E3 DUP2 PUSH2 0x17C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180F DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181F DUP2 PUSH2 0x1804 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP4 DUP4 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1855 DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x185F DUP2 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x186A DUP4 PUSH2 0x17F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189B JUMPI DUP2 MLOAD PUSH2 0x1882 DUP9 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP8 POP PUSH2 0x188D DUP4 PUSH2 0x183D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x186E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DD DUP2 PUSH2 0xC5E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EF DUP4 DUP4 PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1913 DUP3 PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0x191D DUP2 DUP6 PUSH2 0x18B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1928 DUP4 PUSH2 0x18C4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1959 JUMPI DUP2 MLOAD PUSH2 0x1940 DUP9 DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP8 POP PUSH2 0x194B DUP4 PUSH2 0x18FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x192C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B7 DUP3 PUSH2 0x1966 JUMP JUMPDEST PUSH2 0x19C1 DUP2 DUP6 PUSH2 0x1971 JUMP JUMPDEST SWAP4 POP PUSH2 0x19D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x19DA DUP2 PUSH2 0xE40 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19FA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A0C DUP2 DUP7 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A20 DUP2 DUP6 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A34 DUP2 DUP5 PUSH2 0x19AC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A79 DUP3 PUSH2 0xC5E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP4 PUSH2 0xC5E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A3F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AC7 PUSH2 0x1AC2 PUSH2 0x1ABD DUP5 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B10 DUP3 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1B1A DUP2 DUP6 PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B25 DUP4 PUSH2 0x1AE8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B56 JUMPI DUP2 MLOAD PUSH2 0x1B3D DUP9 DUP3 PUSH2 0x12DE JUMP JUMPDEST SWAP8 POP PUSH2 0x1B48 DUP4 PUSH2 0x1AF8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1B29 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1B78 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x1B85 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1ACE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B97 DUP2 DUP7 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BA6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x1BB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x140B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD0 PUSH2 0x1BCB DUP5 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0xC9E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C1C JUMPI DUP1 PUSH2 0x1C08 DUP9 DUP3 PUSH2 0x13C9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0xC94 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1C4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0xC28 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C88 JUMPI PUSH2 0x1C87 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH2 0x1C94 DUP5 DUP3 DUP6 ADD PUSH2 0x1C26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT STOP SAR 0xCF 0xC8 BYTE DUP7 SWAP11 PUSH10 0x2376EB4E5FBF942FDF8E PUSH13 0x2F97D354D041D0F3DB58129164 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"517:3289:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;578:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;795:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3647:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:10;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2799:840:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;616:19:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;578:31;;;;;;;;;;;;;:::o;795:491::-;1094:13:10;:11;:13::i;:::-;1025:22:12::1;1063:1;1050:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1025:40;;1076:24;1117:1;1103:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:43;;1151:11;1132:6;1139:1;1132:9;;;;;;;;:::i;:::-;;;;;;;:31;;;;;;;;;::::0;::::1;1187:12;1174:7;1182:1;1174:10;;;;;;;;:::i;:::-;;;;;;;:25;;;::::0;::::1;1212:66;1227:6;1235:7;1255:5;;1262;;1269:7;;1244:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1212:14;:66::i;:::-;1014:272;;795:491:::0;;;;;;;;:::o;3647:156::-;1094:13:10;:11;:13::i;:::-;3731:5:12::1;:14;;;3746:16;;;;;;;;;;;3764:5;:15;;;3788:4;3764:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3731:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3647:156:::0;:::o;1824:101:10:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2799:840:12:-;3029:5;;;;;;;;;;;3007:28;;:10;:28;;;2999:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3146:22;3170;3194:24;3233:8;3222:55;;;;;;;;;;;;:::i;:::-;3145:132;;;;;;3391:23;3417:7;3425:1;3417:10;;;;;;;;:::i;:::-;;;;;;;;3391:36;;3478:57;3496:5;3503;3510:7;3519:15;3478:17;:57::i;:::-;3584:6;3591:1;3584:9;;;;;;;;:::i;:::-;;;;;;;;3577:26;;;3612:5;;;;;;;;;;;3620:7;3628:1;3620:10;;;;;;;;:::i;:::-;;;;;;;;3577:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2988:651;;;;2799:840;;;;:::o;2074:198:10:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;616:19:12:-;;;;;;;;;;;;;:::o;1359:130:10:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2586:205:12:-;2735:5;;;;;;;;;;;:15;;;2751:4;2757:6;2765:7;2774:8;2735:48;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2586:205;;;:::o;2426:187:10:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;1294:1284:12:-;1430:13;1464:10;1446:15;:28;;;;:::i;:::-;1430:44;;1568:32;1620:7;1628:1;1620:10;;;;;;;;:::i;:::-;;;;;;;;1568:63;;1642:33;1695:7;1703:1;1695:10;;;;;;;;:::i;:::-;;;;;;;;1642:64;;1726:5;1732:1;1726:8;;;;;;;;:::i;:::-;;;;;;;;1719:24;;;1752:15;1770:6;1719:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1864:15;:40;;;1919:6;1941:1;2019:5;2048:4;2069:8;1864:224;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2131:14;2155:5;2161:1;2155:8;;;;;;;;:::i;:::-;;;;;;;;2148:26;;;2183:4;2148:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:58;;2254:5;2260:1;2254:8;;;;;;;;:::i;:::-;;;;;;;;2247:24;;;2280:16;2299:9;2247:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2393:16;:41;;;2449:9;2474:1;2491:5;2520:4;2541:8;2393:167;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1417:1161;;;;1294:1284;;;;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:117;1781:1;1778;1771:12;1795:117;1904:1;1901;1894:12;1935:568;2008:8;2018:6;2068:3;2061:4;2053:6;2049:17;2045:27;2035:122;;2076:79;;:::i;:::-;2035:122;2189:6;2176:20;2166:30;;2219:18;2211:6;2208:30;2205:117;;;2241:79;;:::i;:::-;2205:117;2355:4;2347:6;2343:17;2331:29;;2409:3;2401:4;2393:6;2389:17;2379:8;2375:32;2372:41;2369:128;;;2416:79;;:::i;:::-;2369:128;1935:568;;;;;:::o;2509:1601::-;2685:6;2693;2701;2709;2717;2725;2733;2741;2790:3;2778:9;2769:7;2765:23;2761:33;2758:120;;;2797:79;;:::i;:::-;2758:120;2917:1;2942:53;2987:7;2978:6;2967:9;2963:22;2942:53;:::i;:::-;2932:63;;2888:117;3044:2;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3015:118;3200:2;3189:9;3185:18;3172:32;3231:18;3223:6;3220:30;3217:117;;;3253:79;;:::i;:::-;3217:117;3366:80;3438:7;3429:6;3418:9;3414:22;3366:80;:::i;:::-;3348:98;;;;3143:313;3523:2;3512:9;3508:18;3495:32;3554:18;3546:6;3543:30;3540:117;;;3576:79;;:::i;:::-;3540:117;3689:80;3761:7;3752:6;3741:9;3737:22;3689:80;:::i;:::-;3671:98;;;;3466:313;3846:3;3835:9;3831:19;3818:33;3878:18;3870:6;3867:30;3864:117;;;3900:79;;:::i;:::-;3864:117;4013:80;4085:7;4076:6;4065:9;4061:22;4013:80;:::i;:::-;3995:98;;;;3789:314;2509:1601;;;;;;;;;;;:::o;4116:110::-;4167:7;4196:24;4214:5;4196:24;:::i;:::-;4185:35;;4116:110;;;:::o;4232:150::-;4319:38;4351:5;4319:38;:::i;:::-;4312:5;4309:49;4299:77;;4372:1;4369;4362:12;4299:77;4232:150;:::o;4388:167::-;4448:5;4486:6;4473:20;4464:29;;4502:47;4543:5;4502:47;:::i;:::-;4388:167;;;;:::o;4561:357::-;4634:6;4683:2;4671:9;4662:7;4658:23;4654:32;4651:119;;;4689:79;;:::i;:::-;4651:119;4809:1;4834:67;4893:7;4884:6;4873:9;4869:22;4834:67;:::i;:::-;4824:77;;4780:131;4561:357;;;;:::o;4924:102::-;4965:6;5016:2;5012:7;5007:2;5000:5;4996:14;4992:28;4982:38;;4924:102;;;:::o;5032:180::-;5080:77;5077:1;5070:88;5177:4;5174:1;5167:15;5201:4;5198:1;5191:15;5218:281;5301:27;5323:4;5301:27;:::i;:::-;5293:6;5289:40;5431:6;5419:10;5416:22;5395:18;5383:10;5380:34;5377:62;5374:88;;;5442:18;;:::i;:::-;5374:88;5482:10;5478:2;5471:22;5261:238;5218:281;;:::o;5505:129::-;5539:6;5566:20;;:::i;:::-;5556:30;;5595:33;5623:4;5615:6;5595:33;:::i;:::-;5505:129;;;:::o;5640:325::-;5731:4;5821:18;5813:6;5810:30;5807:56;;;5843:18;;:::i;:::-;5807:56;5893:4;5885:6;5881:17;5873:25;;5953:4;5947;5943:15;5935:23;;5640:325;;;:::o;5996:752::-;6106:5;6131:95;6147:78;6218:6;6147:78;:::i;:::-;6131:95;:::i;:::-;6122:104;;6246:5;6275:6;6268:5;6261:21;6309:4;6302:5;6298:16;6291:23;;6362:4;6354:6;6350:17;6342:6;6338:30;6391:3;6383:6;6380:15;6377:122;;;6410:79;;:::i;:::-;6377:122;6525:6;6508:234;6542:6;6537:3;6534:15;6508:234;;;6617:3;6646:51;6693:3;6681:10;6646:51;:::i;:::-;6641:3;6634:64;6727:4;6722:3;6718:14;6711:21;;6584:158;6568:4;6563:3;6559:14;6552:21;;6508:234;;;6512:21;6112:636;;5996:752;;;;;:::o;6779:398::-;6864:5;6913:3;6906:4;6898:6;6894:17;6890:27;6880:122;;6921:79;;:::i;:::-;6880:122;7038:6;7025:20;7063:108;7167:3;7159:6;7152:4;7144:6;7140:17;7063:108;:::i;:::-;7054:117;;6870:307;6779:398;;;;:::o;7183:311::-;7260:4;7350:18;7342:6;7339:30;7336:56;;;7372:18;;:::i;:::-;7336:56;7422:4;7414:6;7410:17;7402:25;;7482:4;7476;7472:15;7464:23;;7183:311;;;:::o;7517:710::-;7613:5;7638:81;7654:64;7711:6;7654:64;:::i;:::-;7638:81;:::i;:::-;7629:90;;7739:5;7768:6;7761:5;7754:21;7802:4;7795:5;7791:16;7784:23;;7855:4;7847:6;7843:17;7835:6;7831:30;7884:3;7876:6;7873:15;7870:122;;;7903:79;;:::i;:::-;7870:122;8018:6;8001:220;8035:6;8030:3;8027:15;8001:220;;;8110:3;8139:37;8172:3;8160:10;8139:37;:::i;:::-;8134:3;8127:50;8206:4;8201:3;8197:14;8190:21;;8077:144;8061:4;8056:3;8052:14;8045:21;;8001:220;;;8005:21;7619:608;;7517:710;;;;;:::o;8250:370::-;8321:5;8370:3;8363:4;8355:6;8351:17;8347:27;8337:122;;8378:79;;:::i;:::-;8337:122;8495:6;8482:20;8520:94;8610:3;8602:6;8595:4;8587:6;8583:17;8520:94;:::i;:::-;8511:103;;8327:293;8250:370;;;;:::o;8626:117::-;8735:1;8732;8725:12;8749:307;8810:4;8900:18;8892:6;8889:30;8886:56;;;8922:18;;:::i;:::-;8886:56;8960:29;8982:6;8960:29;:::i;:::-;8952:37;;9044:4;9038;9034:15;9026:23;;8749:307;;;:::o;9062:146::-;9159:6;9154:3;9149;9136:30;9200:1;9191:6;9186:3;9182:16;9175:27;9062:146;;;:::o;9214:423::-;9291:5;9316:65;9332:48;9373:6;9332:48;:::i;:::-;9316:65;:::i;:::-;9307:74;;9404:6;9397:5;9390:21;9442:4;9435:5;9431:16;9480:3;9471:6;9466:3;9462:16;9459:25;9456:112;;;9487:79;;:::i;:::-;9456:112;9577:54;9624:6;9619:3;9614;9577:54;:::i;:::-;9297:340;9214:423;;;;;:::o;9656:338::-;9711:5;9760:3;9753:4;9745:6;9741:17;9737:27;9727:122;;9768:79;;:::i;:::-;9727:122;9885:6;9872:20;9910:78;9984:3;9976:6;9969:4;9961:6;9957:17;9910:78;:::i;:::-;9901:87;;9717:277;9656:338;;;;:::o;10000:1601::-;10184:6;10192;10200;10208;10257:3;10245:9;10236:7;10232:23;10228:33;10225:120;;;10264:79;;:::i;:::-;10225:120;10412:1;10401:9;10397:17;10384:31;10442:18;10434:6;10431:30;10428:117;;;10464:79;;:::i;:::-;10428:117;10569:92;10653:7;10644:6;10633:9;10629:22;10569:92;:::i;:::-;10559:102;;10355:316;10738:2;10727:9;10723:18;10710:32;10769:18;10761:6;10758:30;10755:117;;;10791:79;;:::i;:::-;10755:117;10896:78;10966:7;10957:6;10946:9;10942:22;10896:78;:::i;:::-;10886:88;;10681:303;11051:2;11040:9;11036:18;11023:32;11082:18;11074:6;11071:30;11068:117;;;11104:79;;:::i;:::-;11068:117;11209:78;11279:7;11270:6;11259:9;11255:22;11209:78;:::i;:::-;11199:88;;10994:303;11364:2;11353:9;11349:18;11336:32;11395:18;11387:6;11384:30;11381:117;;;11417:79;;:::i;:::-;11381:117;11522:62;11576:7;11567:6;11556:9;11552:22;11522:62;:::i;:::-;11512:72;;11307:287;10000:1601;;;;;;;:::o;11607:329::-;11666:6;11715:2;11703:9;11694:7;11690:23;11686:32;11683:119;;;11721:79;;:::i;:::-;11683:119;11841:1;11866:53;11911:7;11902:6;11891:9;11887:22;11866:53;:::i;:::-;11856:63;;11812:117;11607:329;;;;:::o;11942:60::-;11970:3;11991:5;11984:12;;11942:60;;;:::o;12008:142::-;12058:9;12091:53;12109:34;12118:24;12136:5;12118:24;:::i;:::-;12109:34;:::i;:::-;12091:53;:::i;:::-;12078:66;;12008:142;;;:::o;12156:126::-;12206:9;12239:37;12270:5;12239:37;:::i;:::-;12226:50;;12156:126;;;:::o;12288:140::-;12352:9;12385:37;12416:5;12385:37;:::i;:::-;12372:50;;12288:140;;;:::o;12434:159::-;12535:51;12580:5;12535:51;:::i;:::-;12530:3;12523:64;12434:159;;:::o;12599:250::-;12706:4;12744:2;12733:9;12729:18;12721:26;;12757:85;12839:1;12828:9;12824:17;12815:6;12757:85;:::i;:::-;12599:250;;;;:::o;12855:180::-;12903:77;12900:1;12893:88;13000:4;12997:1;12990:15;13024:4;13021:1;13014:15;13041:184;13140:11;13174:6;13169:3;13162:19;13214:4;13209:3;13205:14;13190:29;;13041:184;;;;:::o;13231:102::-;13300:4;13323:3;13315:11;;13231:102;;;:::o;13339:108::-;13416:24;13434:5;13416:24;:::i;:::-;13411:3;13404:37;13339:108;;:::o;13453:179::-;13522:10;13543:46;13585:3;13577:6;13543:46;:::i;:::-;13621:4;13616:3;13612:14;13598:28;;13453:179;;;;:::o;13638:122::-;13690:5;13715:39;13750:2;13745:3;13741:12;13736:3;13715:39;:::i;:::-;13706:48;;13638:122;;;;:::o;13766:115::-;13838:4;13870;13865:3;13861:14;13853:22;;13766:115;;;:::o;13917:699::-;14046:3;14069:86;14148:6;14143:3;14069:86;:::i;:::-;14062:93;;14179:58;14231:5;14179:58;:::i;:::-;14260:7;14291:1;14276:315;14301:6;14298:1;14295:13;14276:315;;;14371:42;14406:6;14397:7;14371:42;:::i;:::-;14433:63;14492:3;14477:13;14433:63;:::i;:::-;14426:70;;14519:62;14574:6;14519:62;:::i;:::-;14509:72;;14336:255;14323:1;14320;14316:9;14311:14;;14276:315;;;14280:14;14607:3;14600:10;;14051:565;;13917:699;;;;;:::o;14622:955::-;14951:4;14989:2;14978:9;14974:18;14966:26;;15038:9;15032:4;15028:20;15024:1;15013:9;15009:17;15002:47;15066:118;15179:4;15170:6;15162;15066:118;:::i;:::-;15058:126;;15231:9;15225:4;15221:20;15216:2;15205:9;15201:18;15194:48;15259:118;15372:4;15363:6;15355;15259:118;:::i;:::-;15251:126;;15424:9;15418:4;15414:20;15409:2;15398:9;15394:18;15387:48;15452:118;15565:4;15556:6;15548;15452:118;:::i;:::-;15444:126;;14622:955;;;;;;;;;:::o;15583:143::-;15640:5;15671:6;15665:13;15656:22;;15687:33;15714:5;15687:33;:::i;:::-;15583:143;;;;:::o;15732:351::-;15802:6;15851:2;15839:9;15830:7;15826:23;15822:32;15819:119;;;15857:79;;:::i;:::-;15819:119;15977:1;16002:64;16058:7;16049:6;16038:9;16034:22;16002:64;:::i;:::-;15992:74;;15948:128;15732:351;;;;:::o;16089:118::-;16176:24;16194:5;16176:24;:::i;:::-;16171:3;16164:37;16089:118;;:::o;16213:332::-;16334:4;16372:2;16361:9;16357:18;16349:26;;16385:71;16453:1;16442:9;16438:17;16429:6;16385:71;:::i;:::-;16466:72;16534:2;16523:9;16519:18;16510:6;16466:72;:::i;:::-;16213:332;;;;;:::o;16551:90::-;16585:7;16628:5;16621:13;16614:21;16603:32;;16551:90;;;:::o;16647:116::-;16717:21;16732:5;16717:21;:::i;:::-;16710:5;16707:32;16697:60;;16753:1;16750;16743:12;16697:60;16647:116;:::o;16769:137::-;16823:5;16854:6;16848:13;16839:22;;16870:30;16894:5;16870:30;:::i;:::-;16769:137;;;;:::o;16912:345::-;16979:6;17028:2;17016:9;17007:7;17003:23;16999:32;16996:119;;;17034:79;;:::i;:::-;16996:119;17154:1;17179:61;17232:7;17223:6;17212:9;17208:22;17179:61;:::i;:::-;17169:71;;17125:125;16912:345;;;;:::o;17263:169::-;17347:11;17381:6;17376:3;17369:19;17421:4;17416:3;17412:14;17397:29;;17263:169;;;;:::o;17438:225::-;17578:34;17574:1;17566:6;17562:14;17555:58;17647:8;17642:2;17634:6;17630:15;17623:33;17438:225;:::o;17669:366::-;17811:3;17832:67;17896:2;17891:3;17832:67;:::i;:::-;17825:74;;17908:93;17997:3;17908:93;:::i;:::-;18026:2;18021:3;18017:12;18010:19;;17669:366;;;:::o;18041:419::-;18207:4;18245:2;18234:9;18230:18;18222:26;;18294:9;18288:4;18284:20;18280:1;18269:9;18265:17;18258:47;18322:131;18448:4;18322:131;:::i;:::-;18314:139;;18041:419;;;:::o;18466:311::-;18543:4;18633:18;18625:6;18622:30;18619:56;;;18655:18;;:::i;:::-;18619:56;18705:4;18697:6;18693:17;18685:25;;18765:4;18759;18755:15;18747:23;;18466:311;;;:::o;18783:143::-;18840:5;18871:6;18865:13;18856:22;;18887:33;18914:5;18887:33;:::i;:::-;18783:143;;;;:::o;18949:732::-;19056:5;19081:81;19097:64;19154:6;19097:64;:::i;:::-;19081:81;:::i;:::-;19072:90;;19182:5;19211:6;19204:5;19197:21;19245:4;19238:5;19234:16;19227:23;;19298:4;19290:6;19286:17;19278:6;19274:30;19327:3;19319:6;19316:15;19313:122;;;19346:79;;:::i;:::-;19313:122;19461:6;19444:231;19478:6;19473:3;19470:15;19444:231;;;19553:3;19582:48;19626:3;19614:10;19582:48;:::i;:::-;19577:3;19570:61;19660:4;19655:3;19651:14;19644:21;;19520:155;19504:4;19499:3;19495:14;19488:21;;19444:231;;;19448:21;19062:619;;18949:732;;;;;:::o;19704:385::-;19786:5;19835:3;19828:4;19820:6;19816:17;19812:27;19802:122;;19843:79;;:::i;:::-;19802:122;19953:6;19947:13;19978:105;20079:3;20071:6;20064:4;20056:6;20052:17;19978:105;:::i;:::-;19969:114;;19792:297;19704:385;;;;:::o;20095:1272::-;20258:6;20266;20274;20323:2;20311:9;20302:7;20298:23;20294:32;20291:119;;;20329:79;;:::i;:::-;20291:119;20470:1;20459:9;20455:17;20449:24;20500:18;20492:6;20489:30;20486:117;;;20522:79;;:::i;:::-;20486:117;20627:89;20708:7;20699:6;20688:9;20684:22;20627:89;:::i;:::-;20617:99;;20420:306;20786:2;20775:9;20771:18;20765:25;20817:18;20809:6;20806:30;20803:117;;;20839:79;;:::i;:::-;20803:117;20944:89;21025:7;21016:6;21005:9;21001:22;20944:89;:::i;:::-;20934:99;;20736:307;21103:2;21092:9;21088:18;21082:25;21134:18;21126:6;21123:30;21120:117;;;21156:79;;:::i;:::-;21120:117;21261:89;21342:7;21333:6;21322:9;21318:22;21261:89;:::i;:::-;21251:99;;21053:307;20095:1272;;;;;:::o;21373:225::-;21513:34;21509:1;21501:6;21497:14;21490:58;21582:8;21577:2;21569:6;21565:15;21558:33;21373:225;:::o;21604:366::-;21746:3;21767:67;21831:2;21826:3;21767:67;:::i;:::-;21760:74;;21843:93;21932:3;21843:93;:::i;:::-;21961:2;21956:3;21952:12;21945:19;;21604:366;;;:::o;21976:419::-;22142:4;22180:2;22169:9;22165:18;22157:26;;22229:9;22223:4;22219:20;22215:1;22204:9;22200:17;22193:47;22257:131;22383:4;22257:131;:::i;:::-;22249:139;;21976:419;;;:::o;22401:182::-;22541:34;22537:1;22529:6;22525:14;22518:58;22401:182;:::o;22589:366::-;22731:3;22752:67;22816:2;22811:3;22752:67;:::i;:::-;22745:74;;22828:93;22917:3;22828:93;:::i;:::-;22946:2;22941:3;22937:12;22930:19;;22589:366;;;:::o;22961:419::-;23127:4;23165:2;23154:9;23150:18;23142:26;;23214:9;23208:4;23204:20;23200:1;23189:9;23185:17;23178:47;23242:131;23368:4;23242:131;:::i;:::-;23234:139;;22961:419;;;:::o;23386:147::-;23457:9;23490:37;23521:5;23490:37;:::i;:::-;23477:50;;23386:147;;;:::o;23539:173::-;23647:58;23699:5;23647:58;:::i;:::-;23642:3;23635:71;23539:173;;:::o;23718:128::-;23799:6;23833:5;23827:12;23817:22;;23718:128;;;:::o;23852:146::-;23933:4;23956:3;23948:11;;23986:4;23981:3;23977:14;23969:22;;23852:146;;;:::o;24004:140::-;24068:9;24101:37;24132:5;24101:37;:::i;:::-;24088:50;;24004:140;;;:::o;24150:149::-;24241:51;24286:5;24241:51;:::i;:::-;24236:3;24229:64;24150:149;;:::o;24305:207::-;24388:10;24409:60;24465:3;24457:6;24409:60;:::i;:::-;24501:4;24496:3;24492:14;24478:28;;24305:207;;;;:::o;24518:127::-;24602:4;24634;24629:3;24625:14;24617:22;;24518:127;;;:::o;24689:802::-;24822:3;24851:68;24913:5;24851:68;:::i;:::-;24935:86;25014:6;25009:3;24935:86;:::i;:::-;24928:93;;25045:70;25109:5;25045:70;:::i;:::-;25138:7;25169:1;25154:312;25179:6;25176:1;25173:13;25154:312;;;25255:6;25249:13;25282:77;25355:3;25340:13;25282:77;:::i;:::-;25275:84;;25382:74;25449:6;25382:74;:::i;:::-;25372:84;;25214:252;25201:1;25198;25194:9;25189:14;;25154:312;;;25158:14;25482:3;25475:10;;24827:664;;;24689:802;;;;:::o;25497:114::-;25564:6;25598:5;25592:12;25582:22;;25497:114;;;:::o;25617:184::-;25716:11;25750:6;25745:3;25738:19;25790:4;25785:3;25781:14;25766:29;;25617:184;;;;:::o;25807:132::-;25874:4;25897:3;25889:11;;25927:4;25922:3;25918:14;25910:22;;25807:132;;;:::o;25945:108::-;26022:24;26040:5;26022:24;:::i;:::-;26017:3;26010:37;25945:108;;:::o;26059:179::-;26128:10;26149:46;26191:3;26183:6;26149:46;:::i;:::-;26227:4;26222:3;26218:14;26204:28;;26059:179;;;;:::o;26244:113::-;26314:4;26346;26341:3;26337:14;26329:22;;26244:113;;;:::o;26393:732::-;26512:3;26541:54;26589:5;26541:54;:::i;:::-;26611:86;26690:6;26685:3;26611:86;:::i;:::-;26604:93;;26721:56;26771:5;26721:56;:::i;:::-;26800:7;26831:1;26816:284;26841:6;26838:1;26835:13;26816:284;;;26917:6;26911:13;26944:63;27003:3;26988:13;26944:63;:::i;:::-;26937:70;;27030:60;27083:6;27030:60;:::i;:::-;27020:70;;26876:224;26863:1;26860;26856:9;26851:14;;26816:284;;;26820:14;27116:3;27109:10;;26517:608;;;26393:732;;;;:::o;27131:98::-;27182:6;27216:5;27210:12;27200:22;;27131:98;;;:::o;27235:168::-;27318:11;27352:6;27347:3;27340:19;27392:4;27387:3;27383:14;27368:29;;27235:168;;;;:::o;27409:246::-;27490:1;27500:113;27514:6;27511:1;27508:13;27500:113;;;27599:1;27594:3;27590:11;27584:18;27580:1;27575:3;27571:11;27564:39;27536:2;27533:1;27529:10;27524:15;;27500:113;;;27647:1;27638:6;27633:3;27629:16;27622:27;27471:184;27409:246;;;:::o;27661:373::-;27747:3;27775:38;27807:5;27775:38;:::i;:::-;27829:70;27892:6;27887:3;27829:70;:::i;:::-;27822:77;;27908:65;27966:6;27961:3;27954:4;27947:5;27943:16;27908:65;:::i;:::-;27998:29;28020:6;27998:29;:::i;:::-;27993:3;27989:39;27982:46;;27751:283;27661:373;;;;:::o;28040:1012::-;28370:4;28408:3;28397:9;28393:19;28385:27;;28422:92;28511:1;28500:9;28496:17;28487:6;28422:92;:::i;:::-;28561:9;28555:4;28551:20;28546:2;28535:9;28531:18;28524:48;28589:122;28706:4;28697:6;28589:122;:::i;:::-;28581:130;;28758:9;28752:4;28748:20;28743:2;28732:9;28728:18;28721:48;28786:108;28889:4;28880:6;28786:108;:::i;:::-;28778:116;;28941:9;28935:4;28931:20;28926:2;28915:9;28911:18;28904:48;28969:76;29040:4;29031:6;28969:76;:::i;:::-;28961:84;;28040:1012;;;;;;;:::o;29058:180::-;29106:77;29103:1;29096:88;29203:4;29200:1;29193:15;29227:4;29224:1;29217:15;29244:191;29284:3;29303:20;29321:1;29303:20;:::i;:::-;29298:25;;29337:20;29355:1;29337:20;:::i;:::-;29332:25;;29380:1;29377;29373:9;29366:16;;29401:3;29398:1;29395:10;29392:36;;;29408:18;;:::i;:::-;29392:36;29244:191;;;;:::o;29441:85::-;29486:7;29515:5;29504:16;;29441:85;;;:::o;29532:158::-;29590:9;29623:61;29641:42;29650:32;29676:5;29650:32;:::i;:::-;29641:42;:::i;:::-;29623:61;:::i;:::-;29610:74;;29532:158;;;:::o;29696:147::-;29791:45;29830:5;29791:45;:::i;:::-;29786:3;29779:58;29696:147;;:::o;29849:114::-;29916:6;29950:5;29944:12;29934:22;;29849:114;;;:::o;29969:132::-;30036:4;30059:3;30051:11;;30089:4;30084:3;30080:14;30072:22;;29969:132;;;:::o;30107:113::-;30177:4;30209;30204:3;30200:14;30192:22;;30107:113;;;:::o;30256:732::-;30375:3;30404:54;30452:5;30404:54;:::i;:::-;30474:86;30553:6;30548:3;30474:86;:::i;:::-;30467:93;;30584:56;30634:5;30584:56;:::i;:::-;30663:7;30694:1;30679:284;30704:6;30701:1;30698:13;30679:284;;;30780:6;30774:13;30807:63;30866:3;30851:13;30807:63;:::i;:::-;30800:70;;30893:60;30946:6;30893:60;:::i;:::-;30883:70;;30739:224;30726:1;30723;30719:9;30714:14;;30679:284;;;30683:14;30979:3;30972:10;;30380:608;;;30256:732;;;;:::o;30994:831::-;31257:4;31295:3;31284:9;31280:19;31272:27;;31309:71;31377:1;31366:9;31362:17;31353:6;31309:71;:::i;:::-;31390:80;31466:2;31455:9;31451:18;31442:6;31390:80;:::i;:::-;31517:9;31511:4;31507:20;31502:2;31491:9;31487:18;31480:48;31545:108;31648:4;31639:6;31545:108;:::i;:::-;31537:116;;31663:72;31731:2;31720:9;31716:18;31707:6;31663:72;:::i;:::-;31745:73;31813:3;31802:9;31798:19;31789:6;31745:73;:::i;:::-;30994:831;;;;;;;;:::o;31848:732::-;31955:5;31980:81;31996:64;32053:6;31996:64;:::i;:::-;31980:81;:::i;:::-;31971:90;;32081:5;32110:6;32103:5;32096:21;32144:4;32137:5;32133:16;32126:23;;32197:4;32189:6;32185:17;32177:6;32173:30;32226:3;32218:6;32215:15;32212:122;;;32245:79;;:::i;:::-;32212:122;32360:6;32343:231;32377:6;32372:3;32369:15;32343:231;;;32452:3;32481:48;32525:3;32513:10;32481:48;:::i;:::-;32476:3;32469:61;32559:4;32554:3;32550:14;32543:21;;32419:155;32403:4;32398:3;32394:14;32387:21;;32343:231;;;32347:21;31961:619;;31848:732;;;;;:::o;32603:385::-;32685:5;32734:3;32727:4;32719:6;32715:17;32711:27;32701:122;;32742:79;;:::i;:::-;32701:122;32852:6;32846:13;32877:105;32978:3;32970:6;32963:4;32955:6;32951:17;32877:105;:::i;:::-;32868:114;;32691:297;32603:385;;;;:::o;32994:554::-;33089:6;33138:2;33126:9;33117:7;33113:23;33109:32;33106:119;;;33144:79;;:::i;:::-;33106:119;33285:1;33274:9;33270:17;33264:24;33315:18;33307:6;33304:30;33301:117;;;33337:79;;:::i;:::-;33301:117;33442:89;33523:7;33514:6;33503:9;33499:22;33442:89;:::i;:::-;33432:99;;33235:306;32994:554;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","profitRecipitent()":"00affb73","receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707","renounceOwnership()":"715018a6","startArbitrage(address,uint256,address[],address[],address[])":"17c7c23a","transferOwnership(address)":"f2fde38b","vault()":"fbfa77cf","withdrawProfit(address)":"24e26241"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_profitRecipitent\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profitRecipitent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenBorrow\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path1\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"path2\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"dexPath\",\"type\":\"address[]\"}],\"name\":\"startArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ArbitrageBot.sol\":\"ArbitrageBot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ArbitrageBot.sol\":{\"keccak256\":\"0xf8a6aa892c98a63914ee37673ef2105c34ec0fb18ff616bcf047907fc9dcdfab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c74bed454e15cbe32a7f7fc88d2b2a9aa03cd4594379c0d3a128cbabca83a34\",\"dweb:/ipfs/QmPbyCHuQD7iptptDJ2xK3MU3kxKz4UPj49GTDKwtFDzLN\"]}},\"version\":1}"},"IUniswapV2Router":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ArbitrageBot.sol\":\"IUniswapV2Router\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ArbitrageBot.sol\":{\"keccak256\":\"0xf8a6aa892c98a63914ee37673ef2105c34ec0fb18ff616bcf047907fc9dcdfab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c74bed454e15cbe32a7f7fc88d2b2a9aa03cd4594379c0d3a128cbabca83a34\",\"dweb:/ipfs/QmPbyCHuQD7iptptDJ2xK3MU3kxKz4UPj49GTDKwtFDzLN\"]}},\"version\":1}"}}}}}